<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 1998-2010 by xTuple. All rights reserved. -->
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section>
  <title><indexterm significance="normal">
      <primary>screens</primary>
      <secondary>designing new</secondary>
    </indexterm>Screen</title>
  <para>To create a new custom screen, select the NEW button. The following
  window will appear:</para>
  <para><screenshot>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/uiform.png" />
        </imageobject>
        <caption>Create New Screen</caption>
      </mediaobject>
    </screenshot></para>
  <para>When creating a new custom screen, you are presented with the
  following options:</para>
  <variablelist>
    <varlistentry>
      <term>Name</term>
      <listitem>
        <para>Enter a name to describe the screen.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Notes</term>
      <listitem>
        <para>Enter some brief notes to describe the screen.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Grade</term>
      <listitem>
        <para>Specify the ranking of the screen. As with report definitions,
        the screen having the highest grade is the one that will be
        used.</para>
        <note>
          <para>Screens created with the same name as a core screen will be
          ignored. Core C++ based screens can not be over-ridden with their
          own UI. To over-ride a core screen, make a new screen with a new
          name, remove the core screen menu action from the menu, and replace
          with a new menu action that launches your new screen.</para>
        </note>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Package</term>
      <listitem>
        <para>Displays the name of the package the screen belongs to, if
        any.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Enabled</term>
      <listitem>
        <para>Select to enable the screen. If not selected, the screen will be
        disabled.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Scripts</term>
      <listitem>
        <para>Display lists any scripts associated with the screen. Scripts
        may be added/removed, enabled/disabled, and ordered according to
        need.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>To the far right of the screen, the following buttons are
  available:</para>
  <variablelist>
    <varlistentry>
      <term>CANCEL</term>
      <listitem>
        <para>Closes the screen without saving any changes.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>SAVE</term>
      <listitem>
        <para>Saves the screen definition, including any UI file which you may
        have imported. The screen definition and the UI file are both saved to
        the database.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><indexterm significance="normal">
          <primary>screens</primary>
          <secondary>using qt designer with</secondary>
        </indexterm><indexterm significance="normal">
          <primary>qt designer</primary>
          <secondary>designing new</secondary>
        </indexterm>EDIT</term>
      <listitem>
        <para>Highlight a screen definition and then select this button to
        launch an embedded version of the Qt Designer tool. The embedded
        version of Qt Designer has been added to xTuple ERP to make screen
        editing more convenient. It is not a requirement that the embedded
        version of Qt Designer be used for building custom xTuple ERP screens.
        You may also use a standalone version of Qt Designer for this
        purpose.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>IMPORT</term>
      <listitem>
        <para>Select to import the UI file you want to use as the basis for
        your custom screen. UI files should be created using Qt Designer. When
        they are imported using this option, they are stored in the database
        and associated with the specified screen definition. If you ever want
        or need to edit the UI file and do not have a copy stored locally, you
        can simply export the UI file to your file system&mdash;and then
        re-import it when you are done editing. Whenever you import a UI file,
        it automatically replaces whatever UI file was in place before
        it.</para>
        <warning>
          <para>Every time you import a UI file, the new UI file replaces
          whatever UI file was imported previously&mdash;regardless of the
          name of the file(s).</para>
        </warning>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>EXPORT</term>
      <listitem>
        <para>Select to export the UI file associated with the screen. You
        would use this option if you need or want to edit the UI file and do
        not have a copy stored locally on your system. Once exported, the UI
        can be edited using Qt Designer&mdash;and then re-imported into the
        database using the import option. Whenever you import a UI file, it
        automatically replaces whatever UI file was in place before it.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>NEW</term>
      <listitem>
        <para>Opens screen for creating a new script. Read more about creating
        scripts in <xref linkend="scriptsTitle" />.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>EDIT</term>
      <listitem>
        <para>Enables you to edit highlighted scripts. The edit screen is the
        same as that for creating a new script&mdash;except that when editing,
        the fields will contain script. Double-clicking on a script will also
        bring you to the editing screen.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>DELETE</term>
      <listitem>
        <para>Highlight a script and then select this button to remove the
        script from the list.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>To specify commands for the screen, select the "Commands" tab. The
  following screen will appear:</para>
  <para><mediaobject>
      <imageobject>
        <imagedata fileref="images/uiform_cmdTab.png" />
      </imageobject>
      <caption>New Screen Commands</caption>
    </mediaobject>When specifying commands, you are presented with the
  following options:</para>
  <variablelist>
    <varlistentry>
      <term>Commands</term>
      <listitem>
        <para>Displays the list of commands associated with the screen.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>To the far right of the screen, the following buttons are
  available:</para>
  <variablelist>
    <varlistentry>
      <term>NEW</term>
      <listitem>
        <para>Opens screen for creating a new command. The creation of custom
        commands is described in <xref linkend="customCommandTitle" />.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>EDIT</term>
      <listitem>
        <para>Enables you to edit highlighted commands. The edit screen is the
        same as that for creating a new command&mdash;except that when
        editing, the fields will contain command information. Double-clicking
        on a command will also bring you to the editing screen.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>DELETE</term>
      <listitem>
        <para>Highlight a command and then select this button to remove the
        command from the list.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <xi:include href="customCommand.xml" xpointer="element(/1)"
              xmlns:xi="http://www.w3.org/2001/XInclude" />
</section>
