<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 1998-2013 by xTuple. All rights reserved. -->
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section id="metasqlEditor">
  <title><indexterm significance="normal">
      <primary>metasql</primary>

      <secondary>editor for</secondary>
    </indexterm>MetaSQL Editor</title>

  <para>To create a new MetaSQL statement, select the
  <guibutton>NEW</guibutton> button. The following screen will appear:</para>

  <para><screenshot>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/metasqlEditor.png"/>
        </imageobject>

        <caption>Create New MetaSQL Statement</caption>
      </mediaobject>
    </screenshot></para>

  <para>The MetaSQL Editor can be used to create new MetaSQL statements or
  edit those already found on the MetaSQL Statements master list. Once
  created, new MetaSQL statements can be added to the master list, making them
  available for use in the application. To edit an existing MetaSQL statement,
  simply load the statement into the editor from the database you are
  currently connected to. Then edit the statement and save it back to the
  database once editing is complete.</para>

  <para>The body of a MetaSQL statement is an SQL <literal>SELECT</literal>,
  <literal>UPDATE</literal> or <literal>DELETE</literal> statement. (The user
  must have been granted the <literal>ExecuteMetaSQL</literal> privilege to
  run the <literal>UPDATE</literal> or <literal>DELETE</literal> statement.)
  Passed parameters can be utilized to control how the statement operates
  (using an <literal>IF</literal>, <literal>ELSE</literal>,
  <literal>ENDIF</literal> construct) and their values can be inserted. The
  core xTuple PostBooks Edition contains many statements that can be used as
  examples.</para>

  <para>The MetaSQL Editor toolbar has icon shortcuts for new, open, save,
  undo, cut, copy, and paste. The <guimenu>Editor</guimenu> menu has many
  options to simplify the development of MetaSQL statements, including viewing
  and editing the parameter list, executing the query, and viewing the query
  results.</para>

  <para>When saving a new MetaSQL statement, you are presented with the
  following options:</para>

  <variablelist>
    <varlistentry>
      <term>Save (Database)</term>

      <listitem>
        <para>Saves the MetaSQL statement into the database you are currently
        connected to, with the option of also saving the statement to a
        file.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Save (File)</term>

      <listitem>
        <para>Saves the MetaSQL statement to a file.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Save As (Database or File)</term>

      <listitem>
        <para>Allows you to save the MetaSQL statement with a different name
        to either the database your are currently connected to or to a
        file.</para>
      </listitem>
    </varlistentry>
  </variablelist>

  <para>If you are saving the MetaSQL statement to the database using
  alternate information (i.e., <guimenuitem>Save As</guimenuitem>), the
  following screen will appear:</para>

  <para><screenshot>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/metasqlSave.png"/>
        </imageobject>

        <caption>Save As MetaSQL Options</caption>
      </mediaobject>
    </screenshot></para>

  <para>When saving a MetaSQL statement to the database using alternate
  information, you are presented with the following options:</para>

  <variablelist>
    <varlistentry>
      <term>Schema</term>

      <listitem>
        <para>You would normally select the "public" schema. However, there
        are situations where you may want to define the MetaSQL statement in a
        different schema.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Group</term>

      <listitem>
        <para>Enter the group for the MetaSQL statement. This is the major
        grouping for statements and normally reflects the type or source of
        information. Some examples are <literal>arHistory</literal>,
        <literal>purchaseOrders</literal>, etc.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Name</term>

      <listitem>
        <para>Enter the name for the MetaSQL statement. This is detailed name
        for the statement within the group.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Grade</term>

      <listitem>
        <para>Enter the grade number for the MetaSQL statement. If there are
        multiple MetaSQL statements with the same group/name, the one with the
        highest grade number will be used. It is a good idea to save changes
        to statements with a higher grade number so, if necessary, you can
        refer to the original statement before implementing the changes. Use
        the menu option <guimenuitem>File &gt; Save As Database</guimenuitem>
        to change the grade of a statement.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Notes</term>

      <listitem>
        <para>Enter any notes or comments related to the MetaSQL
        statement.</para>
      </listitem>
    </varlistentry>
  </variablelist>
</section>
