====================================================================
CHANGED REPORTS:
BacklogByCustomer
BacklogByParameterList
PickListWOShowLocations

 
 ====================================================================
 REPORT: BacklogByCustomer
 QUERY: head
 SELECT cust_name,
        cust_address1,
        cust_address2,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (SELECT warehous_code
             FROM warehous
            WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
          text('All Warehouses')
        <? endif ?>
        AS warehouse,
        <? if exists("showPrices") ?>
-         text('Amount $')
+         text('Amount (base)')
        <? else ?>
          text('')
        <? endif ?>
-       AS lbl_amount
+       AS lbl_amount,
+       <? if exists("showPrices") ?>
+         text('Amount (foreign)')
+       <? else ?>
+         text('')
+       <? endif ?>
+       AS lbl_foreignamount
 FROM cust
 WHERE (cust_id=<? value("cust_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohead_number, coitem_linenumber,
        formatDate(cohead_orderdate) AS f_orderdate,
        formatDate(coitem_scheddate) AS f_scheddate,
        item_number, uom_name,
        item_descrip1, item_descrip2,
        formatQty(coitem_qtyord) AS f_qtyord,
        formatQty(coitem_qtyshipped) AS f_qtyship,
        formatPrice(coitem_price) AS f_unitprice,
        formatQty(noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned)) AS f_balance,
        <? if exists("showPrices") ?>
-         formatMoney(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio),2))
+formatMoney(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (
+currtobase(cohead_curr_id,coitem_price,current_date) 
+/ coitem_price_invuomratio),2))
        <? else ?>
          text('')
        <? endif ?>
-       AS f_amount,
+       AS f_ammount,
        <? if exists("showPrices") ?>
-         round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio),2)
+formatMoney(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio),2))
        <? else ?>
-         0
-       <? endif ?>
-       AS backlog,
-       <? if exists("showPrices") ?>
-         round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio),2)
-       <? else ?>
-         0
+         text('')
        <? endif ?>
-       AS total_backlog  
+       AS foreign_ammount,
+round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (
+currtobase(cohead_curr_id,coitem_price,current_date) 
+/ coitem_price_invuomratio),2) AS total_backlog   
 FROM cohead, coitem, itemsite, item, uom
 WHERE ((coitem_cohead_id=cohead_id)
  AND (coitem_itemsite_id=itemsite_id)
  AND (itemsite_item_id=item_id)
  AND (item_inv_uom_id=uom_id)
  AND (coitem_status NOT IN ('C','X'))
  AND (cohead_cust_id=<? value("cust_id") ?>)
  AND (coitem_scheddate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY coitem_scheddate, cohead_number, coitem_linenumber;
 --------------------------------------------------------------------
   
 ====================================================================
 REPORT: BacklogByParameterList
 QUERY: head
 SELECT <? if exists("custtype_id") ?>
          ( SELECT (custtype_code || '-' || custtype_descrip)
              FROM custtype
             WHERE (custtype_id = <? value("custtype_id") ?>) )
        <? elseif exists("custtype_pattern") ?>
          text(<? value("custtype_pattern") ?>)
        <? elseif exists("custgrp_id") ?>
          ( SELECT (custgrp_name || '-' || custgrp_descrip)
              FROM custgrp
             WHERE (custgrp_id=<? value("custgrp_id") ?>) )
        <? elseif exists("custgrp_pattern") ?>
          text(<? value("custgrp_pattern") ?>)
        <? elseif exists("prodcat_id") ?>
          ( SELECT (prodcat_code || '-' || prodcat_descrip)
              FROM prodcat
             WHERE (prodcat_id=<? value("prodcat_id") ?>) )
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('')
        <? endif ?>
        AS f_value,
        <? if exists("custtype_id") ?>
          text('Customer Type:')
        <? elseif exists("custtype_pattern") ?>
          text('Cust. Type Pattern:')
        <? elseif exists("custgrp_id") ?>
          text('Customer Group')
        <? elseif exists("custgrp_pattern") ?>
          text('Cust. Group Pattern')
        <? elseif exists("prodcat_id") ?>
          text('Prod. Category:')
        <? elseif exists("prodcat_pattern") ?>
          text('Prod. Cat. Pattern:')
        <? else ?>
          text('')
        <? endif ?>
        AS f_label,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (SELECT warehous_code
             FROM warehous
            WHERE (warehous_id=<? value("warehous_id") ?>))
        <? else ?>
          text('All Warehouses')
        <? endif ?>
        AS warehouse,
        <? if exists("showPrices") ?>
-         text('$ Amount')
+         text('Amount(base)')
        <? else ?>
          text('')
        <? endif ?>
-       AS lbl_amount;
+       AS lbl_baseamount,
+ <? if exists("showPrices") ?>
+         text('Amount(foreign)')
+       <? else ?>
+         text('')
+       <? endif ?>
+       AS lbl_foreignamount;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohead_number, coitem_linenumber, cust_name,
        formatDate(cohead_orderdate) AS f_orderdate,
        formatDate(coitem_scheddate) AS f_scheddate,
        item_number, uom_name,
        item_descrip1, item_descrip2,
        formatQty(coitem_qtyord) AS f_qtyord,
        formatQty(coitem_qtyshipped) AS f_qtyship,
        formatQty(noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned)) AS f_balance, 
-       <? if exists("showPrices") ?>
-         formatMoney(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio),2))
+<? if exists("showPrices") ?>
+formatMoney(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (
+currtobase(cohead_curr_id,coitem_price,current_date) 
+/ coitem_price_invuomratio),2))
        <? else ?>
          text('')
        <? endif ?>
        AS f_ammount,
-       round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio),2) AS backlog 
+ <? if exists("showPrices") ?>
+formatMoney(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio),2))
+       <? else ?>
+         text('')
+       <? endif ?>
+       AS foreign_ammount,
+round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (
+currtobase(cohead_curr_id,coitem_price,current_date) 
+/ coitem_price_invuomratio),2) AS backlog 
   FROM cohead, coitem, itemsite, item, cust, uom
  WHERE ((coitem_cohead_id=cohead_id)
    AND (cohead_cust_id=cust_id)
    AND (coitem_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (coitem_status NOT IN ('C','X'))
    AND (coitem_scheddate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("custtype_id") ?>
    AND (cust_custtype_id = <? value("custtype_id") ?>)
 <? elseif exists("custtype_pattern") ?>
    AND (cust_custtype_id IN (SELECT custtype_id FROM custtype WHERE (custtype_code ~ <? value("custtype_pattern") ?>)))
 <? elseif exists("custgrp") ?>
    AND (cust_id IN (SELECT DISTINCT custgrpitem_cust_id FROM custgrpitem))
 <? elseif exists("custgrp_id") ?>
    AND (cust_id IN (SELECT DISTINCT custgrpitem_cust_id FROM custgrp, custgrpitem WHERE ( (custgrpitem_custgrp_id=custgrp_id) AND (custgrp_id=<? value("custgrp_id") ?>) )))
 <? elseif exists("custgrp_pattern") ?>
    AND (cust_id IN (SELECT DISTINCT custgrpitem_cust_id FROM custgrp, custgrpitem WHERE ( (custgrpitem_custgrp_id=custgrp_id) AND (custgrp_name ~ <? value("custgrp_pattern") ?>) )))
 <? elseif exists("prodcat_id") ?>
    AND (item_prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (item_prodcat_id IN (SELECT DISTINCT prodcat_id FROM prodcat WHERE (prodcat_code ~ <? value("prodcat_pattern") ?>)))
 <? endif ?>
 )
 ORDER BY coitem_scheddate, cohead_number, coitem_linenumber;
 --------------------------------------------------------------------
   
 ====================================================================
 REPORT: PickListWOShowLocations
 QUERY: Detail
 select 
      warehous_code, 
      wo_number,
      womatl_id,
      item_number,
      item_descrip1,
      item_descrip2, 
      uom_name,
-     itemuomtouomratio(item_id,item_inv_uom_id, womatl_uom_id) * womatl_qtyreq AS required_qty,
-     formatqty(itemuomtouomratio(item_id,item_inv_uom_id, womatl_uom_id) * womatl_qtyreq) AS required_fmt,
-     itemuomtouomratio(item_id,item_inv_uom_id, womatl_uom_id) * womatl_qtyiss AS issued_qty,
+--   itemuomtouomratio(item_id,item_inv_uom_id, womatl_uom_id) * womatl_qtyreq AS required_qty,
+     womatl_qtyreq AS required_qty,
+--   formatqty(itemuomtouomratio(item_id,item_inv_uom_id, womatl_uom_id) * womatl_qtyreq) AS required_fmt,
+     formatqty(womatl_qtyreq) AS required_fmt,
+--   itemuomtouomratio(item_id,item_inv_uom_id, womatl_uom_id) * womatl_qtyiss AS issued_qty,
+     womatl_qtyiss AS issued_qty,
      formatqty(womatl_qtyiss) AS issued_fmt,
-     (itemuomtouomratio(item_id,item_inv_uom_id, womatl_uom_id) * womatl_qtyreq) - 
+--   (itemuomtouomratio(item_id,item_inv_uom_id, womatl_uom_id) * womatl_qtyreq) - 
                (itemuomtouomratio(item_id,item_inv_uom_id, womatl_uom_id)  * womatl_qtyiss) AS pick_qty,
-     formatqty(
-               (itemuomtouomratio(item_id,item_inv_uom_id, womatl_uom_id) * womatl_qtyreq) - 
-               (itemuomtouomratio(item_id,item_inv_uom_id, womatl_uom_id)  * womatl_qtyiss)) 
-               AS pick_fmt,
+     womatl_qtyreq - womatl_qtyiss AS pick_qty,   
+    formatqty(womatl_qtyreq - womatl_qtyiss) AS pick_fmt,
      CASE WHEN (womatl_issuemethod='S') THEN text('Push')
             WHEN (womatl_issuemethod='L') THEN text('Pull')
             WHEN (womatl_issuemethod='M') THEN text('Mixed')
             ELSE text(womatl_issuemethod)
      END AS f_issuemethod,
      location_aisle || '-' || location_rack || '-' || location_bin || '-' || location_name  AS location_name,
      formatlotserialnumber(itemloc_ls_id),
-     itemloc_lotserial,
+--     itemloc_lotserial,
      itemsite_location_comments AS location_comment,
      itemloc_qty AS location_qty_qty,
      itemuomtouomratio(item_id,item_inv_uom_id, womatl_uom_id) * itemloc_qty AS loc_issue_uom_qty,
      formatqty(itemuomtouomratio(item_id,item_inv_uom_id, womatl_uom_id) * itemloc_qty) AS loc_issue_uom_fmt,
      CASE WHEN itemloc_expiration = '1970-01-01' THEN text ('N/A')
           WHEN itemloc_expiration = '2100-01-01' THEN text ('N/A')
           ELSE CAST(formatdate(itemloc_expiration) AS text)
      END AS expiration 
 
 from 
 
      item, uom, warehous, womatl, wo, itemsite
      LEFT OUTER JOIN itemloc  ON (itemloc_itemsite_id = itemsite_id)
      LEFT OUTER JOIN location ON (itemloc_location_id = location_id)
 
 
 where
      itemsite_item_id = item_id
      and 
      itemsite_warehous_id = warehous_id
      and
      womatl_uom_id = uom_id
      and
      itemsite_id = womatl_itemsite_id
      and
      womatl_wo_id = wo_id
      and
      wo_id = <? value("wo_id") ?>
 order by wo_number, womatl_id, item_number, itemloc_expiration, location_name;
