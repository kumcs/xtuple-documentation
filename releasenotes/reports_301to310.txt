====================================================================
REMOVED REPORTS:
PendingWOMaterialAvailability
====================================================================
NEW REPORTS:
CCReceipt
ItemCostDetail
SalesOrderAcknowledgement
====================================================================
CHANGED REPORTS:
APAging
ARAging
ARApplications
AROpenItemsByCustomer
AddressesMasterList
BacklogByCustomer
BacklogByItemNumber
BacklogByParameterList
BillingEditList
BookingsByCustomer
BookingsByCustomerGroup
BookingsByItem
BookingsByProductCategory
BookingsBySalesRep
BookingsByShipTo
BriefEarnedCommissions
BriefSalesHistoryByCustomer
BriefSalesHistoryByCustomerType
CapacityUOMsByClassCode
CapacityUOMsByProductCategory
CashReceipts
CheckJournal
CheckRegister
CostedIndentedBOM
CostedSingleLevelBOM
CostedSummarizedBOM
CountSlipsByWarehouse
CountTagEditList
CountTagsByClassCode
CountTagsByItem
CountTagsByWarehouse
CreditMemo
CreditMemoJournal
CustomerARHistory
DeliveryDateVariancesByItem
DeliveryDateVariancesByVendor
DepositsRegister
EarnedCommissions
EmployeeList
ExpediteExceptionsByPlannerCode
ExpiredInventoryByClassCode
FrozenItemSites
IndentedBOM
IndentedWhereUsed
InventoryAvailabilityByItem
InventoryAvailabilityByParameterList
InventoryAvailabilityBySourceVendor
InventoryHistoryByItem
InventoryHistoryByOrderNumber
InventoryHistoryByParameterList
Invoice
InvoiceInformation
ItemCostsByClassCode
ItemMaster
ItemSitesByParameterList
ItemsByCharacteristic
ItemsByClassCode
ItemsByProductCategory
ListOpenSalesOrders
ListTransferOrders
MaterialUsageVarianceByBOMItem
MaterialUsageVarianceByComponentItem
MaterialUsageVarianceByItem
MaterialUsageVarianceByWarehouse
OpenWorkOrdersWithClosedParentSalesOrders
OpenWorkOrdersWithParentSalesOrders
POLineItemsByDate
POLineItemsByItem
POLineItemsByVendor
POsByDate
POsByVendor
PackingList-Shipment
PackingList
PartiallyShippedOrders
PendingWOMaterialAvailability
PickingListSOClosedLines
PickingListSOLocsNoClosedLines
PickingListSONoClosedLines
PricingScheduleAssignments
PurchasePriceVariancesByItem
PurchasePriceVariancesByVendor
PurchaseReqsByPlannerCode
PurchaseRequestsByItem
PurchaseReqsByPlannerCode
QOHByItem
QOHByParameterList
ReceiptsReturnsByDate
ReceiptsReturnsByItem
ReceiptsReturnsByVendor
RejectedMaterialByVendor
ReorderExceptionsByPlannerCode
SalesHistoryByBilltoName
SalesHistoryByCustomer
SalesHistoryByItem
SalesHistoryByParameterList
SalesHistoryBySalesRep
SalesHistoryByShipTo
SalesJournal
SalesJournalByDate
SequencedBOM
SingleLevelBOM
SlowMovingInventoryByClassCode
Statement
SubstituteAvailabilityByRootItem
SummarizedBOM
SummarizedBacklogByWarehouse
SummarizedSalesByCustomerType
SummarizedSalesHistoryByCustomer
SummarizedSalesHistoryByCustomerByItem
SummarizedSalesHistoryByCustomerTypeByItem
SummarizedSalesHistoryByItem
SummarizedSalesHistoryBySalesRep
SummarizedSalesHistoryByShippingZone
SummarizedTaxableSales
TimePhasedAvailability
TimePhasedBookingsByItem
TimePhasedBookingsByProductCategory
TimePhasedDemandByPlannerCode
TimePhasedPlannedRevenueExpensesByPlannerCode
TimePhasedProductionByItem
TimePhasedProductionByPlannerCode
TimePhasedSalesHistoryByItem
TimePhasedSalesHistoryByProductCategory
TimePhasedStatisticsByItem
TimePhasedStatisticsByItem
UniformBOL
UninvoicedReceipts
UninvoicedShipments
UnpostedPoReceipts
UsageStatisticsByClassCode
UsageStatisticsByItem
UsageStatisticsByItemGroup
ValidLocationsByItem
ViewAPCheckRunEditList
WOHistoryByClassCode
WOHistoryByItem
WOHistoryByNumber
WOMaterialRequirementsByComponentItem
WOScheduleByParameterList
WarehouseMasterList

 
 ====================================================================
 REPORT: APAging
 QUERY: detail
 SELECT 
 	apaging_docdate,
 	apaging_duedate,
 	apaging_ponumber,
 	apaging_docnumber,
           apaging_invcnumber,
 	apaging_doctype,
 	apaging_vend_id,
 	apaging_vend_number,
 	apaging_vend_name,
 	apaging_vend_vendtype_id,
 	apaging_vendtype_code,
 	apaging_terms_descrip,
-	apaging_apopen_amount,
-	apaging_cur_amt,
-	apaging_cur_val,
-	apaging_thirty_amt,
-	apaging_thirty_val,
-	apaging_sixty_amt,
-	apaging_sixty_val,
-	apaging_ninety_amt,
-	apaging_ninety_val,
-	apaging_plus_amt,
-	apaging_plus_val,
-	apaging_total_amt,
-	apaging_total_val,
-	apaging_disc_amt,
-	apaging_disc_val,
+	formatMoney(apaging_apopen_amount) AS apaging_apopen_amount,
+	apaging_cur_val,   formatMoney(apaging_cur_val)    AS apaging_cur_amt,
+	apaging_thirty_val,formatMoney(apaging_thirty_val) AS apaging_thirty_amt,
+	apaging_sixty_val, formatMoney(apaging_sixty_val)  AS apaging_sixty_amt,
+	apaging_ninety_val,formatMoney(apaging_ninety_val) AS apaging_ninety_amt,
+	apaging_plus_val,  formatMoney(apaging_plus_val)   AS apaging_plus_amt,
+	apaging_total_val, formatMoney(apaging_total_val)  AS apaging_total_amt,
+	apaging_disc_val,  formatMoney(apaging_disc_val)   AS apaging_disc_amt,
 	apaging_discdate,
 	apaging_discdays,
 	apaging_discprcnt
-FROM apaging(<? value("relDate") ?>, <? if exists("useDocDate") ?>true<? else ?>false<? endif ?>)
+FROM apaging(<? value("relDate") ?>, <? value("useDocDate") ?>)
 <? if exists("vend_id") ?>
    WHERE (apaging_vend_id=<? value("vend_id") ?>)
 <? elseif exists("vendtype_id") ?>
    WHERE (apaging_vend_vendtype_id=<? value("vendtype_id") ?>)
 <? elseif exists("vendtype_pattern") ?>
    WHERE (apaging_vendtype_code ~ <? value("vendtype_pattern") ?>)
 <? endif ?>;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ARAging
 QUERY: detail
 SELECT 
 	araging_docdate,
 	araging_duedate,
 	araging_ponumber,
 	araging_docnumber,
 	araging_doctype,
 	araging_cust_id,
 	araging_cust_number,
 	araging_cust_name,
 	araging_cust_custtype_id,
 	araging_custtype_code,
 	araging_terms_descrip,
-	araging_aropen_amount,
-	araging_cur_amt,
-	araging_cur_val,
-	araging_thirty_amt,
-	araging_thirty_val,
-	araging_sixty_amt,
-	araging_sixty_val,
-	araging_ninety_amt,
-	araging_ninety_val,
-	araging_plus_amt,
-	araging_plus_val,
-	araging_total_amt,
-	araging_total_val
+	formatMoney(araging_aropen_amount) AS araging_aropen_amount,
+	araging_cur_val,   formatMoney(araging_cur_val)    AS araging_cur_amt,
+	araging_thirty_val,formatMoney(araging_thirty_val) AS araging_thirty_amt,
+	araging_sixty_val, formatMoney(araging_sixty_val)  AS araging_sixty_amt,
+	araging_ninety_val,formatMoney(araging_ninety_val) AS araging_ninety_amt,
+	araging_plus_val,  formatMoney(araging_plus_val)   AS araging_plus_amt,
+	araging_total_val, formatMoney(araging_total_val)  AS araging_total_amt
 FROM araging(<? value("relDate") ?>)
 <? if exists("cust_id") ?>
    WHERE (araging_cust_id=<? value("cust_id") ?>)
 <? elseif exists("custtype_id") ?>
    WHERE (araging_cust_custtype_id=<? value("custtype_id") ?>)
 <? elseif exists("custtype_pattern") ?>
    WHERE (araging_custtype_code ~ <? value("custtype_pattern") ?>)
 <? endif ?>;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ARApplications
 QUERY: head
 SELECT <? if exists("cust_id") ?>
          (SELECT (cust_number || '-' || cust_name)
             FROM cust
            WHERE (cust_id=<? value("cust_id") ?>) )
        <? elseif exists("custtype_id") ?>
          (select (custtype_code||'-'||custtype_descrip)
             FROM custtype
            WHERE (custtype_id=<? value("custtype_id") ?>) )
        <? elseif exists("custtype_pattern") ?>
          text(<? value("custtype_pattern") ?>)
        <? else ?>
          text('All Customers')
        <? endif ?>
        AS f_value,
        <? if exists("custtype_id") ?>
          text('Cust. Type:')
        <? elseif exists("custtype_pattern") ?>
          text('Cust. Type Pattern:')
        <? else ?>
          text('Customer:')
        <? endif ?>
        AS f_label,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
-       <? if exists("showCashReceipts") ?>
-         <? if exists("showCreditMemos") ?>
+       <? if exists("includeCashReceipts") ?>
+         <? if exists("includeCreditMemos") ?>
            text('Show Cash Receipts and Credit Memos')
          <? else ?>
            text('Show Cash Receipts')
          <? endif ?>
-       <? elseif exists("showCreditMemos") ?>
+       <? elseif exists("includeCreditMemos") ?>
          text('Show Credit Memos')
        <? else ?>
          text('Error: No transaction type selected.')
        <? endif ?>
        AS f_show;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT arapply_id,
-       cust_number,
-       cust_name,
        formatDate(arapply_postdate) AS f_postdate,
-       ( CASE WHEN (arapply_source_doctype='C') THEN text('C/M')
-              WHEN (arapply_fundstype='C') THEN text('Check')
-              WHEN (arapply_fundstype='T') THEN text('Certified Check')
-              WHEN (arapply_fundstype='M') THEN text('M/C')
-              WHEN (arapply_fundstype='V') THEN text('Visa')
-              WHEN (arapply_fundstype='A') THEN text('AmEx')
-              WHEN (arapply_fundstype='D') THEN text('Discover')
-              WHEN (arapply_fundstype='R') THEN text('Other C/C')
-              WHEN (arapply_fundstype='K') THEN text('C/R')
-              WHEN (arapply_fundstype='W') THEN text('Wire Trans.')
-              WHEN (arapply_fundstype='O') THEN text('Other')
+       formatMoney(arapply_applied) AS f_applied,
+       cust_number, cust_name,
+      (CASE WHEN (arapply_source_doctype='C') THEN <? value("creditMemo") ?>
+            WHEN (arapply_source_doctype='R') THEN <? value("cashdeposit") ?>
+            WHEN (arapply_fundstype='C') THEN <? value("check") ?>
+            WHEN (arapply_fundstype='T') THEN <? value("certifiedCheck") ?>
+            WHEN (arapply_fundstype='M') THEN <? value("masterCard") ?>
+            WHEN (arapply_fundstype='V') THEN <? value("visa") ?>
+            WHEN (arapply_fundstype='A') THEN <? value("americanExpress") ?>
+            WHEN (arapply_fundstype='D') THEN <? value("discoverCard") ?>
+            WHEN (arapply_fundstype='R') THEN <? value("otherCreditCard") ?>
+            WHEN (arapply_fundstype='K') THEN <? value("cash") ?>
+            WHEN (arapply_fundstype='W') THEN <? value("wireTransfer") ?>
+            WHEN (arapply_fundstype='O') THEN <? value("other") ?>
          END || ' ' ||
-         CASE WHEN (arapply_source_doctype='C') THEN TEXT(arapply_source_docnumber)
+       CASE WHEN (arapply_source_doctype IN ('C','R')) THEN TEXT(arapply_source_docnumber)
               ELSE arapply_refnumber
-         END ) AS source,
-       ( CASE WHEN (arapply_target_doctype='D') THEN text('D/M')
-              WHEN (arapply_target_doctype='I') THEN text('Invoice')
-              ELSE text('Other')
-         END || ' ' || TEXT(arapply_target_docnumber) ) AS target,
-       formatMoney(arapply_applied) AS f_applied,
-       arapply_applied 
-  FROM arapply, cust
- WHERE ( (arapply_cust_id=cust_id)
+       END) AS source,
+      (CASE WHEN (arapply_target_doctype='D') THEN <? value("debitMemo") ?>
+            WHEN (arapply_target_doctype='I') THEN <? value("invoice") ?>
+            WHEN (arapply_target_doctype='K') THEN <? value("apcheck") ?>
+            ELSE <? value("other") ?>
+       END || ' ' ||
+       TEXT(arapply_target_docnumber)) AS target,
+       currConcat(arapply_curr_id) AS currAbbr,
+       currtobase(arapply_curr_id,arapply_applied,arapply_postdate) AS base_applied
+FROM arapply, custinfo
+WHERE ( (arapply_cust_id=cust_id)
    AND (arapply_postdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
    AND (arapply_source_doctype IN (
-
-<? if exists("showCashReceipts") ?>
-    'K'
-  <? if exists("showCreditMemos") ?>
-      ,'C'
+<? if exists("includeCreditMemos") ?>
+  <? if exists("includeCashReceipts") ?>
+            'K', 'C', 'R'
+  <? else ?>
+            'C', 'R'
   <? endif ?>
-<? elseif exists("showCreditMemos") ?>
-    'C'
-<? endif ?>
-  ))
-
+<? else ?>
+            'K'
+<? endif ?> ))
 <? if exists("cust_id") ?>
    AND (cust_id=<? value("cust_id") ?>)
 <? elseif exists("custtype_id") ?>
    AND (cust_custtype_id=<? value("custtype_id") ?>)
 <? elseif exists("custtype_pattern") ?>
-   AND (cust_custtype_id IN (SELECT custtype_id FROM custtype WHERE (custtype_code ~ <? value("custtype_pattern") ?>)))
+  AND   (cust_custtype_id IN (SELECT custtype_id FROM custtype
+                              WHERE (custtype_code ~ <? value("custtype_pattern") ?>)))
 <? endif ?>
  )
 ORDER BY arapply_postdate, source;
+
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: AROpenItemsByCustomer
 QUERY: head
 SELECT cust_number,
        cust_name,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
-       formatDate(<? value("asofDate") ?>) AS asofDate
+       formatDate(<? value("asofDate") ?>) AS asofDate,
+       currConcat(baseCurrId()) AS baseAbbr
   FROM cust
  WHERE (cust_id=<? value("cust_id") ?>);
     
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT aropen_id,
        aropen_doctype,
        aropen_docnumber,
        aropen_ordernumber,
        formatDate(aropen_docdate) AS f_docdate,
        formatDate(aropen_duedate) AS f_duedate,
        formatMoney(aropen_amount) AS f_amount,
-       formatMoney(aropen_paid + SUM(currtobase(arapply_curr_id,arapply_applied,arapply_postdate))) AS f_paid,
-       CASE WHEN (aropen_doctype IN ('C', 'R')) THEN formatMoney((aropen_amount - aropen_paid + SUM(currtobase(arapply_curr_id,arapply_applied,arapply_postdate)) * -1))
-            WHEN (aropen_doctype IN ('I', 'D')) THEN formatMoney(aropen_amount - aropen_paid + SUM(currtobase(arapply_curr_id,arapply_applied,arapply_postdate)))
-            ELSE formatMoney(aropen_amount - aropen_paid + SUM(currtobase(arapply_curr_id,arapply_applied,arapply_postdate)))
+       formatMoney(aropen_paid + SUM(currtocurr(arapply_curr_id,aropen_curr_id,arapply_applied,arapply_postdate))) AS f_paid,
+       CASE WHEN (aropen_doctype IN ('C', 'R')) THEN formatMoney((aropen_amount - aropen_paid + SUM(currtocurr(arapply_curr_id,aropen_curr_id,arapply_applied,arapply_postdate)) * -1))
+            WHEN (aropen_doctype IN ('I', 'D')) THEN formatMoney(aropen_amount - aropen_paid + SUM(currtocurr(arapply_curr_id,aropen_curr_id,arapply_applied,arapply_postdate)))
+            ELSE formatMoney(aropen_amount - aropen_paid + SUM(currtocurr(arapply_curr_id,aropen_curr_id,arapply_applied,arapply_postdate)))
        END AS f_balance,
-       CASE WHEN (aropen_doctype IN ('C', 'R')) THEN ((aropen_amount - aropen_paid + SUM(currtobase(arapply_curr_id,arapply_applied,arapply_postdate))) * -1)
-            WHEN (aropen_doctype IN ('I', 'D')) THEN (aropen_amount - aropen_paid + SUM(currtobase(arapply_curr_id,arapply_applied,arapply_postdate)))
-            ELSE (aropen_amount - aropen_paid + SUM(currtobase(arapply_curr_id,arapply_applied,arapply_postdate)))
-       END AS balance
+       CASE WHEN (aropen_doctype IN ('C', 'R')) THEN ((aropen_amount - aropen_paid + SUM(currtocurr(arapply_curr_id,aropen_curr_id,arapply_applied,arapply_postdate))) * -1)
+            WHEN (aropen_doctype IN ('I', 'D')) THEN (aropen_amount - aropen_paid + SUM(currtocurr(arapply_curr_id,aropen_curr_id,arapply_applied,arapply_postdate)))
+            ELSE (aropen_amount - aropen_paid + SUM(currtocurr(arapply_curr_id,aropen_curr_id,arapply_applied,arapply_postdate)))
+       END AS balance,
+       currtobase(aropen_curr_id,
+       CASE WHEN (aropen_doctype IN ('C', 'R')) THEN ((aropen_amount - aropen_paid + SUM(currtocurr(arapply_curr_id,aropen_curr_id,arapply_applied,arapply_postdate))) * -1)
+            WHEN (aropen_doctype IN ('I', 'D')) THEN (aropen_amount - aropen_paid + SUM(currtocurr(arapply_curr_id,aropen_curr_id,arapply_applied,arapply_postdate)))
+            ELSE (aropen_amount - aropen_paid + SUM(currtocurr(arapply_curr_id,aropen_curr_id,arapply_applied,arapply_postdate)))
+       END, aropen_docdate) AS base_balance,
+       formatMoney(currtobase(aropen_curr_id,
+       CASE WHEN (aropen_doctype IN ('C', 'R')) THEN ((aropen_amount - aropen_paid + SUM(currtocurr(arapply_curr_id,aropen_curr_id,arapply_applied,arapply_postdate))) * -1)
+            WHEN (aropen_doctype IN ('I', 'D')) THEN (aropen_amount - aropen_paid + SUM(currtocurr(arapply_curr_id,aropen_curr_id,arapply_applied,arapply_postdate)))
+            ELSE (aropen_amount - aropen_paid + SUM(currtocurr(arapply_curr_id,aropen_curr_id,arapply_applied,arapply_postdate)))
+       END, aropen_docdate)) AS f_base_balance,
+       currConcat(aropen_curr_id) AS currAbbr
   FROM aropen
     LEFT OUTER JOIN arapply ON (((aropen_id=arapply_source_aropen_id) 
                               OR (aropen_id=arapply_target_aropen_id)) 
                              AND (arapply_distdate > <? value("asofDate") ?>)) 
   WHERE ( (COALESCE(aropen_closedate,date <? value("asofDate") ?> + integer '1')><? value("asofDate") ?>)
         AND   (aropen_docdate<=<? value("asofDate") ?>)
         AND   (aropen_cust_id=<? value("cust_id") ?>) 
         AND   (aropen_duedate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>) )
 GROUP BY aropen_id,aropen_docnumber,aropen_ordernumber,aropen_doctype,aropen_docdate,aropen_duedate,aropen_amount,aropen_curr_id,aropen_paid
 ORDER BY aropen_docdate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: AddressesMasterList
 QUERY: detail
 SELECT 'Contact' AS type, cntct_first_name AS first,
        cntct_last_name AS last, crmacct_number, cntct_phone AS phone,
        cntct_email AS email, cntct_fax AS fax, addr.*
 FROM addr, cntct LEFT OUTER JOIN crmacct ON (cntct_crmacct_id=crmacct_id)
 WHERE (cntct_addr_id=addr_id)
   <? if exists("activeOnly") ?> AND addr_active <? endif ?>
 UNION
 SELECT 'Ship-To' AS type, shipto_num AS first,
        shipto_name AS last, crmacct_number, '' AS phone,
        '' AS email, '' AS fax, addr.*
 FROM addr, shiptoinfo LEFT OUTER JOIN crmacct ON (shipto_cust_id=crmacct_cust_id
 )
 WHERE (shipto_addr_id=addr_id)
   <? if exists("activeOnly") ?> AND addr_active <? endif ?>
 UNION
 SELECT 'Vendor' AS type, vend_number AS first,
        vend_name AS last, crmacct_number, '' AS phone,
        '' AS email, '' AS fax, addr.*
 FROM addr, vendinfo LEFT OUTER JOIN crmacct ON (vend_id=crmacct_vend_id)
 WHERE (vend_addr_id=addr_id)
   <? if exists("activeOnly") ?> AND addr_active <? endif ?>
 UNION
 SELECT 'Vendor Address' AS type, vendaddr_code AS first,
        vendaddr_name AS last, crmacct_number, '' AS phone,
        '' AS email, '' AS fax, addr.*
 FROM addr, vendaddrinfo LEFT OUTER JOIN crmacct ON (vendaddr_vend_id=crmacct_vend_id)
 WHERE (vendaddr_addr_id=addr_id)
   <? if exists("activeOnly") ?> AND addr_active <? endif ?>
 UNION
-SELECT 'Warehouse' AS type, warehous_code AS first,
+SELECT 'Site' AS type, warehous_code AS first,
        warehous_descrip AS last, '' AS crmacct_number, '' AS phone,
        '' AS email, '' AS fax, addr.*
 FROM addr, whsinfo
 WHERE (warehous_addr_id=addr_id)
   <? if exists("activeOnly") ?> AND addr_active <? endif ?>
 
 UNION
 SELECT '' AS type, '' AS first, '' AS last,
        '' AS crmacct_number, '' AS phone,
        '' AS email,
        '' AS fax, addr.*
 FROM addr
 WHERE addr_id NOT IN (
             SELECT cntct_addr_id FROM cntct
             UNION SELECT shipto_addr_id FROM shiptoinfo
             UNION SELECT vend_addr_id FROM vendinfo
             UNION SELECT vendaddr_addr_id FROM vendaddrinfo
             UNION SELECT warehous_addr_id FROM whsinfo)
 <? if exists("activeOnly") ?> AND addr_active <? endif ?>
 ORDER BY addr_country, addr_state, addr_city,
          addr_postalcode, addr_line1, addr_line2,
          addr_line3, type, last, first;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: BacklogByCustomer
 QUERY: head
 SELECT cust_name,
        cust_address1,
        cust_address2,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (SELECT warehous_code
             FROM warehous
            WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
          text('All Warehouses')
        <? endif ?>
        AS warehouse,
        <? if exists("showPrices") ?>
          text('Amount (base)')
        <? else ?>
          text('')
        <? endif ?>
        AS lbl_amount,
        <? if exists("showPrices") ?>
          text('Amount (foreign)')
        <? else ?>
          text('')
        <? endif ?>
        AS lbl_foreignamount
 FROM cust
 WHERE (cust_id=<? value("cust_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohead_number, coitem_linenumber,
        formatDate(cohead_orderdate) AS f_orderdate,
        formatDate(coitem_scheddate) AS f_scheddate,
        item_number, uom_name,
        item_descrip1, item_descrip2,
        formatQty(coitem_qtyord) AS f_qtyord,
        formatQty(coitem_qtyshipped) AS f_qtyship,
        formatPrice(coitem_price) AS f_unitprice,
        formatQty(noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned)) AS f_balance,
        <? if exists("showPrices") ?>
 formatMoney(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (
-currtobase(cohead_curr_id,coitem_price,current_date) 
+currtobase(cohead_curr_id,coitem_price,cohead_orderdate) 
 / coitem_price_invuomratio),2))
        <? else ?>
          text('')
        <? endif ?>
        AS f_ammount,
  <? if exists("showPrices") ?>
 formatMoney(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio),2))
        <? else ?>
          text('')
        <? endif ?>
        AS foreign_ammount,
 round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (
-currtobase(cohead_curr_id,coitem_price,current_date) 
+currtobase(cohead_curr_id,coitem_price,cohead_orderdate) 
 / coitem_price_invuomratio),2) AS total_backlog   
 FROM cohead, coitem, itemsite, item, uom
 WHERE ((coitem_cohead_id=cohead_id)
  AND (coitem_itemsite_id=itemsite_id)
  AND (itemsite_item_id=item_id)
  AND (item_inv_uom_id=uom_id)
  AND (coitem_status NOT IN ('C','X'))
  AND (cohead_cust_id=<? value("cust_id") ?>)
  AND (coitem_scheddate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY coitem_scheddate, cohead_number, coitem_linenumber;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: BacklogByItemNumber
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        uom_name,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (SELECT warehous_code
             FROM warehous
            WHERE (warehous_id=<? value("warehous_id") ?>))
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("showPrices") ?>
          text('$ Amount')
        <? else ?>
          text('')
        <? endif ?>
        AS lbl_amount
 FROM item JOIN uom ON (item_inv_uom_id=uom_id)
 WHERE (item_id=<? value("item_id") ?>);
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohead_number,
        coitem_linenumber, cust_name, 
        formatDate(cohead_orderdate) AS f_orderdate,
        formatDate(coitem_scheddate) AS f_scheddate,
        formatQty(coitem_qtyord) AS f_qtyord,
        formatQty(coitem_qtyshipped) AS f_qtyship,
        formatQty(noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned)) AS f_balance,
        <? if exists("showPrices") ?>
-         formatMoney(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio),2))
+formatMoney(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (
+currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio),2))
        <? else ?>
          ''
        <? endif ?>
        AS f_ammount,
-       round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio),2) AS backlog 
+round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (
+currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio),2) AS backlog
   FROM cohead, coitem, cust, itemsite, item 
  WHERE ((coitem_cohead_id=cohead_id)
    AND (cohead_cust_id=cust_id)
    AND (coitem_status NOT IN ('C','X'))
    AND (coitem_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (itemsite_item_id=<? value("item_id") ?>)
    AND (coitem_scheddate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 ) ORDER BY coitem_scheddate;
 --------------------------------------------------------------------
   
 QUERY: total
 SELECT now()
 WHERE 't' =
 <? if exists("showPrices") ?>
   't'
 <? else ?>
   'f'
 <? endif ?>
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: BacklogByParameterList
 QUERY: head
 SELECT <? if exists("custtype_id") ?>
          ( SELECT (custtype_code || '-' || custtype_descrip)
              FROM custtype
             WHERE (custtype_id = <? value("custtype_id") ?>) )
        <? elseif exists("custtype_pattern") ?>
          text(<? value("custtype_pattern") ?>)
        <? elseif exists("custgrp_id") ?>
          ( SELECT (custgrp_name || '-' || custgrp_descrip)
              FROM custgrp
             WHERE (custgrp_id=<? value("custgrp_id") ?>) )
        <? elseif exists("custgrp_pattern") ?>
          text(<? value("custgrp_pattern") ?>)
        <? elseif exists("prodcat_id") ?>
          ( SELECT (prodcat_code || '-' || prodcat_descrip)
              FROM prodcat
             WHERE (prodcat_id=<? value("prodcat_id") ?>) )
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('')
        <? endif ?>
        AS f_value,
        <? if exists("custtype_id") ?>
          text('Customer Type:')
        <? elseif exists("custtype_pattern") ?>
          text('Cust. Type Pattern:')
        <? elseif exists("custgrp_id") ?>
          text('Customer Group')
        <? elseif exists("custgrp_pattern") ?>
          text('Cust. Group Pattern')
        <? elseif exists("prodcat_id") ?>
          text('Prod. Category:')
        <? elseif exists("prodcat_pattern") ?>
          text('Prod. Cat. Pattern:')
        <? else ?>
          text('')
        <? endif ?>
        AS f_label,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (SELECT warehous_code
             FROM warehous
            WHERE (warehous_id=<? value("warehous_id") ?>))
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("showPrices") ?>
          text('Amount(base)')
        <? else ?>
          text('')
        <? endif ?>
        AS lbl_baseamount,
  <? if exists("showPrices") ?>
          text('Amount(foreign)')
        <? else ?>
          text('')
        <? endif ?>
        AS lbl_foreignamount;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohead_number, coitem_linenumber, cust_name,
        formatDate(cohead_orderdate) AS f_orderdate,
        formatDate(coitem_scheddate) AS f_scheddate,
        item_number, uom_name,
        item_descrip1, item_descrip2,
        formatQty(coitem_qtyord) AS f_qtyord,
        formatQty(coitem_qtyshipped) AS f_qtyship,
        formatQty(noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned)) AS f_balance, 
 <? if exists("showPrices") ?>
-formatMoney(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (
-currtobase(cohead_curr_id,coitem_price,current_date) 
-/ coitem_price_invuomratio),2))
+formatMoney(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio)
+                * (currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio),2))
        <? else ?>
          text('')
        <? endif ?>
        AS f_ammount,
  <? if exists("showPrices") ?>
-formatMoney(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio),2))
+formatMoney(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio)
+                * (coitem_price / coitem_price_invuomratio),2))
        <? else ?>
          text('')
        <? endif ?>
        AS foreign_ammount,
-round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * (
-currtobase(cohead_curr_id,coitem_price,current_date) 
-/ coitem_price_invuomratio),2) AS backlog 
+round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio)
+    * (currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio),2) AS backlog 
   FROM cohead, coitem, itemsite, item, cust, uom
  WHERE ((coitem_cohead_id=cohead_id)
    AND (cohead_cust_id=cust_id)
    AND (coitem_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (coitem_status NOT IN ('C','X'))
    AND (coitem_scheddate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("custtype_id") ?>
    AND (cust_custtype_id = <? value("custtype_id") ?>)
 <? elseif exists("custtype_pattern") ?>
    AND (cust_custtype_id IN (SELECT custtype_id FROM custtype WHERE (custtype_code ~ <? value("custtype_pattern") ?>)))
 <? elseif exists("custgrp") ?>
    AND (cust_id IN (SELECT DISTINCT custgrpitem_cust_id FROM custgrpitem))
 <? elseif exists("custgrp_id") ?>
    AND (cust_id IN (SELECT DISTINCT custgrpitem_cust_id FROM custgrp, custgrpitem WHERE ( (custgrpitem_custgrp_id=custgrp_id) AND (custgrp_id=<? value("custgrp_id") ?>) )))
 <? elseif exists("custgrp_pattern") ?>
    AND (cust_id IN (SELECT DISTINCT custgrpitem_cust_id FROM custgrp, custgrpitem WHERE ( (custgrpitem_custgrp_id=custgrp_id) AND (custgrp_name ~ <? value("custgrp_pattern") ?>) )))
 <? elseif exists("prodcat_id") ?>
    AND (item_prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (item_prodcat_id IN (SELECT DISTINCT prodcat_id FROM prodcat WHERE (prodcat_code ~ <? value("prodcat_pattern") ?>)))
 <? endif ?>
 )
 ORDER BY coitem_scheddate, cohead_number, coitem_linenumber;
 --------------------------------------------------------------------
   
 QUERY: total
 SELECT now()
  WHERE 't' =
 <? if exists("showPrices") ?>
   't'
 <? else ?>
   'f'
 <? endif ?>
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: BillingEditList
 QUERY: detail
 SELECT cohead_id			AS orderid,
        -2				AS itemid,
        CASE WHEN (formatInvcNumber(cobmisc_id) <> '') THEN ('Invc-' || formatInvcNumber(cobmisc_id))
             ELSE '?'
        END 				AS documentnumber,
        cust_number			AS name,
        cohead_billtoname 		AS descrip,
        text(cohead_number) 		AS f_ordernumber,
        cohead_number 			AS ordernumber,
        -1 				AS linenumber,
        '' 				AS iteminvuom,
        '' 				AS qtytobill,
        '' 				AS price,
        '' 				AS extprice,
        0			        AS subextprice,
        0			        AS runningextprice,
        COALESCE( ( SELECT (formatGLAccount(accnt_id) || ' - ' || accnt_descrip)
                    FROM accnt
                    WHERE (accnt_id=findARAccount(cust_id)) ), 'Not Assigned') AS debit,
        '' AS credit,
        currConcat(cobmisc_curr_id)      AS currabbr
 FROM cobmisc, cohead, cust 
 WHERE ( (cobmisc_cohead_id=cohead_id)
  AND (cohead_cust_id=cust_id)
  AND (NOT cobmisc_posted)
 <? if exists("showPrinted") ?>
  AND (cobmisc_printed)
 <? elseif exists("showUnprinted") ?>
  AND (NOT cobmisc_printed)
 <? endif ?>
 )
 
 UNION
 SELECT cohead_id 			AS orderid,
        -1 				AS itemid,
        '' 				AS documentnumber,
        'Freight'			AS name,
        'Freight Charge' 		AS descrip,
        ''		 		AS f_ordernumber,
        cohead_number			AS ordernumber,
        -1 				AS linenumber,
        '' 				AS iteminvuom,
        '' 				AS qtytobill,
        formatExtPrice(cobmisc_freight) 	AS price,
        formatExtPrice(cobmisc_freight) 	AS extprice,
        cobmisc_freight			AS subextprice,
        currtobase(cobmisc_curr_id, cobmisc_freight, cobmisc_invcdate) AS runningextprice,
        '' AS debit,
        (formatGLAccount(freight.accnt_id) || ' - ' || freight.accnt_descrip) 	AS credit,
        currConcat(cobmisc_curr_id)      AS currabbr
 FROM cobmisc, cohead, accnt AS freight
 WHERE ( (cobmisc_cohead_id=cohead_id)
  AND (freight.accnt_id=findFreightAccount(cohead_cust_id))
  AND (NOT cobmisc_posted)
  AND (cobmisc_freight <> 0)
 <? if exists("showPrinted") ?>
  AND (cobmisc_printed)
 <? elseif exists("showUnprinted") ?>
  AND (NOT cobmisc_printed)
 <? endif ?>
 )
 
 UNION
 SELECT cohead_id 								AS orderid, 
 	-1 									AS itemid,
         '' 									AS documentnumber, 
         'Misc. Charge'								AS name, 
 	cohead_misc_descrip 							AS descrip,
         ''		 							AS f_ordernumber, 
 	cohead_number								AS ordernumber,
 	-1 									AS linenumber,
 	'' 									AS iteminvuom,
         '' 									AS qtytobill,
         formatExtPrice(cobmisc_misc) 						AS price,
         formatExtPrice(cobmisc_misc) 						AS extprice,
 	cobmisc_misc								AS subextprice,
 	currToBase(cobmisc_curr_id, cobmisc_misc, cobmisc_invcdate)				AS runningextprice,
        '' AS debit,
         (formatGLAccount(misc.accnt_id) || ' - ' || misc.accnt_descrip) 	AS credit,
         currConcat(cobmisc_curr_id)     AS currabbr
 FROM cobmisc, cohead, accnt AS misc
 WHERE ( (cobmisc_cohead_id=cohead_id)
  AND (cobmisc_misc_accnt_id=misc.accnt_id)
  AND (NOT cobmisc_posted)
  AND (cobmisc_misc <> 0)
 <? if exists("showPrinted") ?>
  AND (cobmisc_printed)
 <? elseif exists("showUnprinted") ?>
  AND (NOT cobmisc_printed)
 <? endif ?>
 )
 
 UNION
 SELECT  cohead_id 								AS orderid, 
 	-1 									AS itemid,
         '' 									AS documentnumber, 
         'Sales Tax'								AS name,
 	tax_descrip	 							AS descrip,
         ''		 							AS f_ordernumber, 
 	cohead_number								as ordernumber,
 	-1				 					AS linenumber,
 	''						 			AS iteminvuom,
         '' 									AS qtytobill,
         formatExtPrice(cobmisc_tax) 						AS price,
         formatExtPrice(cobmisc_tax) 						AS extprice,
 	cobmisc_tax								AS subextprice,
 	currtobase(cobmisc_tax_curr_id, cobmisc_tax, cobmisc_invcdate)				AS runningextprice,
        '' AS debit,
         (formatGLAccount(taxaccnt.accnt_id) || ' - ' || taxaccnt.accnt_descrip) AS credit,
         currConcat(cobmisc_tax_curr_id)     AS currabbr
-FROM cobmisc, cohead, accnt AS taxaccnt, tax 
+FROM cobmisc, cohead, coitem, tax, accnt AS taxaccnt 
 WHERE ( (cobmisc_cohead_id=cohead_id)
+ AND (coitem_cohead_id=cohead_id)
+ AND (tax_id=coitem_tax_id)
  AND (tax_sales_accnt_id=taxaccnt.accnt_id)
- AND (cohead_tax_id=tax_id)
  AND (NOT cobmisc_posted)
  AND (cobmisc_tax <> 0)
 <? if exists("showPrinted") ?>
  AND (cobmisc_printed)
 <? elseif exists("showUnprinted") ?>
  AND (NOT cobmisc_printed)
 <? endif ?>
 )
 
 UNION
 SELECT  cohead_id 								AS orderid, 
 	coitem_id 								AS itemid,
         '' 									AS documentnumber, 
         item_number								AS name, 
 	(item_descrip1 || ' ' || item_descrip2)					AS descrip,
         ''		 							AS f_ordernumber, 
         cohead_number	 							AS ordernumber, 
 	coitem_linenumber 							AS linenumber,
 	uom_name AS iteminvuom,
         formatQty(cobill_qty) 							AS qtytobill,
         formatPrice(coitem_price) 						AS price,
         formatExtPrice((cobill_qty * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio)) 		AS extprice,
 	((cobill_qty * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio))			AS subextprice,
 	currtobase(cobmisc_curr_id, ((cobill_qty * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio)), cobmisc_invcdate) AS runningextprice,
         '' AS debit,
         COALESCE( ( SELECT (formatGLAccount(accnt_id) || ' - ' || accnt_descrip)
                     FROM accnt, salesaccnt
                     WHERE ((salesaccnt_sales_accnt_id=accnt_id)
                      AND (salesaccnt_id=findSalesAccnt(itemsite_id, cohead_cust_id)))), 'Not Assigned') AS credit,
         currConcat(cobmisc_curr_id)     AS currabbr
 FROM item, itemsite, cobmisc, cohead, cobill, coitem, uom
 WHERE ( (coitem_itemsite_id=itemsite_id)
  AND (cobill_coitem_id=coitem_id)
  AND (cobill_cobmisc_id=cobmisc_id)
  AND (cobmisc_cohead_id=cohead_id)
  AND (itemsite_item_id=item_id)
  AND (item_inv_uom_id=uom_id)
  AND (cobill_cobmisc_id=cobmisc_id)
  AND (NOT cobmisc_posted)
 <? if exists("showPrinted") ?>
  AND (cobmisc_printed)
 <? elseif exists("showUnprinted") ?>
  AND (NOT cobmisc_printed)
 <? endif ?>
 )
 
 UNION
 SELECT 	cmhead_id 					AS orderid, 
 	-2 						AS itemid,
         ('C/M-' || formatCreditMemoNumber(cmhead_id)) 	AS documentnumber,
         cust_number					AS name,
 	cmhead_billtoname 				AS descrip,
         text(cmhead_number) 				AS f_ordernumber,
 	cmhead_number					AS ordernumber,
 	-1 						AS linenumber,
 	'' 						AS iteminvuom,
         '' 						AS qtytobill,
         '' 						AS price,
         '' 						AS extprice,
 	0						AS subextprice,
 	0						AS runningextprice,
         '' AS debit,
         COALESCE( ( SELECT (formatGLAccount(accnt_id) || ' - ' || accnt_descrip)
                     FROM accnt
                     WHERE (accnt_id=findARAccount(cmhead_cust_id)) ), 'Not Assigned') AS credit,
         currConcat(cmhead_curr_id)     AS currabbr
 FROM cmhead, cust
 WHERE ( (cmhead_cust_id=cust_id)
  AND (NOT cmhead_posted)
  AND (NOT cmhead_hold)
 <? if exists("showPrinted") ?>
  AND (cmhead_printed)
 <? elseif exists("showUnprinted") ?>
  AND (NOT cmhead_printed)
 <? endif ?>
 )
 
 UNION
 SELECT  cmhead_id 								AS orderid,
 	-1 									AS itemid,
         '' 									AS documentnumber, 
         'Freight'								AS name, 
 	'Freight Charge'							AS descrip,
         ''		 							AS f_ordernumber, 
         cmhead_number	 							AS ordernumber, 
 	-1 									AS linenumber,
 	'' 									AS iteminvuom,
         '' 									AS qtytobill,
         formatExtPrice(cmhead_freight) 						AS price,
         formatExtPrice(cmhead_freight) 						AS extprice,
 	(cmhead_freight * -1)							AS subextprice,
 	currtobase(cmhead_curr_id, cmhead_freight * -1, cmhead_gldistdate)				AS runningextprice,
         (formatGLAccount(freight.accnt_id) || ' - ' || freight.accnt_descrip) 	AS credit,
         '' AS debit,
         currConcat(cmhead_curr_id)     AS currabbr
 FROM cmhead, accnt AS freight
 WHERE ( (freight.accnt_id=findFreightAccount(cmhead_cust_id))
  AND (NOT cmhead_posted)
  AND (NOT cmhead_hold)
  AND (cmhead_freight <> 0)
 <? if exists("showPrinted") ?>
  AND (cmhead_printed)
 <? elseif exists("showUnprinted") ?>
  AND (NOT cmhead_printed)
 <? endif ?>
 )
 
 UNION
 SELECT  cmhead_id 								AS orderid, 
 	cmitem_id 								AS itemid,
         '' 									AS documentnumber, 
         item_number								AS name,
 	(item_descrip1 || ' ' || item_descrip2)					AS descrip,
         ''		 							AS f_ordernumber, 
         cmhead_number	 							AS ordernumber, 
 	cmitem_linenumber 							AS linenumber,
-	item_invuom                                                             AS iteminvuom,
+	uom_name                                                                AS iteminvuom,
         formatQty(cmitem_qtycredit) 						AS qtytobill,
         formatPrice(cmitem_unitprice) 						AS price,
         formatExtPrice((cmitem_qtycredit * cmitem_qty_invuomratio) * (cmitem_unitprice / cmitem_price_invuomratio)) 	AS extprice,
 	((cmitem_qtycredit * cmitem_qty_invuomratio) * (cmitem_unitprice / cmitem_price_invuomratio) * -1)			AS subextprice,
 	currtobase(cmhead_curr_id, ((cmitem_qtycredit * cmitem_qty_invuomratio) * (cmitem_unitprice / cmitem_price_invuomratio) * -1), cmhead_gldistdate) AS runningextprice,
         COALESCE( ( SELECT (formatGLAccount(accnt_id) || ' - ' || accnt_descrip) 
                     FROM accnt, salesaccnt 
                     WHERE ((salesaccnt_sales_accnt_id=accnt_id) 
                      AND (salesaccnt_id=findSalesAccnt(itemsite_id, cmhead_cust_id)))), 'Not Assigned') AS credit,
         '' AS debit,
         currConcat(cmhead_curr_id)     AS currabbr
 FROM item, itemsite, cmhead, cmitem, uom
 WHERE ( (cmitem_itemsite_id=itemsite_id)
  AND (cmitem_cmhead_id=cmhead_id)
  AND (itemsite_item_id=item_id)
  AND (item_inv_uom_id=uom_id)
  AND (NOT cmhead_posted)
  AND (NOT cmhead_hold)
 <? if exists("showPrinted") ?>
  AND (cmhead_printed)
 <? elseif exists("showUnprinted") ?>
  AND (NOT cmhead_printed)
 <? endif ?>
 )
 
 ORDER BY ordernumber, linenumber;
 
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: BookingsByCustomer
 QUERY: head
 SELECT cust_name,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("prodcat_id") ?>
          (select (prodcat_code||'-'||prodcat_descrip) from prodcat where prodcat_id=<? value("prodcat_id") ?>)
        <? elseif exists("prodcat_pattern") ?>
           text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('All Categories')
        <? endif ?>
        AS prodcat
   FROM cust
  WHERE (cust_id=<? value("cust_id") ?>);
     
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohead_number AS sonumber,
        formatDate(cohead_orderdate) AS orddate,
        item_number, item_descrip1, item_descrip2,
        formatQty(coitem_qtyord) AS ordered,
-       formatPrice(coitem_price) AS unitprice,
-       formatExtPrice((coitem_qtyord * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio)) AS f_extprice
+formatPrice(currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio) AS unitprice,
+formatExtPrice(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio)
+                   * (currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio),2)) AS f_extprice
   FROM coitem, cohead, cust, itemsite, item, prodcat 
  WHERE ((coitem_cohead_id=cohead_id)
    AND (cohead_cust_id=cust_id)
    AND (coitem_itemsite_id=itemsite_id)
    AND (coitem_status <> 'X')
    AND (itemsite_item_id=item_id)
    AND (item_prodcat_id=prodcat_id)
    AND (cohead_cust_id=<? value("cust_id") ?>)
    AND (cohead_orderdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("prodcat_id") ?>
    AND (prodcat_id = <? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (prodcat_code ~ <? value("prodcat_pattern") ?>)
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY cohead_orderdate;
       
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: BookingsByCustomerGroup
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
            (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-           text('All Warehouses')
+           text('All Sites')
        <? endif ?>
          AS warehouse,
        <? if exists("custgrp_id") ?>
            (select (custgrp_name||'-'||custgrp_descrip) from custgrp where custgrp_id=<? value("custgrp_id") ?>)
        <? elseif exists("custgrp_pattern") ?>
            text(<? value("custgrp_pattern") ?>)
        <? else ?>
            text('All Customer Groups')
        <? endif ?>
          AS custgrp,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startDate,
        formatDate(<? value("endDate") ?>, 'Latest') AS endDate,
        <? if exists("showPrices") ?>
            text('Unit Price') AS lbl_unitprice,
            text('Total') AS lbl_total
        <? else ?>
            text('') AS lbl_unitprice,
            text('') AS lbl_total
        <? endif ?>
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohist_ordernumber AS sonumber,
        cohist_invcnumber AS invnumber,
        formatDate(cohist_orderdate) AS orddate,
        formatDate(cohist_invcdate) AS invcdate,
        item_number, item_descrip1, item_descrip2,
        formatQty(cohist_qtyshipped) AS f_shipped,
        cohist_qtyshipped AS shipped,
        <? if exists("showPrices") ?>
-       formatPrice(cohist_unitprice) AS unitprice,
-       formatMoney(round(cohist_qtyshipped * cohist_unitprice,2))  AS f_total,
-       round(cohist_qtyshipped * cohist_unitprice,2)  AS total
+formatPrice(currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio)) AS unitprice,
+formatExtPrice(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio)
+                   * (currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio),2)) AS f_total,
+round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio)
+                   * (currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio),2) AS total
        <? else ?>
        '' AS unitprice,
        '' AS f_total,
        0 AS total
        <? endif ?>
   FROM cohist, itemsite, item, cust, custgrpitem, custgrp
  WHERE ((cohist_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (cohist_cust_id=cust_id)
    AND (custgrpitem_custgrp_id=custgrp_id)
    AND (custgrpitem_cust_id=cust_id)
    AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("custgrp_id") ?>
    AND (custgrp_id=<? value("custgrp_id") ?>)
 <? elseif exists("custgrp_pattern") ?>
    AND (custgrp_name ~ <? value("custgrp_pattern") ?>)))
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY cohist_invcdate, item_number;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: BookingsByItem
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        uom_name,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse
   FROM item JOIN uom ON (item_inv_uom_id=uom_id)
  WHERE (item_id=<? value("item_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohead_number AS sonumber,
        formatDate(cohead_orderdate) AS orddate,
        cust_number, cust_name,
        formatQty(coitem_qtyord) AS ordered,
-       formatPrice(coitem_price) AS unitprice,
-       formatExtPrice((coitem_qtyord * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio)) AS f_extprice 
+formatPrice(currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio) AS unitprice,
+formatExtPrice(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio)
+                   * (currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio),2)) AS f_extprice
   FROM coitem, cohead, cust, itemsite, item 
  WHERE ((coitem_cohead_id=cohead_id)
    AND (cohead_cust_id=cust_id)
    AND (coitem_itemsite_id=itemsite_id)
    AND (coitem_status <> 'X')
    AND (itemsite_item_id=item_id)
    AND (item_id=<? value("item_id") ?>)
    AND (cohead_orderdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 ) 
 ORDER BY cohead_orderdate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: BookingsByProductCategory
 QUERY: head
 SELECT formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("prodcat_id") ?>
          (select (prodcat_code||'-'||prodcat_descrip) from prodcat where prodcat_id=<? value("prodcat_id") ?>)
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('All Categories')
        <? endif ?>
        AS prodcat ;    
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohead_number AS sonumber,
        formatDate(cohead_orderdate) AS orddate,
        cust_number, cust_name,
        item_number, item_descrip1, item_descrip2,
        formatQty(coitem_qtyord) AS ordered,
-       formatPrice(coitem_price) AS unitprice,
-       formatExtPrice((coitem_qtyord * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio)) AS f_extprice 
+formatPrice(currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio) AS unitprice,
+formatExtPrice(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio)
+                   * (currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio),2)) AS f_extprice
   FROM coitem, cohead, cust, itemsite, item, prodcat 
  WHERE ((coitem_cohead_id=cohead_id)
    AND (cohead_cust_id=cust_id)
    AND (coitem_itemsite_id=itemsite_id)
    AND (coitem_status <> 'X')
    AND (itemsite_item_id=item_id)
    AND (item_prodcat_id=prodcat_id)
    AND (cohead_orderdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("prodcat_id") ?>
    AND (prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (prodcat_code ~ <? value("prodcat_pattern") ?>)
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY cohead_orderdate;
       
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: BookingsBySalesRep
 QUERY: head
 SELECT salesrep_name,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("prodcat_id") ?>
          (select (prodcat_code||'-'||prodcat_descrip) from prodcat where prodcat_id=<? value("prodcat_id") ?>)
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('All Categories')
        <? endif ?>
        AS prodcat
    FROM salesrep
 WHERE (salesrep_id=<? value("salesrep_id") ?>);
     
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohead_number AS sonumber,
        formatDate(cohead_orderdate) AS orddate,
        cust_number, cust_name,
        item_number, item_descrip1, item_descrip2,
        formatQty(coitem_qtyord) AS ordered,
-       formatPrice(coitem_price) AS unitprice,
-       formatExtPrice((coitem_qtyord * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio)) AS f_extprice
+formatPrice(currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio) AS unitprice,
+formatExtPrice(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio)
+                   * (currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio),2)) AS f_extprice
   FROM coitem, cohead, cust, itemsite, item, prodcat
  WHERE ((coitem_cohead_id=cohead_id)
    AND (cohead_cust_id=cust_id)
    AND (coitem_itemsite_id=itemsite_id)
    AND (coitem_status <> 'X')
    AND (itemsite_item_id=item_id)
    AND (item_prodcat_id=prodcat_id)
    AND (cohead_salesrep_id=<? value("salesrep_id") ?>)
    AND (cohead_orderdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("prodcat_id") ?>
    AND (prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (prodcat_code ~ <? value("prodcat_pattern") ?>)
 <? endif ?>
 )
 ORDER BY cohead_orderdate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: BookingsByShipTo
 QUERY: head
 SELECT cust_name,
        shipto_name,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("prodcat_id") ?>
          (select (prodcat_code||'-'||prodcat_descrip) from prodcat where prodcat_id=<? value("prodcat_id") ?>)
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('All Categories')
        <? endif ?>
        AS prodcat
   FROM shipto, cust
  WHERE ((shipto_cust_id=cust_id)
    AND (shipto_id=<? value("shipto_id") ?>) );
     
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohead_number AS sonumber,
        formatDate(cohead_orderdate) AS orddate,
        item_number, item_descrip1, item_descrip2,
        formatQty(coitem_qtyord) AS ordered,
-       formatPrice(coitem_price) AS unitprice,
-       formatExtPrice((coitem_qtyord * coitem_qty_invuomratio) * (coitem_price / coitem_price_invuomratio)) AS f_extprice
+formatPrice(currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio) AS unitprice,
+formatExtPrice(round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio)
+                   * (currtobase(cohead_curr_id,coitem_price,cohead_orderdate) / coitem_price_invuomratio),2)) AS f_extprice
   FROM coitem, cohead, cust, itemsite, item, prodcat
  WHERE ((coitem_cohead_id=cohead_id)
    AND (cohead_cust_id=cust_id)
    AND (coitem_itemsite_id=itemsite_id)
    AND (coitem_status <> 'X')
    AND (itemsite_item_id=item_id)
    AND (item_prodcat_id=prodcat_id)
    AND (cohead_shipto_id=<? value("shipto_id") ?>)
    AND (cohead_orderdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("prodcat_id") ?>
    AND (prodcat_id = <? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (prodcat_code ~ <? value("prodcat_pattern") ?>)
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY cohead_orderdate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: BriefEarnedCommissions
 QUERY: head
 SELECT <? if exists("salesrep_id") ?>
          ( SELECT salesrep_name
              FROM salesrep
             WHERE (salesrep_id=<? value("salesrep_id") ?>) )
        <? else ?>
          text('All Sales Reps')
        <? endif ?>
        AS salesrep,
        formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT salesrep_id, salesrep_number, salesrep_name, cust_number, cust_name,
        cohist_ordernumber, cohist_invcnumber, formatDate(cohist_invcdate) as f_invcdate,
-       formatMoney(SUM(round(cohist_qtyshipped * cohist_unitprice,2))) as f_extprice,
-       SUM(round(cohist_qtyshipped * cohist_unitprice,2)) AS extprice,
+       formatMoney(SUM(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2))) as f_extprice,
+       SUM(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)) as extprice,
        formatMoney(SUM(round(cohist_commission,2))) as f_commission,
        SUM(round(cohist_commission,2)) AS commission
   FROM cohist, salesrep, cust
  WHERE ((cohist_cust_id=cust_id)
    AND (cohist_salesrep_id=salesrep_id)
    AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
    AND (cohist_commission <> 0)
 <? if exists("salesrep_id") ?>
    AND (salesrep_id=<? value("salesrep_id") ?>)
 <? endif ?>
 )
 GROUP BY salesrep_id, salesrep_number, salesrep_name, cust_number, cust_name,
          cohist_ordernumber, cohist_invcnumber, cohist_invcdate 
 ORDER BY salesrep_number, cust_number, cohist_invcdate
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: BriefSalesHistoryByCustomer
 QUERY: head
 SELECT cust_name,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("prodcat_id") ?>
          ( SELECT (prodcat_code||'-'||prodcat_descrip)
              FROM prodcat
             WHERE (prodcat_id=<? value("prodcat_id") ?>) )
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('All Product Categories')
        <? endif ?>
        AS prodcat,
        formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate
   FROM cust
  WHERE (cust_id=<? value("cust_id") ?>);
     
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohist_ordernumber AS sonumber,
        cohist_invcnumber AS invnumber,
        formatDate(cohist_orderdate) AS orddate,
        formatDate(cohist_invcdate, 'Return') AS shipdate,
-       SUM(round(cohist_qtyshipped * cohist_unitprice,2)) AS extended,
-       formatMoney(SUM(round(cohist_qtyshipped * cohist_unitprice,2))) AS f_total,
-       SUM(round(cohist_qtyshipped * cohist_unitprice,2)) AS total
+       SUM(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)) as extended,
+       formatMoney(SUM(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2))) as f_total,
+       SUM(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)) as total
   FROM cohist, itemsite, item 
  WHERE ((cohist_itemsite_id=itemsite_id)
   AND (itemsite_item_id=item_id)
   AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
   AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("prodcat_id") ?>
   AND (item_prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
   AND (item_prodcat_id in (SELECT prodcat_id
                              FROM prodcat
                             WHERE (prodcat_code ~ <? value("prodcat_pattern") ?>) ) )
 <? endif ?>
   AND (cohist_cust_id=<? value("cust_id") ?>) )
 GROUP BY cohist_ordernumber, cohist_invcnumber, cohist_orderdate, cohist_invcdate
 ORDER BY cohist_invcdate, cohist_orderdate;
       
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: BriefSalesHistoryByCustomerType
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("custtype_id") ?>
          ( SELECT (custtype_code||'-'||custtype_descrip)
              FROM custtype
             WHERE (custtype_id=<? value("custtype_id") ?>) )
        <? elseif exists("custtype_pattern") ?>
          text(<? value("custtype_pattern") ?>)
        <? else ?>
          text('All Customer Types')
        <? endif ?>
        AS custtype,
        formatDate(<? value("startDate") ?>) as startdate,
        formatDate(<? value("endDate") ?>) as enddate;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT custtype_id, custtype_code, cust_name,
        cohist_ordernumber AS sonumber,
        cohist_invcnumber AS invnumber,
        formatDate(cohist_orderdate) AS orddate,
        formatDate(cohist_invcdate) AS shipdate,
-       SUM(round(cohist_qtyshipped * cohist_unitprice,2)) as extended,
-       formatMoney(SUM(round(cohist_qtyshipped * cohist_unitprice,2)))  AS f_total,
-       SUM(round(cohist_qtyshipped * cohist_unitprice,2))  AS total
+       SUM(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)) as extended,
+       formatMoney(SUM(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2))) as f_total,
+       SUM(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)) as total
   FROM cohist, cust, custtype, itemsite, item
  WHERE ((cohist_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (cohist_cust_id=cust_id)
    AND (cust_custtype_id=custtype_id)
    AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("custtype_id") ?>
    AND (cust_custtype_id=<? value("custtype_id") ?>)
 <? elseif exists("custtype_pattern") ?>
    AND (cust_custtype_id IN (SELECT custtype_id
                                FROM custtype
                               WHERE (custtype_code ~ <? value("custtype_pattern") ?>) ) )
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 GROUP BY custtype_id, custtype_code, cust_name,
          cohist_ordernumber, cohist_invcnumber,
          cohist_orderdate, cohist_invcdate
 ORDER BY cohist_invcdate, cohist_orderdate;
       
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CapacityUOMsByClassCode
 QUERY: head
 SELECT <? if exists("classcode_id") ?>
          ( SELECT (classcode_code || '-' || classcode_descrip)
              FROM classcode
             WHERE (classcode_id=<? value("classcode_id") ?>) )
        <? elseif exists("classcode_pattern") ?>
          text(<? value("classcode_pattern") ?>)
        <? else ?>
          text('All Class Codes')
        <? endif ?>
        AS classcode;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT classcode_code,
        item_number,
        item_descrip1,
        item_descrip2,
        uom_name,
        itemcapuom(item_id) AS capuom,
        formatRatio(itemcapinvrat(item_id)) AS capratio,
        itemaltcapuom(item_id) AS altcapuom,
        formatRatio(itemaltcapinvrat(item_id)) AS altcapratio,
-       item_shipuom,
+       itemsellinguom(item_id) AS shipuom,
        formatRatio(iteminvpricerat(item_id)) AS shipratio
   FROM item, classcode, uom
  WHERE ((item_classcode_id=classcode_id)
    AND (item_inv_uom_id=uom_id)
 <? if exists("classcode_id") ?>
    AND (classcode_id=<? value("classcode_id") ?>)
 <? elseif exists("classcode_pattern") ?>
    AND (classcode_code ~ <? value("classcode_pattern") ?>)
 <? endif ?>
 )
 ORDER BY classcode_code, item_number;
     
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CapacityUOMsByProductCategory
 QUERY: detail
 SELECT prodcat_code,
        item_number,
        item_descrip1,
        item_descrip2,
        uom_name,
        itemcapuom(item_id) AS capuom,
        formatRatio(itemcapinvrat(item_id)) AS capratio,
        itemaltcapuom(item_id) AS altcapuom,
        formatRatio(itemaltcapinvrat(item_id)) AS altcapratio,
-       item_shipuom,
-       formatRatio(item_shipinvrat) AS shipratio
+       itemsellinguom(item_id) AS shipuom,
+       formatRatio(iteminvpricerat(item_id)) AS shipratio
   FROM item, prodcat, uom
  WHERE ((item_sold)
    AND (item_inv_uom_id=uom_id)
    AND (item_prodcat_id=prodcat_id)
 <? if exists("prodcat_id") ?>
    AND (prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (prodcat_code ~ <? value("prodcat_pattern") ?>)
 <? endif ?>
 )
 ORDER BY prodcat_code, item_number;
     
 --------------------------------------------------------------------
   
 QUERY: head
 SELECT <? if exists("prodcat_id") ?>
          ( SELECT (prodcat_code||'-'||prodcat_descrip)
              FROM prodcat
             WHERE (prodcat_id=<? value("prodcat_id") ?>) )
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('All Product Categories')
        <? endif ?>
        AS prodcat;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CashReceipts
 QUERY: head
 SELECT <? if exists("cust_id") ?>
          (SELECT (cust_number || '-' || cust_name)
             FROM cust
            WHERE (cust_id=<? value("cust_id") ?>) )
        <? elseif exists("custtype_id") ?>
          (select (custtype_code||'-'||custtype_descrip)
             FROM custtype
            WHERE (custtype_id=<? value("custtype_id") ?>) )
        <? elseif exists("custtype_pattern") ?>
          text(<? value("custtype_pattern") ?>)
        <? else ?>
          text('All Customers')
        <? endif ?>
        AS f_value,
        <? if exists("custtype_id") ?>
          text('Cust. Type:')
        <? elseif exists("custtype_pattern") ?>
          text('Cust. Type Pattern:')
        <? else ?>
          text('Customer:')
        <? endif ?>
        AS f_label,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT arapply_id,
        1 AS type,
        cust_number,
        cust_name,
        formatDate(arapply_postdate) AS f_postdate,
        ( CASE WHEN (arapply_source_doctype='C') THEN text('C/M')
               WHEN (arapply_fundstype='C') THEN text('Check')
               WHEN (arapply_fundstype='T') THEN text('Certified Check')
               WHEN (arapply_fundstype='M') THEN text('M/C')
               WHEN (arapply_fundstype='V') THEN text('Visa')
               WHEN (arapply_fundstype='A') THEN text('AmEx')
               WHEN (arapply_fundstype='D') THEN text('Discover')
               WHEN (arapply_fundstype='R') THEN text('Other C/C')
               WHEN (arapply_fundstype='K') THEN text('C/R')
               WHEN (arapply_fundstype='W') THEN text('Wire Trans.')
               WHEN (arapply_fundstype='O') THEN text('Other')
          END || ' ' ||
          CASE WHEN (arapply_source_doctype='C') THEN TEXT(arapply_source_docnumber)
               ELSE arapply_refnumber
          END ) AS source,
        ( CASE WHEN (arapply_target_doctype='D') THEN text('D/M')
               WHEN (arapply_target_doctype='I') THEN text('Invoice')
               ELSE text('Other')
          END || ' ' || TEXT(arapply_target_docnumber) ) AS target,
        formatMoney(arapply_applied) AS f_applied,
-       arapply_applied, arapply_postdate AS sortdate
+       arapply_applied,
+       formatMoney(currtobase(arapply_curr_id,arapply_applied,arapply_postdate)) AS f_base_applied,
+       currtobase(arapply_curr_id,arapply_applied,arapply_postdate) AS base_applied,
+       currConcat(arapply_curr_id) AS currAbbr,
+       arapply_postdate AS sortdate
   FROM arapply, cust
  WHERE ( (arapply_cust_id=cust_id)
    AND (arapply_postdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
    AND (arapply_source_doctype='K')
 
 <? if exists("cust_id") ?>
    AND (cust_id=<? value("cust_id") ?>)
 <? elseif exists("custtype_id") ?>
    AND (cust_custtype_id=<? value("custtype_id") ?>)
 <? elseif exists("custtype_pattern") ?>
    AND (cust_custtype_id IN (SELECT custtype_id FROM custtype WHERE (custtype_code ~ <? value("custtype_pattern") ?>)))
 <? endif ?>
  )
 
  UNION SELECT cashrcpt_id,
        2 AS type,
        cust_number,
        cust_name,
        formatDate(cashrcpt_distdate) AS f_postdate,
        ( CASE WHEN (cashrcpt_fundstype='C') THEN text('Check')
               WHEN (cashrcpt_fundstype='T') THEN text('Certified Check')
               WHEN (cashrcpt_fundstype='M') THEN text('M/C')
               WHEN (cashrcpt_fundstype='V') THEN text('Visa')
               WHEN (cashrcpt_fundstype='A') THEN text('AmEx')
               WHEN (cashrcpt_fundstype='D') THEN text('Discover')
               WHEN (cashrcpt_fundstype='R') THEN text('Other C/C')
               WHEN (cashrcpt_fundstype='K') THEN text('C/R')
               WHEN (cashrcpt_fundstype='W') THEN text('Wire Trans.')
               WHEN (cashrcpt_fundstype='O') THEN text('Other')
          END || ' ' || cashrcpt_docnumber ) AS source,
        text('') AS target,
        formatMoney(cashrcpt_amount) AS f_applied,
-       cashrcpt_amount, cashrcpt_distdate AS sortdate
+       cashrcpt_amount,
+       formatMoney(currtobase(cashrcpt_curr_id,cashrcpt_amount,cashrcpt_distdate)) AS f_base_applied,
+       currtobase(cashrcpt_curr_id,cashrcpt_amount,cashrcpt_distdate) AS base_applied,
+       currConcat(cashrcpt_curr_id) AS currAbbr,
+       cashrcpt_distdate AS sortdate
   FROM cashrcpt, cust
  WHERE ( (cashrcpt_cust_id=cust_id)
    AND (cashrcpt_distdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 
 <? if exists("cust_id") ?>
    AND (cust_id=<? value("cust_id") ?>)
 <? elseif exists("custtype_id") ?>
    AND (cust_custtype_id=<? value("custtype_id") ?>)
 <? elseif exists("custtype_pattern") ?>
    AND (cust_custtype_id IN (SELECT custtype_id FROM custtype WHERE (custtype_code ~ <? value("custtype_pattern") ?>)))
 <? endif ?>
  )
 
  UNION SELECT aropen_id,
        3 AS type,
        cust_number,
        cust_name,
        formatDate(aropen_docdate) AS f_postdate,
        ( CASE WHEN (substr(aropen_notes, 16, 1)='C') THEN text('Check')
               WHEN (substr(aropen_notes, 16, 1)='T') THEN text('Certified Check')
               WHEN (substr(aropen_notes, 16, 1)='M') THEN text('M/C')
               WHEN (substr(aropen_notes, 16, 1)='V') THEN text('Visa')
               WHEN (substr(aropen_notes, 16, 1)='A') THEN text('AmEx')
               WHEN (substr(aropen_notes, 16, 1)='D') THEN text('Discover')
               WHEN (substr(aropen_notes, 16, 1)='R') THEN text('Other C/C')
               WHEN (substr(aropen_notes, 16, 1)='K') THEN text('C/R')
               WHEN (substr(aropen_notes, 16, 1)='W') THEN text('Wire Trans.')
               WHEN (substr(aropen_notes, 16, 1)='O') THEN text('Other')
          END || ' ' ||
          substr(aropen_notes, 18)) AS source,
        TEXT('Unapplied') AS target,
        formatMoney(aropen_amount) AS f_applied,
-       aropen_amount, aropen_docdate AS sortdate
+       aropen_amount,
+       formatMoney(currtobase(aropen_curr_id,aropen_amount,aropen_docdate)) AS f_base_applied,
+       currtobase(aropen_curr_id,aropen_amount,aropen_docdate) AS base_applied,
+       currConcat(aropen_curr_id) AS currAbbr,
+       aropen_docdate AS sortdate
   FROM aropen, cust
  WHERE ( (aropen_cust_id=cust_id)
    AND (aropen_docdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
    AND (aropen_doctype='R')
 
 <? if exists("cust_id") ?>
    AND (cust_id=<? value("cust_id") ?>)
 <? elseif exists("custtype_id") ?>
    AND (cust_custtype_id=<? value("custtype_id") ?>)
 <? elseif exists("custtype_pattern") ?>
    AND (cust_custtype_id IN (SELECT custtype_id FROM custtype WHERE (custtype_code ~ <? value("custtype_pattern") ?>)))
 <? endif ?>
  )
 
 ORDER BY sortdate, source;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CheckJournal
 QUERY: detail
-SELECT checkrecip_name,
+SELECT bankaccnt_name,
+       checkrecip_name,
        checkhead_number,
        formatDate(checkhead_checkdate) AS f_checkdate,
        formatMoney(checkhead_amount) AS f_amount,
-       checkhead_amount
-  FROM checkhead, checkrecip
- WHERE ((checkhead_recip_id=checkrecip_id)
+       checkhead_amount,
+       formatMoney(currtobase(checkhead_curr_id,checkhead_amount,checkhead_checkdate)) AS f_baseamount,
+       currtobase(checkhead_curr_id,checkhead_amount,checkhead_checkdate) AS baseamount,
+       currconcat(checkhead_curr_id) AS currAbbr
+  FROM checkhead, bankaccnt, checkrecip
+ WHERE ((checkhead_bankaccnt_id=bankaccnt_id)
+   AND  (checkhead_recip_id=checkrecip_id)
    AND  (checkhead_recip_type=checkrecip_type)
    AND  (checkhead_journalnumber=<? value("journalNumber") ?>) )
-ORDER BY checkhead_number;
+ORDER BY bankaccnt_name, checkhead_number;
     
 --------------------------------------------------------------------
   
 QUERY: head
 SELECT (jrnluse_use || TEXT(jrnluse_number)) AS f_number,
        formatDate(jrnluse_date) AS f_date
   FROM jrnluse
  WHERE ((jrnluse_use='AP-CK')
    AND (jrnluse_number=<? value("journalNumber") ?>));
 
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CheckRegister
 QUERY: head
 SELECT bankaccnt_name,
        bankaccnt_descrip,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        curr_symbol
   FROM bankaccnt, curr_symbol
  WHERE ((bankaccnt_id=<? value("bankaccnt_id") ?>)
    AND  (bankaccnt_curr_id = curr_id));
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT checkhead_id AS checkid,
        CASE WHEN(checkhead_void) THEN -1
             WHEN(checkhead_posted) THEN 1
             ELSE 0
        END AS extra,
        -1 AS checkitem_id,
        formatBoolYN(checkhead_void) AS f_void,
        formatBoolYN(checkhead_misc) AS f_misc,
        formatBoolYN(checkhead_printed) AS f_printed,
        formatBoolYN(checkhead_posted) AS f_posted,
        CASE when checkhead_number = -1 THEN
          'Unspecified'
        ELSE TEXT(checkhead_number) END AS number,
        COALESCE(checkrecip_number || '-' || checkrecip_name,
 		checkhead_recip_type || '-' || checkhead_recip_id ) AS description,
        formatDate(checkhead_checkdate) AS f_checkdate,
        formatMoney(checkhead_amount) AS f_amount, 
        currConcat(checkhead_curr_id) AS currAbbr,
        checkhead_number,
        1 AS orderby
   FROM checkhead LEFT OUTER JOIN
        checkrecip ON ((checkhead_recip_id=checkrecip_id)
 		 AND  (checkhead_recip_type=checkrecip_type))
  WHERE ((checkhead_checkdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
-   AND   (checkhead_bankaccnt_id=<? value("bankaccnt_id") ?>) )
+   AND   (checkhead_bankaccnt_id=<? value("bankaccnt_id") ?>)
+   <? if exists("check_number") ?>
+      AND   (CAST(checkhead_number AS text) ~ <? value("check_number") ?>)
+   <? endif ?>
+   <? if exists("recip") ?>
+      <? if exists("recip_type_v") ?>
+	 AND   (checkhead_recip_type = 'V' )
+      <? endif ?>
+      <? if exists("recip_type_c") ?>
+	 AND   (checkhead_recip_type = 'C' )
+      <? endif ?>
+      <? if exists("recip_type_t") ?>
+	 AND   (checkhead_recip_type = 'T' )
+      <? endif ?>
+      <? if exists("recip_id") ?>
+	 AND   (checkhead_recip_id = <? value("recip_id") ?> )
+      <? endif ?>
+   <? endif ?> 
+   )
 <? if exists("showDetail") ?>
 UNION
 SELECT checkitem_checkhead_id AS checkid, 0 AS extra, checkitem_id,
        '' AS f_void, '' AS f_misc, '' AS f_printed, '' AS f_posted,
        checkitem_vouchernumber AS number,
        checkitem_invcnumber AS description,
        '' AS f_checkdate,
        formatMoney(checkitem_amount) AS f_amount,
        currConcat(checkitem_curr_id) AS currAbbr, 
        checkhead_number, 
        2 AS orderby 
   FROM checkitem, checkhead 
  WHERE ( (checkitem_checkhead_id=checkhead_id)
    AND   (checkhead_checkdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
-   AND   (checkhead_bankaccnt_id=<? value("bankaccnt_id") ?>) )
+   AND   (checkhead_bankaccnt_id=<? value("bankaccnt_id") ?>)
+      <? if exists("check_number") ?>
+      AND   (CAST(checkhead_number AS text) ~ <? value("check_number") ?>)
+   <? endif ?>
+   <? if exists("recip") ?>
+      <? if exists("recip_type_v") ?>
+         AND   (checkhead_recip_type = 'V' )
+      <? endif ?>
+      <? if exists("recip_type_c") ?>
+         AND   (checkhead_recip_type = 'C' )
+      <? endif ?>
+      <? if exists("recip_type_t") ?>
+         AND   (checkhead_recip_type = 'T' )
+      <? endif ?>
+      <? if exists("recip_id") ?>
+         AND   (checkhead_recip_id = <? value("recip_id") ?> )
+      <? endif ?>
+   <? endif ?> )
 <? endif ?>
  ORDER BY checkhead_number, checkid, orderby;
 --------------------------------------------------------------------
   
 QUERY: total
 SELECT formatMoney(SUM(currToCurr(checkhead_curr_id, bankaccnt_curr_id, checkhead_amount, checkhead_checkdate))) AS f_amount,
        currConcat(bankaccnt_curr_id) AS currAbbr
   FROM checkhead, checkrecip, bankaccnt
  WHERE ( (checkhead_recip_id=checkrecip_id)
    AND   (checkhead_recip_type=checkrecip_type)
    AND   (NOT checkhead_void)
    AND   (checkhead_checkdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
    AND   (checkhead_bankaccnt_id=bankaccnt_id)
-   AND   (checkhead_bankaccnt_id=<? value("bankaccnt_id") ?>) )
+   AND   (checkhead_bankaccnt_id=<? value("bankaccnt_id") ?>)
+   <? if exists("check_number") ?>
+      AND   (CAST(checkhead_number AS text) ~ <? value("check_number") ?>)
+   <? endif ?>
+   <? if exists("recip") ?>
+      <? if exists("recip_type_v") ?>
+         AND   (checkhead_recip_type = 'V' )
+      <? endif ?>
+      <? if exists("recip_type_c") ?>
+         AND   (checkhead_recip_type = 'C' )
+      <? endif ?>
+      <? if exists("recip_type_t") ?>
+         AND   (checkhead_recip_type = 'T' )
+      <? endif ?>
+      <? if exists("recip_id") ?>
+         AND   (checkhead_recip_id = <? value("recip_id") ?> )
+      <? endif ?>
+   <? endif ?> )
 GROUP BY bankaccnt_curr_id;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CostedIndentedBOM
 QUERY: head
 SELECT item_number,
-       item_invuom,
+       uom_name AS item_invuom,
        item_descrip1,
        item_descrip2,
        <? if exists("useActualCosts") ?>
          text('Using Actual Costs')
        <? else ?>
          text('Using Standard Costs')
        <? endif ?>
        AS lbl_usecosts,
        formatCost(actcost(item_id)) AS f_actual,
        formatCost(stdcost(item_id)) AS f_standard
-  FROM item
+  FROM item JOIN uom ON (uom_id=item_inv_uom_id)
  WHERE (item_id=<? value("item_id") ?>);
     
 --------------------------------------------------------------------
   
 QUERY: detail
 select (REPEAT(' ',(bomdata_bomwork_level-1)*3) || bomdata_bomwork_seqnumber) AS f_seqnumber,
        1 AS seq_ord,
        bomdata_item_number AS item_number,
        bomdata_uom_name AS item_invuom,
        bomdata_item_descrip1 AS item_descrip1,
        bomdata_item_descrip2 AS item_descrip2,
        bomdata_createchild as createchild,
        bomdata_issuemethod AS issuemethod,
-       bomdata_qtyper AS qtyper,
-       bomdata_scrap AS scrap,
-       bomdata_effective AS effective,
-       bomdata_expires AS expires,
+       formatQtyPer(bomdata_qtyper) AS qtyper,
+       formatScrap(bomdata_scrap) AS scrap,
+       CASE WHEN COALESCE(bomdata_effective, startOfTime()) <= startOfTime() THEN
+                 <? value("always") ?> 
+            ELSE formatDate(bomdata_effective)
+       END AS effective,
+       CASE WHEN COALESCE(bomdata_expires, endOfTime()) <= endOfTime() THEN
+                 <? value("never") ?>
+            ELSE formatDate(bomdata_expires)
+       END AS expires,
 <? if exists("useActualCosts") ?>
        formatCost(bomdata_actunitcost) AS f_unitcost,
        formatCost(bomdata_actextendedcost) AS f_extendedcost,
        CASE WHEN(bomdata_bomwork_parent_id=-1) THEN bomdata_actextendedcost
             ELSE 0
        END AS extendedcost,
 <? else ?>
        formatCost(bomdata_stdunitcost) AS f_unitcost,
        formatCost(bomdata_stdextendedcost) AS f_extendedcost,
        CASE WHEN(bomdata_bomwork_parent_id=-1) THEN bomdata_stdextendedcost
             ELSE 0
        END AS extendedcost,
 <? endif ?>
        bomdata_bomwork_level
-FROM indentedBOM(<? value("item_id") ?>,<? value("revision_id") ?>,0,0)
-ORDER BY seq_ord;
+FROM indentedBOM(<? value("item_id") ?>,<? value("revision_id") ?>,0,0);
+
 --------------------------------------------------------------------
   
 QUERY: bomhead
 SELECT bomhead_docnum, bomhead_revision,
 formatDate(bomhead_revisiondate) AS f_revisiondate
 FROM bomhead
 WHERE ((bomhead_item_id=<? value("item_id") ?>)
 AND (bomhead_rev_id=<? value("revision_id") ?>));
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CostedSingleLevelBOM
 QUERY: head
 SELECT item_number,
-       item_invuom,
+       uom_name AS item_invuom,
        item_descrip1,
        item_descrip2,
        formatCost(stdcost(item_id)) AS standardcost,
        formatCost(actcost(item_id)) AS actualcost,
        <? if exists("useActualCosts") ?>
          text('Actual Cost')
        <? else ?>
          text('Standard Cost')
        <? endif ?>
        AS costtype
-  FROM item
+  FROM item JOIN uom ON (uom_id=item_inv_uom_id)
  WHERE (item_id=<? value("item_id") ?>);
     
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT bomdata_bomwork_seqnumber AS orderby,
   CASE WHEN bomdata_bomwork_seqnumber > 0 THEN
     text(bomdata_bomwork_seqnumber)
   ELSE NULL
   END AS seqnumber,
   bomdata_item_number AS item_number,
   bomdata_uom_name AS item_invuom,
   bomdata_item_descrip1 AS item_descrip1,
   bomdata_item_descrip2 AS item_descrip2,
   bomdata_issuemethod AS issuemethod,
-  bomdata_qtyper AS qtyper,
-  bomdata_scrap AS scrap,
+  formatQtyPer(bomdata_qtyper) AS qtyper,
+  formatScrap(bomdata_scrap) AS scrap,
   CASE
     WHEN item_inv_uom_id IS NOT NULL THEN
       formatqtyper(bomitem_qtyper * (1 + bomitem_scrap) * itemuomtouomratio(bomitem_item_id,bomitem_uom_id,item_inv_uom_id)) 
     ELSE
       ''
   END AS qtyreq,
-  bomdata_effective AS effective,
-  bomdata_expires AS expires,
+  CASE WHEN COALESCE(bomdata_effective, startOfTime()) <= startOfTime() THEN
+             <? value("always") ?>
+       ELSE formatDate(bomdata_effective)
+  END AS effective,
+  CASE WHEN COALESCE(bomdata_expires, endOfTime()) >= endOfTime() THEN
+             <? value("never") ?>
+       ELSE formatDate(bomdata_expires)
+  END AS expires,
 <? if exists("useActualCosts") ?>
   formatCost(bomdata_actunitcost)
 <? else ?>
   formatCost(bomdata_stdunitcost)
 <? endif ?>
   AS unitcost,
 <? if exists("useActualCosts") ?>
   formatCost(bomdata_actextendedcost)
 <? else ?>
   formatCost(bomdata_stdextendedcost)
 <? endif ?>
   AS extcost
 FROM singlelevelbom(<? value("item_id") ?>,<? value("revision_id") ?>,0,0)
   LEFT OUTER JOIN bomitem ON (bomdata_bomitem_id=bomitem_id)
   LEFT OUTER JOIN item ON (bomitem_item_id=item_id)
 ORDER BY orderby;
     
 --------------------------------------------------------------------
   
 QUERY: bomhead
 SELECT bomhead_docnum, bomhead_revision,
 formatDate(bomhead_revisiondate) AS f_revisiondate
 FROM bomhead
 WHERE ((bomhead_item_id=<? value("item_id") ?>)
 AND (bomhead_rev_id=<? value("revision_id") ?>));
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CostedSummarizedBOM
 QUERY: head
 SELECT item_number,
-       item_invuom,
+       uom_name AS item_invuom,
        item_descrip1,
        item_descrip2,
 <? if exists("useActualCosts") ?>
        text('Actual Costs') AS f_costtype
 <? else ?>
        text('Standard Costs') AS f_costtype
 <? endif ?>
-  FROM item
+  FROM item JOIN uom ON (uom_id=item_inv_uom_id)
  WHERE (item_id=<? value("item_id") ?>);
     
 --------------------------------------------------------------------
   
 QUERY: detail
 select bomdata_item_number AS item_number,
        bomdata_uom_name AS item_invuom,
        bomdata_item_descrip1 AS item_descrip1,
        bomdata_item_descrip2 AS item_descrip2,
-       bomdata_qtyper AS qtyper,
+       formatQtyPer(bomdata_qtyper) AS qtyper,
 <? if exists("useActualCosts") ?>
        formatCost(bomdata_actunitcost) AS f_cost,
        formatCost(bomdata_actextendedcost) AS f_extcost
 <? else ?>
        formatCost(bomdata_stdunitcost) AS f_cost,
        formatCost(bomdata_stdextendedcost) AS f_extcost
 <? endif ?>
   FROM summarizedBOM(<? value("item_id") ?>,<? value("revision_id") ?>,<? value("expiredDays") ?>,<? value("futureDays") ?>);
 --------------------------------------------------------------------
   
 QUERY: bomhead
 SELECT bomhead_docnum, bomhead_revision,
 formatDate(bomhead_revisiondate) AS f_revisiondate
 FROM bomhead
 WHERE ((bomhead_item_id=<? value("item_id") ?>)
 AND (bomhead_rev_id=<? value("revision_id") ?>));
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CountSlipsByWarehouse
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT invcnt_tagnumber AS tagnum,
        <? if exists("asNumeric") ?>
          int4(cntslip_number)
        <? else ?>
          cntslip_number
        <? endif ?>
        AS slipnum,
        warehous_code,
        item_number,
        item_descrip1,
        item_descrip2,
        formatDate(cntslip_entered) AS date_entered,
        ('( ' || getUsername(cntslip_user_id) || ' )') AS enteredby,
        formatQty(cntslip_qty) AS f_qtycounted,
        formatBoolYN(cntslip_posted) AS f_posted
   FROM cntslip, invcnt, itemsite, item, warehous
  WHERE ((cntslip_cnttag_id=invcnt_id)
    AND (invcnt_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (itemsite_warehous_id=warehous_id)
    AND (cntslip_entered BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if not exists("showUnposted") ?>
    AND (cntslip_posted)
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY slipnum;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CountTagEditList
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
                    FROM warehous
                    WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("classcode_id") ?>
          ( SELECT (classcode_code ||'-'||classcode_descrip)
              FROM classcode
             WHERE (classcode_id=<? value("classcode_id") ?>) ) AS code,
 	  text('Class Code:') AS codelbl
        <? elseif exists("classcode_pattern") ?>
          text(<? value("classcode_pattern") ?>) AS code,
          text('Class Code:') AS codelbl
        <? elseif exists("plancode_id") ?>
          ( SELECT (plancode_code ||'-'|| plancode_name)
              FROM plancode
             WHERE (plancode_id=<? value("plancode_id") ?>) ) AS code,
 	  text('Planner Code:') AS codelbl
        <? elseif exists("plancode_pattern") ?>
          text(<? value("plancode_pattern") ?>) AS code,
          text('Planner Code:') AS codelbl
        <? else ?>
          text('') AS code,
          text('') AS codelbl
        <? endif ?>
        
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT formatBoolYN(invcnt_priority) AS f_priority,
        CASE WHEN (invcnt_tagnumber IS NULL) THEN 'Misc.'
             ELSE invcnt_tagnumber
        END AS f_tagnumber, 
        formatDate(invcnt_tagdate) AS f_tagdate,
        item_number,
        item_descrip1,
        item_descrip2,
        warehous_code,
        CASE WHEN (invcnt_location_id IS NOT NULL)
                  THEN (SELECT formatQty(SUM(itemloc_qty))
                          FROM itemloc
                         WHERE ((itemloc_itemsite_id=itemsite_id)
                           AND  (itemloc_location_id=invcnt_location_id)) )
             ELSE formatQty(itemsite_qtyonhand)
        END AS f_qoh,
        CASE WHEN (location_id IS NOT NULL)
                  THEN location_name
             ELSE 'All' END AS location_name,
        CASE WHEN (invcnt_qoh_after IS NULL) THEN ''
             ELSE formatQty(invcnt_qoh_after)
        END AS f_cntqty,
        CASE WHEN (invcnt_qoh_after IS NULL) THEN ''
             ELSE formatQty(invcnt_qoh_after - itemsite_qtyonhand)
        END AS f_variance,
        CASE WHEN (invcnt_qoh_after IS NULL) THEN ''
             WHEN ((itemsite_qtyonhand = 0) AND (invcnt_qoh_after > 0)) THEN formatScrap(1)
             WHEN ((itemsite_qtyonhand = 0) AND (invcnt_qoh_after < 0)) THEN formatScrap(-1)
             WHEN ((itemsite_qtyonhand = 0) AND (invcnt_qoh_after = 0)) THEN formatScrap(0)
             ELSE formatScrap((1 - (invcnt_qoh_after / itemsite_qtyonhand)) * -1)
        END AS f_percent,
        formatExtPrice(stdcost(item_id) * (invcnt_qoh_after - itemsite_qtyonhand)) AS f_amount
   FROM invcnt LEFT OUTER JOIN location ON (invcnt_location_id=location_id),
        item, warehous, itemsite
  WHERE ((invcnt_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (itemsite_warehous_id=warehous_id)
    AND (NOT invcnt_posted)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("classcode_id") ?>
    AND (item_classcode_id=<? value("classcode_id") ?>)
 <? elseif exists("classcode_pattern") ?>
    AND (item_classcode_id IN ( SELECT classcode_id
                                  FROM classcode
                                 WHERE (classcode_code ~ <? value("classcode_pattern") ?>)))
 <? elseif exists("plancode_id") ?>
    AND (itemsite_plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
    AND (itemsite_plancode_id IN ( SELECT plancode_id
                                  FROM plancode
                                 WHERE (plancode_code ~ <? value("plancode_pattern") ?>)))
 <? endif ?>
 )
 ORDER BY f_priority DESC, item_number
 <? if exists("maxTags") ?>
     LIMIT <? value("maxTags") ?>
 <? endif ?>
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CountTagsByClassCode
 QUERY: head
 SELECT formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("classcode_id") ?>
          ( SELECT (classcode_code || '-' || classcode_descrip)
              FROM classcode
             WHERE (classcode_id=<? value("classcode_id") ?>) )
        <? elseif exists("classcode_pattern") ?>
          text(<? value("classcode_pattern") ?>)
        <? else ?>
          text('All Class Codes')
        <? endif ?>
        AS classcode,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT invcnt_id, invcnt_tagnumber, warehous_code,
        item_number, item_descrip1, item_descrip2,
        formatDate(invcnt_tagdate) AS createddate,
        getUsername(invcnt_tag_usr_id) AS createdby,
        CASE WHEN (invcnt_cntdate IS NULL) THEN ''
             ELSE formatDate(invcnt_cntdate)
        END AS entereddate,
        CASE WHEN (invcnt_cntdate IS NULL) THEN ''
             ELSE getUsername(invcnt_cnt_usr_id)
        END AS enteredby,
        CASE WHEN (NOT invcnt_posted) THEN ''
             ELSE formatDate(invcnt_postdate)
        END AS posteddate,
        CASE WHEN (NOT invcnt_posted) THEN ''
             ELSE getUsername(invcnt_post_usr_id)
        END AS postedby,
        CASE WHEN (NOT invcnt_posted) THEN ''
             ELSE formatQty(invcnt_qoh_before)
        END AS qohbefore,
        CASE WHEN (invcnt_qoh_after IS NULL) THEN ''
             ELSE formatQty(invcnt_qoh_after)
        END AS qohafter,
        CASE WHEN (NOT invcnt_posted) THEN ''
             ELSE formatQty(invcnt_qoh_after - invcnt_qoh_before)
        END AS variance,
        CASE WHEN (NOT invcnt_posted) THEN ''
             WHEN (invcnt_qoh_before=0) THEN formatScrap(1)
             ELSE formatScrap((1 - (invcnt_qoh_after / invcnt_qoh_before)) * -1)
        END AS percentage
   FROM invcnt, itemsite, item, warehous
  WHERE ((invcnt_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (itemsite_warehous_id=warehous_id)
    AND (date(invcnt_tagdate) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if not exists("showUnposted") ?>
    AND (invcnt_posted)
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("classcode_id") ?>
    AND (item_classcode_id=<? value("classcode_id") ?>)
 <? elseif exists("classcode_pattern") ?>
    AND (item_classcode_id IN (SELECT classcode_id
                                 FROM classcode
                                WHERE (classcode_code ~ <? value("classcode_pattern") ?>)))
 <? endif ?>
 )
 ORDER BY invcnt_tagdate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CountTagsByItem
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse
   FROM item
  WHERE (item_id=<? value("item_id") ?>);
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT invcnt_tagnumber, warehous_code,
        formatDate(invcnt_tagdate) AS createddate,
        getUsername(invcnt_tag_usr_id) AS createdby,
        CASE WHEN (invcnt_cntdate IS NULL) THEN ''
             ELSE formatDate(invcnt_cntdate)
        END AS entereddate,
        CASE WHEN (invcnt_cntdate IS NULL) THEN ''
             ELSE getUsername(invcnt_cnt_usr_id)
        END AS enteredby,
        CASE WHEN (NOT invcnt_posted) THEN ''
             ELSE formatDate(invcnt_postdate)
        END AS posteddate,
        CASE WHEN (NOT invcnt_posted) THEN ''
             ELSE getUsername(invcnt_post_usr_id)
        END AS postedby,
        CASE WHEN (NOT invcnt_posted) THEN ''
             ELSE formatQty(invcnt_qoh_before)
        END AS qohbefore,
        CASE WHEN (invcnt_qoh_after IS NULL) THEN ''
             ELSE formatQty(invcnt_qoh_after)
        END AS qohafter,
        CASE WHEN (NOT invcnt_posted) THEN ''
             ELSE formatQty(invcnt_qoh_after - invcnt_qoh_before)
        END AS variance,
        CASE WHEN (NOT invcnt_posted) THEN ''
             WHEN (invcnt_qoh_before=0) THEN formatScrap(1)
             ELSE formatScrap((1 - (invcnt_qoh_after / invcnt_qoh_before)) * -1)
        END AS percentage
   FROM invcnt, itemsite, warehous
  WHERE ((invcnt_itemsite_id=itemsite_id)
    AND (itemsite_warehous_id=warehous_id)
    AND (itemsite_item_id=<? value("item_id") ?>)
    AND (invcnt_tagdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if not exists("showUnposted") ?>
    AND (invcnt_posted)
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY invcnt_tagdate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CountTagsByWarehouse
 QUERY: head
 SELECT formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT invcnt_id,
        formatcounttagbarcode(invcnt_id) AS countag_barcode, 
        invcnt_tagnumber, 
        warehous_code,
        item_number, item_descrip1, item_descrip2,
        formatDate(invcnt_tagdate) AS createddate,
        getUsername(invcnt_tag_usr_id) AS createdby,
        CASE WHEN (invcnt_cntdate IS NULL) THEN ''
             ELSE formatDate(invcnt_cntdate)
        END AS entereddate,
        CASE WHEN (invcnt_cntdate IS NULL) THEN ''
             ELSE getUsername(invcnt_cnt_usr_id)
        END AS enteredby,
        CASE WHEN (NOT invcnt_posted) THEN ''
             ELSE formatDate(invcnt_postdate)
        END AS posteddate,
        CASE WHEN (NOT invcnt_posted) THEN ''
             ELSE getUsername(invcnt_post_usr_id)
        END AS postedby,
        CASE WHEN (NOT invcnt_posted) THEN ''
             ELSE formatQty(invcnt_qoh_before)
        END AS qohbefore,
        CASE WHEN (invcnt_qoh_after IS NULL) THEN ''
             ELSE formatQty(invcnt_qoh_after)
        END AS qohafter,
        CASE WHEN (NOT invcnt_posted) THEN ''
             ELSE formatQty(invcnt_qoh_after - invcnt_qoh_before)
        END AS variance,
        CASE WHEN (NOT invcnt_posted) THEN ''
             WHEN ((invcnt_qoh_before = 0) AND (invcnt_qoh_after = 0)) THEN formatScrap(0)
             WHEN (invcnt_qoh_before=0) THEN formatScrap(1)
             ELSE formatScrap((1 - (invcnt_qoh_after / invcnt_qoh_before)) * -1)
        END AS percentage
   FROM invcnt, itemsite, item, warehous
  WHERE ((invcnt_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (itemsite_warehous_id=warehous_id)
    AND (DATE(invcnt_tagdate) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if not exists("showUnposted") ?>
    AND (invcnt_posted)
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY invcnt_tagdate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CreditMemo
 QUERY: GroupHead
 SELECT remitto.*,
        cmhead_number,
        formatDate(cmhead_docdate) AS docdate,
        cust_number,
        cust_name,
        cust_address1,
        cust_address2,
        cust_address3,
        (COALESCE(cust_city,'') || '  ' || COALESCE(cust_state,'') || '  ' || COALESCE(cust_zipcode,'')) AS cust_citystatezip,
        cust_phone,
        cmhead_shipto_name,
        cmhead_shipto_address1,
        cmhead_shipto_address2,
        cmhead_shipto_address3,
        (COALESCE(cmhead_shipto_city,'') ||'  '|| COALESCE(cmhead_shipto_state,'') || '  '|| COALESCE(cmhead_shipto_zipcode,'')) AS shipto_citystatezip,
        CASE 
-         WHEN (cmhead_invcnumber=-1) THEN ''
-         ELSE text(cmhead_invcnumber)
+         WHEN (cmhead_invcnumber='-1') THEN ''
+         ELSE cmhead_invcnumber
        END AS invcnumber,
        cmhead_custponumber,
        cmhead_comments,
-       cmhead_misc_descrip
+       cmhead_misc_descrip,
+       currconcat(cmhead_curr_id) AS currabbr
   FROM remitto, cmhead, cust
  WHERE ((cmhead_cust_id=cust_id)
    AND (cmhead_id=%1))
 ORDER BY cmhead_number;
 --------------------------------------------------------------------
   
 QUERY: Detail
 SELECT cmitem_linenumber,
        formatQty(cmitem_qtycredit) AS qtycredit,
        formatQty(cmitem_qtyreturned) AS qtyreturned,
        uom_name,
        item_number,
        item_descrip1,
        item_descrip2,
        formatSalesPrice(cmitem_unitprice) AS unitprice,
        formatMoney((cmitem_qtycredit * cmitem_qty_invuomratio) * (cmitem_unitprice / cmitem_price_invuomratio)) AS extprice,
        cmitem_comments
   FROM cmitem, itemsite, item, uom
  WHERE ((cmitem_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (cmitem_cmhead_id=%1))
 ORDER BY cmitem_linenumber;
 --------------------------------------------------------------------
   
 QUERY: GroupFoot
 SELECT formatExtPrice(SUM((cmitem_qtycredit * cmitem_qty_invuomratio) * cmitem_unitprice / cmitem_price_invuomratio)) AS extprice
   FROM cmhead, cmitem, itemsite, item
  WHERE ((cmitem_cmhead_id=cmhead_id)
    AND (cmitem_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (cmhead_id=%1));
 --------------------------------------------------------------------
   
 QUERY: GroupExtended
 SELECT formatExtPrice(COALESCE(cmhead_freight,0.0) + COALESCE(cmhead_tax,0.0) + COALESCE(cmhead_misc,0.0) +
          ( SELECT COALESCE(SUM((cmitem_qtycredit * cmitem_qty_invuomratio) * cmitem_unitprice / cmitem_price_invuomratio), 0.0)
              FROM cmitem, itemsite, item
             WHERE ((cmitem_cmhead_id=%1)
               AND (cmitem_itemsite_id=itemsite_id)
               AND (itemsite_item_id=item_id)
              )
            )
          ) AS totaldue,
        formatExtPrice(COALESCE(cmhead_freight,0.0)) AS freight,
        formatExtPrice(COALESCE(cmhead_tax,0.0)) AS tax,
        formatExtPrice(COALESCE(cmhead_misc,0.0)) AS misc
   FROM cmhead
  WHERE (cmhead_id=%1);
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CreditMemoJournal
 QUERY: detail
 SELECT cust_number, cust_name, aropen_docnumber, aropen_doctype, formatDate(aropen_docdate) AS docdate,
-       aropen_applyto, formatExtPrice(aropen_amount) AS openamount, aropen_ponumber,
+       aropen_applyto, formatExtPrice(currtobase(aropen_curr_id,aropen_amount,aropen_docdate)) AS openamount, aropen_ponumber,
        (formatGLAccount(accnt_id) || ' - ' || accnt_descrip) AS accntnumber,
        CASE WHEN (gltrans_amount < 0) THEN formatExtPrice(ABS(gltrans_amount))
             ELSE ''
        END AS debit,
        CASE WHEN (gltrans_amount > 0) THEN formatExtPrice(gltrans_amount)
             ELSE ''
        END AS credit
 FROM aropen, gltrans, cust, accnt
 WHERE ( (aropen_cust_id=cust_id)
  AND (aropen_docnumber=gltrans_docnumber)
  AND (aropen_doctype IN ('C', 'R'))
  AND (gltrans_doctype='CM')
  AND (gltrans_accnt_id=accnt_id)
  AND (gltrans_journalnumber=<? value("journalNumber") ?>)
  AND (aropen_journalnumber=<? value("journalNumber") ?>) )
 ORDER BY aropen_docnumber, gltrans_amount, accnt_number;
     
 --------------------------------------------------------------------
   
 QUERY: distributions
 SELECT (formatGLAccount(accnt_id) || ' - ' || accnt_descrip) AS accntnumber,
        formatExtPrice(SUM(ABS(gltrans_amount))) AS debit,
        '' AS credit
 FROM gltrans, accnt
 WHERE ( (gltrans_accnt_id=accnt_id)
  AND (gltrans_amount < 0)
  AND (gltrans_journalnumber=<? value("journalNumber") ?>) )
 GROUP BY accntnumber
 
 UNION
 SELECT (formatGLAccount(accnt_id) || ' - ' || accnt_descrip) AS accntnumber,
        '' AS debit,
        formatExtPrice(SUM(gltrans_amount)) AS credit
 FROM gltrans, accnt
 WHERE ( (gltrans_accnt_id=accnt_id)
  AND (gltrans_amount > 0)
  AND (gltrans_journalnumber=<? value("journalNumber") ?>) )
 GROUP BY accntnumber; 
 --------------------------------------------------------------------
   
 QUERY: totaldocsales
-SELECT formatExtPrice(SUM(COALESCE(aropen_amount, 0))) AS amount
+SELECT formatExtPrice(SUM(COALESCE(currtobase(aropen_curr_id,aropen_amount,aropen_docdate), 0))) AS amount
 FROM aropen
 WHERE ( (aropen_doctype IN ('C', 'R'))
  AND (aropen_journalnumber=<? value("journalNumber") ?>) );
     
 --------------------------------------------------------------------
   
 QUERY: totaldebit
 SELECT formatExtPrice(SUM(ABS(gltrans_amount))) AS total
 FROM gltrans
 WHERE ( (gltrans_amount < 0)
  AND (gltrans_journalnumber=<? value("journalNumber") ?>) );
     
 --------------------------------------------------------------------
   
 QUERY: totalcredit
 SELECT formatExtPrice(SUM(gltrans_amount)) AS total
 FROM gltrans
 WHERE ( (gltrans_amount > 0)
  AND (gltrans_journalnumber=<? value("journalNumber") ?>) );
     
 --------------------------------------------------------------------
   
 QUERY: head
 SELECT (jrnluse_use || TEXT(jrnluse_number)) AS f_number,
        formatDate(jrnluse_date) AS f_date
 FROM jrnluse
 WHERE ((jrnluse_use='AR-CM')
   AND (jrnluse_number=<? value("journalNumber") ?>));
 
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: CustomerARHistory
 QUERY: head
 SELECT cust_name,
        formatDate(date(<? value("startDate") ?>)) AS startDate,
        formatDate(date(<? value("endDate") ?>)) AS endDate
   FROM cust
  WHERE (cust_id=<? value("cust_id") ?>);
     
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT aropen_id, -1 AS arapply_id,
        aropen_docnumber AS sortnumber,
        aropen_docnumber AS docnumber,
        formatBoolYN(aropen_open) AS f_open,
        CASE WHEN (aropen_doctype='I') THEN 'Invoice'
             WHEN (aropen_doctype='C') THEN 'C/M'
             WHEN (aropen_doctype='D') THEN 'D/M'
             WHEN (aropen_doctype='R') THEN 'C/D'
             ELSE 'Other'
        END AS documenttype,
        formatDate(aropen_docdate) AS f_docdate,
        formatDate(aropen_duedate) AS f_duedate,
-       formatMoney(aropen_amount) AS f_amount,
-       formatMoney((aropen_amount - aropen_paid)) AS f_balance
+       formatMoney(currtobase(aropen_curr_id,aropen_amount,aropen_docdate)) AS f_amount,
+       formatMoney(currtobase(aropen_curr_id,(aropen_amount - aropen_paid),aropen_docdate)) AS f_balance
 FROM aropen
 WHERE ( (aropen_cust_id=<? value("cust_id") ?>)
  AND (aropen_duedate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>) )
 
 UNION
 SELECT aropen_id, arapply_id,
        aropen_docnumber AS sortnumber,
        CASE WHEN (arapply_source_doctype='C') THEN arapply_source_docnumber
             WHEN (arapply_source_doctype='K') THEN arapply_refnumber
             ELSE 'Error'
        END AS docnumber,
        '' AS f_open,
        CASE WHEN (arapply_source_doctype='C') THEN 'C/M'
             WHEN (arapply_fundstype='C') THEN 'Check'
             WHEN (arapply_fundstype='T') THEN 'Certified Check'
             WHEN (arapply_fundstype='M') THEN 'Master Card'
             WHEN (arapply_fundstype='V') THEN 'Visa'
             WHEN (arapply_fundstype='A') THEN ';American Express'
             WHEN (arapply_fundstype='D') THEN 'Discover Card'
             WHEN (arapply_fundstype='R') THEN 'Other Credit Card'
             WHEN (arapply_fundstype='K') THEN 'Cash'
             WHEN (arapply_fundstype='W') THEN 'Wire Transfer'
             WHEN (arapply_fundstype='O') THEN 'Other'
        END AS documenttype,
        formatDate(arapply_postdate) AS f_docdate,
        '' AS f_duedate,
-       formatMoney(arapply_applied) AS f_amount,
+       formatMoney(currtobase(arapply_curr_id,arapply_applied,arapply_postdate)) AS f_amount,
        '' AS f_balance 
 FROM arapply, aropen
 WHERE ( (arapply_target_doctype IN ('I', 'D'))
  AND (arapply_target_doctype=aropen_doctype)
  AND (arapply_target_docnumber=aropen_docnumber)
  AND (arapply_cust_id=<? value("cust_id") ?>)
  AND (aropen_cust_id=<? value("cust_id") ?>)
  AND (aropen_duedate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>) )
 
 UNION
 SELECT aropen_id, arapply_id,
        aropen_docnumber AS sortnumber,
        arapply_target_docnumber AS docnumber,
        '' AS f_open,
        CASE WHEN (arapply_target_doctype='I') THEN 'Invoice'
             WHEN (arapply_target_doctype='D') THEN 'D/M'
             ELSE 'Other'
        END AS documenttype,
        formatDate(arapply_postdate) AS f_docdate,
        '' AS f_duedate,
-       formatMoney(arapply_applied) AS f_amount,
+       formatMoney(currtobase(arapply_curr_id,arapply_applied,arapply_postdate)) AS f_amount,
        '' AS f_balance
 FROM arapply, aropen
 WHERE ( (arapply_source_doctype IN ('K', 'C'))
  AND (arapply_source_doctype=aropen_doctype)
  AND (arapply_source_docnumber=aropen_docnumber)
  AND (arapply_cust_id=<? value("cust_id") ?>)
  AND (aropen_cust_id=<? value("cust_id") ?>)
  AND (aropen_duedate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>) )
 
 ORDER BY sortnumber DESC, arapply_id;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: 
 QUERY: head
 SELECT cosmisc_shipvia, formatDate(cosmisc_shipdate) AS shipdate,
                 cust_name, cust_address1, cust_address2,
                 (cust_city || '  ' || cust_state || '  ' || cust_zipcode) AS custcitystatezip,
                 cust_number, cohead_number, cohead_fob, cohead_custponumber,
                 warehous_descrip, warehous_addr1, warehous_addr2, warehous_addr3, warehous_addr4, warehous_fob,
                 cohead_shiptoname, cohead_shiptoaddress1, cohead_shiptoaddress2, cohead_shiptoaddress3,
                 (cohead_shiptocity || ' ' || cohead_shiptostate || ' ' || cohead_shiptozipcode) AS shiptocitystatezip,
                 cohead_shiptophone
          FROM cosmisc, cohead, warehous, cust
          WHERE ((cosmisc_cohead_id=cohead_id)
           AND (cohead_cust_id=cust_id)
           AND (cohead_warehous_id=warehous_id)
           AND (cosmisc_id=%1));
 --------------------------------------------------------------------
   
 QUERY: detail
-SELECT coitem_linenumber, formatQty(SUM(coship_qty)) AS invqty, uom_name, roundUp(SUM(coship_qty) / item_shipinvrat)::integer AS shipqty,
-                item_shipuom, item_number, item_descrip1, item_descrip2,
+SELECT coitem_linenumber, formatQty(SUM(coship_qty)) AS invqty, uom_name, roundUp(SUM(coship_qty) / itemuomratiobytype(item_id, 'Selling'))::integer AS shipqty,
+                itemsellinguom(item_id) AS shipuom, item_number, item_descrip1, item_descrip2,
                 formatQty(SUM(coship_qty) * item_prodweight) AS netweight,
                 formatQty(SUM(coship_qty) * (item_prodweight + item_packweight)) AS grossweight
          FROM coship, coitem, itemsite, item, uom
          WHERE ((coship_coitem_id=coitem_id)
           AND (coitem_itemsite_id=itemsite_id)
           AND (itemsite_item_id=item_id)
           AND (item_inv_uom_id=uom_id)
           AND (coship_cosmisc_id=%1))
-         GROUP BY coitem_linenumber, item_number, uom_name, item_shipinvrat, item_shipuom,
+         GROUP BY coitem_linenumber, item_number, uom_name, shipuom
                   item_descrip1, item_descrip2, item_prodweight, item_packweight
          ORDER BY coitem_linenumber;
     
 --------------------------------------------------------------------
   
 QUERY: foot
 SELECT formatQty(SUM(coship_qty * item_prodweight)) AS netweight,
                 formatQty(SUM(coship_qty * (item_prodweight + item_packweight))) AS grossweight,
                 CASE
                  WHEN ('%3' = 'C') THEN 'X'
                  ELSE ' '
                 END AS collectflag,
                 CASE
                  WHEN ('%3' = 'C') THEN 'Therm-O-Rock East, Inc.'
                  ELSE ' '
                 END AS section7,
                 CASE
                  WHEN ('%3' = 'C') THEN cust_name
                  ELSE ' '
                 END AS collect_name,
                 CASE
                  WHEN ('%3' = 'C') THEN cust_address1
                  ELSE ' '
                 END AS collect_address1,
                 CASE
                  WHEN ('%3' = 'C') THEN cust_address2
                  ELSE ' '
                 END AS collect_address2,
                 CASE
                  WHEN ('%3' = 'C') THEN (cust_city || '  ' || cust_state || '  ' || cust_zipcode)
                  ELSE ' '
                 END AS collect_address3
          FROM coship, cohead, cust, coitem, itemsite, item
          WHERE ((coship_coitem_id=coitem_id)
           AND (coitem_itemsite_id=itemsite_id)
           AND (itemsite_item_id=item_id)
           AND (coitem_cohead_id=cohead_id)
           AND (cohead_cust_id=cust_id)
           AND (coship_cosmisc_id=%1))
          GROUP BY cust_name, cust_address1, cust_address2, cust_city, cust_state, cust_zipcode;
 --------------------------------------------------------------------
   
 QUERY: notes
 SELECT cosmisc_notes
          FROM cosmisc
          WHERE (cosmisc_id=%1);
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: DeliveryDateVariancesByItem
 QUERY: head
 SELECT item_number, item_descrip1,
        item_descrip2, uom_name,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("agentUsername") ?>
        TEXT(<? value("agentUsername") ?>)
        <? else ?>
        TEXT('All Agents')
        <? endif ?>
        AS agentUsername
   FROM item JOIN uom ON (item_inv_uom_id=uom_id)
  WHERE (item_id=<? value("item_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT porecv_id, porecv_ponumber, vend_name,
        formatDate(porecv_date) as f_date,
        firstLine(porecv_vend_item_number) as f_itemnum,
        firstLine(porecv_vend_item_descrip) as f_itemdescrip,
        formatQty(porecv_qty) as f_qty,
        formatDate(porecv_duedate) as f_duedate,
        formatDate(porecv_date) as f_recvdate 
   FROM porecv, vend, itemsite 
  WHERE ( (porecv_vend_id=vend_id)
    AND (porecv_itemsite_id=itemsite_id)
    AND (itemsite_item_id=<? value("item_id") ?>)
    AND (date(porecv_date) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("agentUsername") ?>
    AND (porecv_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
  )
 ORDER BY porecv_date DESC;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: DeliveryDateVariancesByVendor
 QUERY: head
 SELECT vend_name,
        vend_number,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("agentUsername") ?>
        TEXT(<? value("agentUsername" ?>)
        <? else ?>
        TEXT('All Agents')
        <? endif ?>
        AS purchagent
   FROM vend
  WHERE (vend_id=<? value("vend_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT porecv_id, porecv_ponumber, vend_name,
        formatDate(porecv_date) as f_date,
        firstLine(porecv_vend_item_number) as f_itemnum,
        firstLine(porecv_vend_item_descrip) as f_itemdescrip,
        formatQty(porecv_qty) as f_qty,
        formatDate(porecv_duedate) as f_duedate,
        formatDate(porecv_date) as f_recvdate 
   FROM porecv, vend, itemsite 
  WHERE ( (porecv_vend_id=vend_id)
    AND (porecv_itemsite_id=itemsite_id)
    AND (vend_id=<? value("vend_id") ?>)
    AND (date(porecv_date) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("agentUsername") ?>
    AND (porecv_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
  )
 ORDER BY porecv_date DESC;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: DepositsRegister
 QUERY: head
 SELECT formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("showUsernames") ?>
          text('Username')
        <? else ?>
          text('')
        <? endif ?>
        AS f_username
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT gltrans_id,
        gltrans_journalnumber,
        formatDate(gltrans_date) AS transdate,
        gltrans_source,
        gltrans_doctype,
        gltrans_docnumber,
        firstLine(gltrans_notes) AS transnotes,
        (formatGLAccount(accnt_id) || ' - ' || accnt_descrip) AS account,
        gltrans_username,
        formatBoolYN(gltrans_posted) AS f_posted,
 -- Debits:
        CASE WHEN (gltrans_amount < 0) THEN formatMoney(ABS(gltrans_amount))
             ELSE ''
        END AS f_debit,       
        CASE WHEN (gltrans_amount < 0) THEN ABS(gltrans_amount)
             ELSE 0
        END AS debit_amt, 
 --Credits:
        CASE WHEN (gltrans_amount > 0) THEN formatMoney(gltrans_amount)
             ELSE ''
        END AS f_credit,
        CASE WHEN (gltrans_amount > 0) THEN gltrans_amount
             ELSE 0
        END AS credit_amt,
 --Balance:
        gltrans_amount * -1 as balance_amt,
 --AROPEN Amount
-       formatMoney(aropen_amount - aropen_paid) AS f_aropen_bal
+       formatMoney(currtobase(aropen_curr_id,(aropen_amount - aropen_paid),aropen_docdate)) AS f_aropen_bal
 
     FROM gltrans LEFT OUTER JOIN aropen ON ((text(gltrans_docnumber) = 'I-' || text(aropen_docnumber))
                                         AND (aropen_doctype='I')), accnt
 
  WHERE ((gltrans_accnt_id=accnt_id)
    AND (gltrans_date BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
    AND (gltrans_doctype = 'CR'))
 ORDER BY gltrans_created DESC, gltrans_sequence, gltrans_amount;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: EarnedCommissions
 QUERY: head
 SELECT <? if exists("salesrep_id") ?>
          ( SELECT salesrep_name
              FROM salesrep
             WHERE (salesrep_id=<? value("salesrep_id") ?>) )
        <? else ?>
          text('All Sales Reps')
        <? endif ?>
        AS salesrep,
        formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT salesrep_name, cohist_ordernumber,
        cust_number, cohist_shiptoname,
        formatDate(cohist_invcdate) AS f_invcdate,
        item_number, formatQty(cohist_qtyshipped) AS f_qty,
-       formatMoney(round(cohist_qtyshipped * cohist_unitprice,2)) AS f_extprice,
-       round(cohist_qtyshipped * cohist_unitprice,2) as extprice,
+       formatMoney(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)) AS f_extprice,
+       round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2) as extprice,
        formatMoney(cohist_commission) AS f_prcnt,
        round(cohist_commission,2) as prcnt,
        formatBoolYN(cohist_commissionpaid) AS f_earned
   FROM cohist, salesrep, cust, itemsite, item 
  WHERE ( (cohist_cust_id=cust_id)
    AND (cohist_salesrep_id=salesrep_id)
    AND (cohist_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (cohist_commission <> 0)
    AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("salesrep_id") ?>
    AND (salesrep_id=<? value("salesrep_id") ?>)
 <? endif ?>
 )
 ORDER BY salesrep_name, cohist_invcdate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: EmployeeList
 QUERY: detail
-SELECT e.emp_id, m.emp_id, e.emp_active, e.emp_code, e.emp_number,
+SELECT e.emp_id, m.emp_id, warehous_code, e.emp_code, e.emp_number,
+       cntct_first_name, cntct_last_name, 
        m.emp_code AS mgr_code, dept_number, shift_number 
-FROM emp e LEFT OUTER JOIN
-     emp m ON (e.emp_mgr_emp_id=m.emp_id) LEFT OUTER JOIN
-     shift ON (e.emp_shift_id=shift_id) LEFT OUTER JOIN
-     dept  ON (e.emp_dept_id=dept_id) 
+FROM emp e 
+  LEFT OUTER JOIN cntct ON (emp_cntct_id=cntct_id) 
+  LEFT OUTER JOIN whsinfo ON (emp_warehous_id=warehous_id) 
+  LEFT OUTER JOIN emp m ON (e.emp_mgr_emp_id=m.emp_id) 
+  LEFT OUTER JOIN shift ON (e.emp_shift_id=shift_id) 
+  LEFT OUTER JOIN dept  ON (e.emp_dept_id=dept_id) 
 WHERE ((LENGTH(TRIM(COALESCE(<? value("searchString") ?>,''))) = 0)
 <? if exists("searchCode") ?>
    OR (e.emp_code ~* <? value("searchString") ?>)
 <? endif ?>
 <? if exists("searchDept") ?>
    OR (dept_number ~* <? value("searchString") ?>)
    OR (dept_name   ~* <? value("searchString") ?>)
 <? endif ?>
 <? if exists("searchMgr") ?>
    OR (m.emp_code   ~* <? value("searchString") ?>)
    OR (m.emp_number ~* <? value("searchString") ?>)
 <? endif ?>
 <? if exists("searchNumber") ?>
    OR (e.emp_number ~* <? value("searchString") ?>)
 <? endif ?>
+<? if exists("searchName") ?>
+   OR (cntct_first_name ~* <? value("searchString") ?>)
+   OR (cntct_last_name   ~* <? value("searchString") ?>)
+<? endif ?>
 <? if exists("searchShift") ?>
    OR (shift_number ~* <? value("searchString") ?>)
    OR (shift_name   ~* <? value("searchString") ?>)
 <? endif ?>
       )
 <? if exists("activeOnly") ?>
    AND e.emp_active 
 <? endif ?>
+<? if exists("warehouse_id") ?>
+   AND (warehous_id=<? value("warehouse_id") ?>)
+<? endif ?>
 ORDER BY emp_code; 
 --------------------------------------------------------------------
   
 QUERY: head
 SELECT 'Search for "' || <? value("searchString") ?> ||
        '"' ||
 <? if exists("searchCode") ?> ' in Employee Code,' || <? endif ?>
 <? if exists("searchDept") ?> ' in Department, '    || <? endif ?>
 <? if exists("searchMgr") ?>  ' in Manager, '       || <? endif ?>
 <? if exists("searchNumber") ?> ' in Employee Number, ' || <? endif ?>
 <? if exists("searchShift") ?> ' in Shift, '            || <? endif ?>
 <? if exists("activeOnly") ?> ' Among Active Employees'
 <? else ?> ' Among All Employees'
 <? endif ?>
 AS filter;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ExpediteExceptionsByPlannerCode
 QUERY: head
 SELECT <? if exists("plancode_id") ?>
          ( SELECT (plancode_code || '-' || plancode_name)
              FROM plancode
             WHERE (plancode_id=<? value("plancode_id") ?>) )
        <? elseif exists("plancode_pattern") ?>
          text(<? value("plancode_pattern") ?>)
        <? else ?>
          text('All Planner Codes')
        <? endif ?>
        AS plannercode,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT planord_id AS order_id, 1 AS order_code,
        CASE WHEN (planord_type='W') THEN ('PW/O-' || formatPloNumber(planord_id))
             WHEN (planord_type='P') THEN ('PP/O-' || formatPloNumber(planord_id))
             ELSE text(planord_number)
        END AS order_number,
        warehous_code, item_number, item_descrip1, item_descrip2,
        CASE WHEN (planord_type='W') THEN formatDate(planord_startdate)
             ELSE formatDate(planord_duedate)
        END AS f_keydate,
        CASE WHEN (planord_type='W') THEN planord_startdate
             ELSE planord_duedate
        END AS keydate, 'Release Order' AS exception 
   FROM planord, itemsite, item, warehous 
  WHERE ( (planord_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (itemsite_warehous_id=warehous_id)
    AND ( ( (planord_type='W') AND (planord_startdate <= (CURRENT_DATE + <? value("lookAheadDays") ?>)) )
       OR ( (planord_type='P') AND (planord_duedate <= (CURRENT_DATE + <? value("lookAheadDays") ?>)) ) ) 
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("plancode_id") ?>
    AND (itemsite_plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
    AND (itemsite_plancode_id IN (SELECT plancode_id FROM plancode WHERE (plancode_code ~ <? value("plancode_pattern") ?>)))
 <? endif ?>
 )
 
 UNION SELECT wo_id AS order_id, 2 AS order_code, ('W/O-' || formatWoNumber(wo_id)) AS order_number,
              warehous_code, item_number, item_descrip1, item_descrip2,
              formatDate(wo_startdate) AS f_keydate, wo_startdate AS keydate, 'Start Production' AS exception 
 FROM wo, itemsite, item, warehous 
 WHERE ( (wo_itemsite_id=itemsite_id)
  AND (itemsite_item_id=item_id)
  AND (itemsite_warehous_id=warehous_id)
  AND (wo_status IN ('O', 'E', 'R'))
  AND (wo_startdate <= (CURRENT_DATE + <? value("lookAheadDays") ?>))
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("plancode_id") ?>
  AND (itemsite_plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
  AND (itemsite_plancode_id IN (SELECT plancode_id FROM plancode WHERE (plancode_code ~ <? value("plancode_pattern")?>)))
 <? endif ?>
 )
 
 UNION SELECT wo_id AS order_id, 2 AS order_code, ('W/O-' || formatWoNumber(wo_id)) AS order_number,
              warehous_code, item_number, item_descrip1, item_descrip2,
              formatDate(wo_startdate) AS f_keydate, wo_startdate AS keydate, 'Expedite Production' AS exception 
 FROM wo, itemsite, item, warehous 
 WHERE ( (wo_itemsite_id=itemsite_id)
  AND (itemsite_item_id=item_id)
  AND (itemsite_warehous_id=warehous_id)
  AND (wo_status='I')
  AND (wo_startdate <= (CURRENT_DATE + <? value("lookAheadDays") ?>))
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("plancode_id") ?>
  AND (itemsite_plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
  AND (itemsite_plancode_id IN (SELECT plancode_id FROM plancode WHERE (plancode_code ~ <? value("plancode_pattern") ?>)))
 <? endif ?>
 )
 order by keydate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ExpiredInventoryByClassCode
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          (SELECT warehous_code
             FROM warehous
            WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
          text('All Warehouses')
        <? endif ?>
        AS warehouse,
        <? if exists("classcode_id") ?>
          (SELECT (classcode_code || '-' || classcode_descrip)
             FROM classcode
            WHERE (classcode_id=<? value("classcode_id") ?>) )
        <? elseif exists("classcode_pattern") ?>
          text(<? value("classcode_pattern") ?>)
        <? else ?>
          text('All Class Codes')
        <? endif ?>
        AS classcode,
        <? if exists("perishability") ?> 
        'Perishability'
        <? else ?>
        'Warranty'
        <? endif ?> AS expiretype,
        <? if exists("showValue") ?>
            <? if exists("useActualCosts") ?>
              text('Show Inventory Value with Actual Costs')
-           <? else ?>
+           <? elseif exists("useStandardCosts") ?>
              text('Show Inventory Value with Standard Costs')
+           <? else ?>
+             text('Show Inventory Value with Posted Costs')
            <? endif ?>
            AS showvalues,
            text('Unit Cost') AS f_unitcost,
            text('Value') AS f_value,
        <? else ?>
            text('') AS showvalues,
            text('') AS f_unitcost,
            text('') AS f_value,
        <? endif ?>
        int4(<? value("thresholdDays") ?>) AS f_thresholddays;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT warehous_code,
        item_number,
        item_descrip1,
        item_descrip2,
        uom_name,
        ls_number AS itemloc_lotserial,
        formatQty(itemloc_qty) AS f_qoh,
        formatDate(itemloc_expiration) AS f_expiration,
        <? if exists("showValue") ?>
          formatCost(cost)
        <? else ?>
          text('')
        <? endif ?>
        AS f_unitcost,
        noNeg(cost * itemloc_qty) AS value,
        <? if exists("showValue") ?>
          formatExtPrice(noNeg(cost * itemloc_qty))
        <? else ?>
          text('')
        <? endif ?>
        AS f_value
   FROM ( SELECT itemsite_id,
                 warehous_code,
                 item_number,
                 item_descrip1,
                 item_descrip2,
                 uom_name,
                 ls_number,
                 itemloc_qty,
 <? if exists("perishability") ?>
                 itemloc_expiration,
 <? elseif exists("warranty") ?>
                 itemloc_warrpurc AS itemloc_expiration,
 <? endif ?>
                 <? if exists("useActualCosts") ?>
                   actcost(itemsite_item_id)
-                <? else ?>
+                <? elseif exists("useStandardCosts") ?>
                   stdcost(itemsite_item_id)
+                <? else ?>
+                  (itemsite_value / CASE WHEN(itemsite_qtyonhand=0) THEN 1 ELSE itemsite_qtyonhand END)
                 <? endif ?>
                 AS cost
            FROM itemloc, itemsite, item, warehous, uom, ls
           WHERE ((itemloc_itemsite_id=itemsite_id)
             AND (itemloc_ls_id=ls_id)
             AND (itemsite_item_id=item_id)
             AND (item_inv_uom_id=uom_id)
             AND (itemsite_warehous_id=warehous_id)
 <? if exists("perishability") ?>
             AND (itemsite_perishable)
             AND (itemloc_expiration < (CURRENT_DATE + <? value("thresholdDays") ?>))
 <? elseif exists("warranty") ?>
             AND (itemsite_warrpurc)
             AND (itemloc_warrpurc < (CURRENT_DATE + <? value("thresholdDays") ?>))
 <? endif ?>
 <? if exists("warehous_id") ?>
             AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("classcode_id") ?>
             AND (item_classcode_id=<? value("classcode_id") ?>)
 <? elseif exists("classcode_pattern") ?>
             AND (item_classcode_id IN (SELECT classcode_id
                                          FROM classcode
                                         WHERE classcode_code ~ <? value("classcode_pattern") ?>) )
 <? endif ?>
                 )
        ) AS data
 ORDER BY warehous_code,
 <? if exists("orderByInventoryValue") ?>
   value DESC
 <? elseif exists("orderByExpirationDate") ?>
   itemloc_expiration
 <? else ?>
   item_number
 <? endif ?>
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: FrozenItemSites
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
         ( SELECT warehous_code
             FROM warehous
            WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse;
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT warehous_code,
        formatBoolYN(itemsite_active) AS active,
        item_number,
        item_descrip1,
        item_descrip2,
        formatBoolYN(itemsite_supply) AS supplied,
        formatBoolYN(itemsite_sold) AS sold,
        itemsite_soldranking,
        formatBoolYN(itemsite_stocked) AS stocked,
        formatBoolYN(itemsite_createpr) AS createpr,
        CASE WHEN (itemsite_controlmethod='N') THEN 'None'
             WHEN (itemsite_controlmethod='R') THEN 'Regular'
             WHEN (itemsite_controlmethod='L') THEN 'Lot #'
             WHEN (itemsite_controlmethod='S') THEN 'Serial #'
             ELSE '?'
        END AS controlmethod,
        formatBoolYN(itemsite_loccntrl) AS locationcontrol,
        CASE WHEN (itemsite_location_id=-1) THEN 'None'
             ELSE formatLocationName(itemsite_location_id)
        END AS defaultlocation,
        formatBoolYN(itemsite_useparams) AS enforceparams,
        formatBoolYN(itemsite_useparamsmanual) AS onmanualorders,
        formatQty(itemsite_reorderlevel) AS reorderlevel,
        formatQty(itemsite_ordertoqty) AS orderupto,
        formatQty(itemsite_multordqty) AS ordermult,
        formatQty(itemsite_safetystock) AS safetystock,
        itemsite_abcclass,
        itemsite_cyclecountfreq,
        itemsite_leadtime,
        itemsite_eventfence,
        formatQty(itemsite_qtyonhand) AS qoh,
        formatDate(itemsite_datelastused, 'Never') AS lastused,
        formatDate(itemsite_datelastcount, 'Never') AS lastcounted,
        COALESCE((SELECT invcnt_tagnumber
                    FROM invcnt
                   WHERE ((NOT invcnt_posted)
                     AND (invcnt_itemsite_id=itemsite_id))), '') AS counttagnum
 FROM itemsite, warehous, item
 WHERE ((itemsite_item_id=item_id)
  AND (itemsite_warehous_id=warehous_id)
  AND (itemsite_freeze)
 <? if exists("warehous_id") ?>
  AND (warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY item_number;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: IndentedBOM
 QUERY: head
 SELECT item_number,
-       item_invuom,
+       uom_name AS item_invuom,
        item_descrip1,
        item_descrip2
-  FROM item
- WHERE (item_id=<? value("item_id") ?>);
+  FROM item, uom
+ WHERE ((item_id=<? value("item_id") ?>)
+ AND (item_inv_uom_id=uom_id));
     
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT (REPEAT(' ',(bomdata_bomwork_level-1)*3) || bomdata_bomwork_seqnumber) AS f_seqnumber,
        bomdata_item_number AS item_number,
        bomdata_uom_name AS item_invuom,
        bomdata_item_descrip1 AS item_descrip1,
        bomdata_item_descrip2 AS item_descrip2,
        bomdata_issuemethod AS issuemethod,
        bomdata_createchild AS createchild,
-       bomdata_qtyper AS qtyper,
-       bomdata_scrap AS scrap,
-       bomdata_effective AS effective,
-       bomdata_expires AS expires
+       formatQtyPer(bomdata_qtyper) AS qtyper,
+       formatScrap(bomdata_scrap) AS scrap,
+       CASE WHEN COALESCE(bomdata_effective, startOfTime()) <= startOfTime()
+            THEN <? value("always") ?>
+            ELSE formatDate(bomdata_effective)
+       END AS effective,
+       CASE WHEN COALESCE(bomdata_expires, endOfTime()) >= endOfTime()
+            THEN <? value("never") ?>
+            ELSE formatDate(bomdata_expires)
+       END AS expires
 FROM indentedBOM(<? value("item_id") ?>,<? value("revision_id") ?>,<? value("expiredDays") ?>,<? value("futureDays") ?>)
 WHERE (bomdata_item_id>0);
 --------------------------------------------------------------------
   
 QUERY: bomhead
 SELECT bomhead_docnum, bomhead_revision,
 formatDate(bomhead_revisiondate) AS f_revisiondate
 FROM bomhead
 WHERE ((bomhead_item_id=<? value("item_id") ?>)
 AND (bomhead_rev_id=<? value("revision_id") ?>));
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: IndentedWhereUsed
 QUERY: head
 SELECT item_number,
-       item_invuom,
+       uom_name AS item_invuom,
        item_descrip1,
        item_descrip2
-  FROM item
- WHERE (item_id=<? value("item_id") ?>);
+  FROM item, uom
+ WHERE ((item_id=<? value("item_id") ?>)
+ AND (item_inv_uom_id=uom_id));
     
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT (REPEAT(' ',(bomwork_level-1)*3) || bomwork_seqnumber) AS f_seqnumber,
        bomworkitemsequence(bomwork_id) AS seqord,
-       item_number, item_invuom,
+       item_number, uom_name AS item_invuom,
        item_descrip1, item_descrip2,
        formatQtyPer(bomwork_qtyper) AS qtyper,
        formatScrap(bomwork_scrap) AS scrap,
        formatDate(bomwork_effective, 'Always') AS effective,
        formatDate(bomwork_expires, 'Never') AS expires
-  FROM bomwork, item
+  FROM bomwork, item, uom
  WHERE ((bomwork_item_id=item_id)
+   AND (item_inv_uom_id=uom_id)
    AND (bomwork_set_id=<? value("bomworkset_id") ?>)
 <? if not exists("showExpired") ?>
    AND (bomwork_expires > CURRENT_DATE)
 <? endif ?>
 <? if not exists("showFuture") ?>
    AND (bomwork_effective <= CURRENT_DATE)
 <? endif ?>
 )
 ORDER BY seqord;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: InventoryAvailabilityByItem
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("byDays") ?>
          (text('Look ahead ') || text(<? value("byDays") ?>) || text(' days'))
        <? elseif exists("byDate") ?>
          (text('Cutoff date ') || formatDate(<? value("byDate") ?>))
        <? elseif exists("byDates") ?>
          (text('Dates from ') || formatDate(<? value("startDate") ?>) || text(' to ') || formatDate(<? value("endDate") ?>))
        <? else ?>
          text('Item Site Lead Time')
        <? endif ?>
        AS ltcriteria
   FROM item
 WHERE (item_id=<? value("item_id") ?>);
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT warehous_code,
        itemsite_leadtime,
        formatQty(qtyonhand) AS f_qtyonhand,
        formatQty(noNeg(qtyonhand - allocated)) AS f_unallocated,
        formatQty(noNeg(allocated)) AS f_allocated,
        formatQty(ordered) AS f_ordered,
        formatQty(reorderlevel) AS f_reorderlevel,
        (qtyonhand - allocated + ordered) AS available,
        formatQty(qtyonhand - allocated + ordered) AS f_available
   FROM (SELECT warehous_code, itemsite_leadtime,
                CASE WHEN(itemsite_useparams) THEN itemsite_reorderlevel ELSE 0.0 END AS reorderlevel,
                itemsite_qtyonhand AS qtyonhand,
 <? if exists("byDays") ?>
                qtyAllocated(itemsite_id, <? value("byDays") ?>) AS allocated,
                qtyOrdered(itemsite_id, <? value("byDays") ?>) AS ordered
 <? elseif exists("byDate") ?>
                qtyAllocated(itemsite_id, (<? value("byDate") ?> - CURRENT_DATE)) AS allocated,
                qtyOrdered(itemsite_id, (<? value("byDate") ?> - CURRENT_DATE)) AS ordered
 <? elseif exists("byDates") ?>
                qtyAllocated(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>) AS allocated,
                qtyOrdered(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>) AS ordered
 <? else ?>
                qtyAllocated(itemsite_id, itemsite_leadtime) AS allocated,
                qtyOrdered(itemsite_id, itemsite_leadtime) AS ordered
 <? endif ?>
           FROM itemsite, warehous, item
          WHERE ((itemsite_active)
            AND (itemsite_warehous_id=warehous_id)
            AND (itemsite_item_id=item_id)
            AND (item_id=<? value("item_id") ?>)
 <? if exists("warehous_id") ?>
            AND (warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
            )
        ) AS data
 <? if exists("showReorder") ?>
  WHERE ( ((qoh - allocated + ordered) <= reorderlevel)
   <? if exists("ignoreReorderAtZero") ?>
    AND (NOT ( ((qoh - allocated + ordered) = 0) AND (reorderlevel = 0)) )
   <? endif ?>
     )
 <? elseif exists("showShortages ?>
  WHERE ((qoh - allocated + ordered) < 0)
 <? endif ?>
 ORDER BY warehous_code DESC;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: InventoryAvailabilityByParameterList
 QUERY: head
 SELECT <? if exists("classcode_id") ?>
          ( SELECT (classcode_code || '-' || classcode_descrip)
              FROM classcode
             WHERE (classcode_id=<? value("classcode_id") ?>))
        <? elseif exists("classcode_pattern") ?>
          text(<? value("classcode_pattern") ?>)
        <? elseif exists("itemgrp_id") ?>
          ( SELECT (itemgrp_name || '-' || itemgrp_descrip)
              FROM itemgrp
             WHERE (itemgrp_id=<? value("itemgrp_id") ?>) )
        <? elseif exists("itemgrp_pattern") ?>
          text(<? value("itemgrp_pattern") ?>)
        <? elseif exists("itemgrp") ?>
          text('All Item Groups')
        <? elseif exists("plancode_id") ?>
          ( SELECT (plancode_code || '-' || plancode_name)
              FROM plancode
             WHERE (plancode_id=<? value("plancode_id") ?>) )
        <? elseif exists("plancode_pattern") ?>
          text(<? value("plancode_pattern") ?>)
        <? else ?>
          text('')
        <? endif ?>
        AS f_value,
        <? if reExists("classcode_.*") ?>
          text('Class Codes:')
        <? elseif reExists("plancode_.*") ?>
          text('Planner Codes:')
        <? elseif reExists("itemgrp_.*") ?>
          text('Item Group:')
        <? elseif exists("itemgrp") ?>
          text('Item Group:')
        <? else ?>
          text('')
        <? endif ?>
        AS f_label,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("byDays") ?>
          (text('Look ahead ') || text(<? value("byDays") ?>) || text(' days'))
        <? elseif exists("byDate") ?>
          (text('Cutoff date ') || formatDate(<? value("byDate") ?>))
        <? elseif exists("byDates") ?>
          (text('Dates from ') || formatDate(<? value("startDate") ?>) || text(' to ') || formatDate(<? value("endDate") ?>))
        <? else ?>
          text('Item Site Lead Time')
        <? endif ?>
        AS ltcriteria;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT item_number, item_descrip1, item_descrip2,
        warehous_code, itemsite_leadtime,
        formatQty(qtyonhand) AS f_qtyonhand,
        formatQty(noNeg(qtyonhand - allocated)) AS f_unallocated,
        formatQty(noNeg(allocated)) AS f_allocated,
        formatQty(ordered) AS f_ordered,
        formatQty(reorderlevel) AS f_reorderlevel,
        (qtyonhand - allocated + ordered) AS available,
        formatQty(qtyonhand - allocated + ordered) AS f_available
   FROM (SELECT item_number, item_descrip1, item_descrip2,
                warehous_code, itemsite_leadtime,
                CASE WHEN(itemsite_useparams) THEN itemsite_reorderlevel ELSE 0.0 END AS reorderlevel,
                itemsite_qtyonhand AS qtyonhand,
 <? if exists("byDays") ?>
                qtyAllocated(itemsite_id, <? value("byDays") ?>) AS allocated,
                qtyOrdered(itemsite_id, <? value("byDays") ?>) AS ordered
 <? elseif exists("byDate") ?>
                qtyAllocated(itemsite_id, (<? value("byDate") ?> - CURRENT_DATE)) AS allocated,
                qtyOrdered(itemsite_id, (<? value("byDate") ?> - CURRENT_DATE)) AS ordered
 <? elseif exists("byDates") ?>
                qtyAllocated(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>) AS allocated,
                qtyOrdered(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>) AS ordered
 <? else ?>
                qtyAllocated(itemsite_id, itemsite_leadtime) AS allocated,
                qtyOrdered(itemsite_id, itemsite_leadtime) AS ordered
 <? endif ?>
           FROM itemsite, item, warehous
          WHERE ((itemsite_active)
            AND (itemsite_item_id=item_id)
            AND (itemsite_warehous_id=warehous_id)
 <? if exists("classcode_id") ?>
            AND (item_classcode_id=<? value("classcode_id") ?>)
 <? elseif exists("classcode_pattern") ?>
            AND (item_classcode_id IN (SELECT classcode_id FROM classcode WHERE classcode_code ~ <? value("classcode_pattern") ?>))
 <? elseif exists("itemgrp") ?>
            AND (item_id IN (SELECT DISTINCT itemgrpitem_item_id FROM itemgrpitem))
 <? elseif exists("itemgrp_id") ?>
            AND (item_id IN (SELECT itemgrpitem_item_id FROM itemgrpitem WHERE (itemgrpitem_itemgrp_id=<? value("itemgrp_id") ?>)))
 <? elseif exists("itemgrp_pattern") ?>
            AND (item_id IN (SELECT itemgrpitem_item_id FROM itemgrpitem, itemgrp WHERE ( (itemgrpitem_itemgrp_id=itemgrp_id) AND (itemgrp_name ~ <? value("itemgrp_pattern") ?>) ) ))
 <? elseif exists("plancode_id") ?>
            AND (itemsite_plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
            AND (itemsite_plancode_id IN (SELECT plancode_id FROM plancode WHERE (plancode_code ~ <? value("plancode_pattern") ?>)))
 <? endif ?>
 <? if exists("warehous_id") ?>
            AND (warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
          )
        ) AS data
 <? if exists("showReorder") ?>
  WHERE ( ((qtyonhand - allocated + ordered) <= reorderlevel)
   <? if exists("ignoreReorderAtZero") ?>
    AND (NOT ( ((qtyonhand - allocated + ordered) = 0) AND (reorderlevel = 0)) )
   <? endif ?>
   )
 <? elseif exists("showShortages") ?>
  WHERE ((qtyonhand - allocated + ordered) < 0)
 <? endif ?>
 ORDER BY item_number, warehous_code DESC;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: InventoryAvailabilityBySourceVendor
 QUERY: head
 SELECT <? if exists("warehouse_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("byDays") ?>
          (text('Look ahead ') || text(<? value("byDays") ?>) || text(' days'))
        <? elseif exists("byDate") ?>
          (text('Cutoff date ') || formatDate(<? value("byDate") ?>))
        <? elseif exists("byDates") ?>
          (text('Dates from ') || formatDate(<? value("startDate") ?>) || text(' to ') || formatDate(<? value("endDate") ?>))
        <? else ?>
          text('Item Site Lead Time')
        <? endif ?>
        AS ltcriteria,
 <? if exists("vend_id") ?>
        text('Vendor:') AS vend_label,
        vend_name AS vend_value
   FROM vend
  WHERE (vend_id=<? value("vend_id") ?>)
 <? elseif exists("vendtype_id") ?>
        text('Vendor Type:') AS vend_label,
        vendtype_code AS vend_value
   FROM vendtype
  WHERE (vendtype_id=<? value("vendtype_id") ?>)
 <? elseif exists("vendtype_pattern") ?>
        text('Vendor Type:') AS vend_label,
        text(<? value("vendtype_pattern") ?>) AS vend_value
 <? else ?>
        text('Vendor:') AS vend_label,
        text('All Vendors') AS vend_value
 <? endif ?>
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        warehous_code,
        vend_number,
        itemsite_leadtime,
        formatQty(qtyonhand) AS f_qtyonhand,
        formatQty(noNeg(qtyonhand - allocated)) AS f_unallocated,
        formatQty(noNeg(allocated)) AS f_allocated,
        formatQty(ordered) AS f_ordered,
        formatQty(reorderlevel) AS f_reorderlevel,
        formatQty(outlevel) AS f_outlevel,
        (qtyonhand - allocated + ordered) AS available,
        formatQty(qtyonhand - allocated + ordered) AS f_available
   FROM (SELECT item_number,
                item_descrip1,
                item_descrip2,
                warehous_code,
                itemsite_leadtime,
                CASE WHEN(itemsite_useparams) THEN itemsite_reorderlevel ELSE 0.0 END AS reorderlevel,
                CASE WHEN(itemsite_useparams) THEN itemsite_ordertoqty ELSE 0.0 END AS outlevel,
                itemsite_qtyonhand AS qtyonhand,
                vend_number,
 <? if exists("byDays") ?>
                qtyAllocated(itemsite_id, <? value("byDays") ?>) AS allocated,
                qtyOrdered(itemsite_id, <? value("byDays") ?>) AS ordered
 <? elseif exists("byDate") ?>
                qtyAllocated(itemsite_id, (<? value("byDate") ?> - CURRENT_DATE)) AS allocated,
                qtyOrdered(itemsite_id, (<? value("byDate") ?> - CURRENT_DATE)) AS ordered
 <? elseif exists("byDates") ?>
                qtyAllocated(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>) AS allocated,
                qtyOrdered(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>) AS ordered
 <? else ?>
                qtyAllocated(itemsite_id, itemsite_leadtime) AS allocated,
                qtyOrdered(itemsite_id, itemsite_leadtime) AS ordered
 <? endif ?>
           FROM item, itemsite, warehous, vend, itemsrc
          WHERE ((itemsite_active)
            AND (itemsite_item_id=item_id)
            AND (itemsrc_item_id=item_id)
            AND (itemsite_warehous_id=warehous_id)
            AND (itemsrc_vend_id=vend_id)
 <? if exists("vend_id") ?>
            AND (vend_id=<? value("vend_id") ?>)
 <? elseif exists("vendtype_id") ?>
            AND (vend_vendtype_id=<? value("vendtype_id") ?>)
 <? elseif exists("vendtype_pattern") ?>
            AND (vend_vendtype_id IN (SELECT vendtype_id FROM vendtype WHERE (vendtype_code ~ <? value("vendtype_pattern") ?>)))
 <? endif ?>
 <? if exists("warehous_id") ?>
            AND (warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
            )
        ) AS data
 <? if exists("showReorder") ?>
  WHERE ( ((qtyonhand - allocated + ordered) <= reorderlevel)
   <? if exists("ignoreReorderAtZero") ?>
    AND (NOT ( ((qtyonhand - allocated + ordered) = 0) AND (reorderlevel = 0)))
   <? endif ?>
   )
 <? elseif exists("showShortages") ?>
  WHERE ((qtyonhand - allocated + ordered) < 0)
 <? endif ?>
 ORDER BY vend_number, item_number, warehous_code DESC;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: InventoryHistoryByItem
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        formatDate(<? value("startDate") ?>) as startdate,
        formatDate(<? value("endDate") ?>) as enddate,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse
   FROM item
  WHERE (item_id=<? value("item_id") ?>);
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT formatDateTime(invhist_transdate) AS transdate,
        invhist_transdate,
        invhist_transtype,
        whs1.warehous_code AS warehous_code,
        invhist_invuom,
        formatQty(invhist_invqty) AS transqty,
        CASE WHEN (invhist_ordtype NOT LIKE '') THEN (invhist_ordtype || '-' || invhist_ordnumber)
             ELSE invhist_ordnumber
        END AS ordernumber,
        formatQty(invhist_qoh_before) AS qohbefore,
        formatQty(invhist_qoh_after) AS qohafter,
+       CASE WHEN(invhist_costmethod='A') THEN text('Average')
+            WHEN(invhist_costmethod='S') THEN text('Standard')
+            WHEN(invhist_costmethod='J') THEN text('Job')
+            WHEN(invhist_costmethod='N') THEN text('None')
+            ELSE 'UNKNOWN'
+       END AS costmethod,
+       formatMoney(invhist_value_before) AS valbefore,
+       formatMoney(invhist_value_after) AS valafter,
        invhist_user as username,
        CASE WHEN (invhist_transtype='TW') THEN whs1.warehous_code
             WHEN (invhist_transtype='IB') THEN whs1.warehous_code
             WHEN (invhist_transtype='IM') THEN whs1.warehous_code
             WHEN (invhist_transtype='IT') THEN whs1.warehous_code
             WHEN (invhist_transtype='RB') THEN 'WIP'
             WHEN (invhist_transtype='RM') THEN 'WIP'
             WHEN (invhist_transtype='RP') THEN 'PURCH'
             WHEN (invhist_transtype='RR') THEN 'CUST'
             WHEN (invhist_transtype='RS') THEN 'SHIP'
             WHEN (invhist_transtype='SH') THEN whs1.warehous_code
             WHEN (invhist_transtype='SI') THEN whs1.warehous_code
             WHEN (invhist_transtype='SV') THEN whs1.warehous_code
 	    WHEN (invhist_transtype='TR') THEN whs2.warehous_code
 	    WHEN (invhist_transtype='TS') THEN whs1.warehous_code
             ELSE ''
        END AS locfrom,
        CASE WHEN (invhist_transtype='TW') THEN whs2.warehous_code
             WHEN (invhist_transtype='AD') THEN whs1.warehous_code
             WHEN (invhist_transtype='CC') THEN whs1.warehous_code
             WHEN (invhist_transtype='IB') THEN 'WIP'
             WHEN (invhist_transtype='IM') THEN 'WIP'
             WHEN (invhist_transtype='NN') THEN whs1.warehous_code
             WHEN (invhist_transtype='RB') THEN whs1.warehous_code
             WHEN (invhist_transtype='RM') THEN whs1.warehous_code
             WHEN (invhist_transtype='RP') THEN whs1.warehous_code
             WHEN (invhist_transtype='RR') THEN whs1.warehous_code
             WHEN (invhist_transtype='RS') THEN whs1.warehous_code
             WHEN (invhist_transtype='RT') THEN whs1.warehous_code
             WHEN (invhist_transtype='RX') THEN whs1.warehous_code
             WHEN (invhist_transtype='SH') THEN 'SHIP'
             WHEN (invhist_transtype='SI') THEN 'SCRAP'
             WHEN (invhist_transtype='SV') THEN 'SHIP'
 	    WHEN (invhist_transtype='TR') THEN whs1.warehous_code
 	    WHEN (invhist_transtype='TS') THEN whs2.warehous_code
             ELSE ''
        END AS locto
   FROM itemsite, warehous AS whs1, invhist LEFT OUTER JOIN warehous AS whs2 ON (invhist_xfer_warehous_id=whs2.warehous_id)
  WHERE ((NOT invhist_hasdetail)
    AND (invhist_itemsite_id=itemsite_id)
    AND (itemsite_item_id=<? value("item_id") ?>)
    AND (itemsite_warehous_id=whs1.warehous_id)
    AND (date(invhist_transdate) between <? value("startDate") ?> AND <? value("endDate") ?>)
    AND (transType(invhist_transtype, <? value("transType") ?>))
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 UNION
 SELECT formatDateTime(invhist_transdate) AS transdate,
        invhist_transdate,
        invhist_transtype,
        whs1.warehous_code AS warehous_code,
        invhist_invuom,
        formatQty(invhist_invqty) AS transqty,
        CASE WHEN (invhist_ordtype NOT LIKE '') THEN (invhist_ordtype || '-' || invhist_ordnumber)
             ELSE invhist_ordnumber
        END AS ordernumber,
        formatQty(invhist_qoh_before) AS qohbefore,
        formatQty(invhist_qoh_after) AS qohafter,
+       CASE WHEN(invhist_costmethod='A') THEN text('Average')
+            WHEN(invhist_costmethod='S') THEN text('Standard')
+            WHEN(invhist_costmethod='J') THEN text('Job')
+            WHEN(invhist_costmethod='N') THEN text('None')
+            ELSE 'UNKNOWN'
+       END AS costmethod,
+       formatMoney(invhist_value_before) AS valbefore,
+       formatMoney(invhist_value_after) AS valafter,
        invhist_user AS username,
        CASE WHEN (invhist_transtype='TW') THEN whs1.warehous_code
             WHEN (invhist_transtype='IB') THEN whs1.warehous_code
             WHEN (invhist_transtype='IM') THEN whs1.warehous_code
             WHEN (invhist_transtype='IT') THEN whs1.warehous_code
             WHEN (invhist_transtype='RB') THEN 'WIP'
             WHEN (invhist_transtype='RM') THEN 'WIP'
             WHEN (invhist_transtype='RP') THEN 'PURCH'
             WHEN (invhist_transtype='RR') THEN 'CUST'
             WHEN (invhist_transtype='RS') THEN 'SHIP'
             WHEN (invhist_transtype='SH') THEN whs1.warehous_code
             WHEN (invhist_transtype='SI') THEN whs1.warehous_code
             WHEN (invhist_transtype='SV') THEN whs1.warehous_code
 	    WHEN (invhist_transtype='TR') THEN whs2.warehous_code
 	    WHEN (invhist_transtype='TS') THEN whs1.warehous_code
             ELSE ''
        END AS locfrom,
        CASE WHEN (invhist_transtype='TW') THEN whs2.warehous_code
             WHEN (invhist_transtype='AD') THEN whs1.warehous_code
             WHEN (invhist_transtype='CC') THEN whs1.warehous_code
             WHEN (invhist_transtype='IB') THEN 'WIP'
             WHEN (invhist_transtype='IM') THEN 'WIP'
             WHEN (invhist_transtype='NN') THEN whs1.warehous_code
             WHEN (invhist_transtype='RB') THEN whs1.warehous_code
             WHEN (invhist_transtype='RM') THEN whs1.warehous_code
             WHEN (invhist_transtype='RP') THEN whs1.warehous_code
             WHEN (invhist_transtype='RR') THEN whs1.warehous_code
             WHEN (invhist_transtype='RS') THEN whs1.warehous_code
             WHEN (invhist_transtype='RT') THEN whs1.warehous_code
             WHEN (invhist_transtype='RX') THEN whs1.warehous_code
             WHEN (invhist_transtype='SH') THEN 'SHIP'
             WHEN (invhist_transtype='SI') THEN 'SCRAP'
             WHEN (invhist_transtype='SV') THEN 'SHIP'
 	    WHEN (invhist_transtype='TR') THEN whs1.warehous_code
 	    WHEN (invhist_transtype='TS') THEN whs2.warehous_code
             ELSE ''
        END AS locto
   FROM itemsite, warehous AS whs1, invdetail, invhist LEFT OUTER JOIN warehous AS whs2 ON (invhist_xfer_warehous_id=whs2.warehous_id)
  WHERE ((invhist_hasdetail)
    AND (invhist_itemsite_id=itemsite_id)
    AND (itemsite_item_id=<? value("item_id") ?>)
    AND (itemsite_warehous_id=whs1.warehous_id)
    AND (invdetail_invhist_id=invhist_id)
    AND (date(invhist_transdate) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
    AND (transType(invhist_transtype, <? value("transType") ?>))
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY invhist_transdate DESC, invhist_transtype; 
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: InventoryHistoryByOrderNumber
 QUERY: head
 SELECT text(<? value("orderNumber") ?>) AS ordernumber,
        formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT formatDateTime(invhist_transdate) AS transdate,
        invhist_transdate,
        invhist_transtype,
        warehous_code,
        item_number,
        item_descrip1,
        item_descrip2,
        invhist_invuom,
        formatQty(invhist_invqty) AS transqty,
        CASE WHEN (invhist_ordtype NOT LIKE '') THEN (invhist_ordtype || '-' || invhist_ordnumber)
             ELSE invhist_ordnumber
        END AS ordernumber,
        formatQty(invhist_qoh_before) AS qohbefore,
        formatQty(invhist_qoh_after) AS qohafter,
+       CASE WHEN(invhist_costmethod='A') THEN text('Average')
+            WHEN(invhist_costmethod='S') THEN text('Standard')
+            WHEN(invhist_costmethod='J') THEN text('Job')
+            WHEN(invhist_costmethod='N') THEN text('None')
+            ELSE 'UNKNOWN'
+       END AS costmethod,
+       formatMoney(invhist_value_before) AS valbefore,
+       formatMoney(invhist_value_after) AS valafter,
        invhist_user as username
   FROM invhist, itemsite, item, warehous
  WHERE ((invhist_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (itemsite_warehous_id=warehous_id)
    AND (date(invhist_transdate) between <? value("startDate") ?> AND <? value("endDate") ?>)
    AND (transType(invhist_transtype, <? value("transType") ?>))
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
    AND (invhist_ordnumber ~ <? value("orderNumber") ?>)
 )
 ORDER BY invhist_transdate DESC, invhist_transtype, item_number; 
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: InventoryHistoryByParameterList
 QUERY: head
 SELECT formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("itemgrp_id") ?>
          ( SELECT (itemgrp_name||'-'||itemgrp_descrip)
              FROM itemgrp
             WHERE (itemgrp_id=<? value("itemgrp_id") ?>) )
        <? elseif exists("itemgrp_pattern") ?>
          text(<? value("itemgrp_pattern") ?>)
        <? elseif exists("classcode_id") ?>
          ( SELECT (classcode_code||'-'||classcode_descrip)
              FROM classcode
             WHERE (classcode_id=<? value("classcode_id") ?>) )
        <? elseif exists("classcode_pattern") ?>
          text(<? value("classcode_pattern") ?>)
        <? elseif exists("plancode_id") ?>
          ( SELECT (plancode_code||'-'||plancode_name)
              FROM plancode
             WHERE (plancode_id=<? value("plancode_id") ?>) )
        <? elseif exists("plancode_pattern") ?>
          text(<? value("plancode_pattern") ?>)
        <? else ?>
          text('All')
        <? endif ?>
        AS lbl_value,
        <? if reExists("itemgrp.*") ?>
          text('Item Group:')
        <? elseif reExists("classcode.*") ?>
          text('Class Code:')
        <? elseif reExists("plancode.*") ?>
          text('Planner Code:')
        <? else ?>
          text('Unknown Class:')
        <? endif ?>
        AS lbl_bytype,
        <? if reExists("itemgrp.*") ?>
          text('Inventory History by Item Group')
        <? elseif reExists("classcode.*") ?>
          text('Inventory History by Class Code')
        <? elseif reExists("plancode.*") ?>
          text('Inventory History by Planner Code')
        <? else ?>
          text('Inventory History')
        <? endif ?>
        AS lbl_title;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT invhist_id,
        invhist_transdate,
        formatDateTime(invhist_transdate) AS transdate,
        invhist_transtype,
        whs1.warehous_code AS warehous_code,
        item_number,
        item_descrip1,
        item_descrip2,
        formatQty(invhist_invqty) AS transqty,
        invhist_invuom,
        CASE WHEN (invhist_ordtype NOT LIKE '') THEN (invhist_ordtype || '-' || invhist_ordnumber)
             ELSE invhist_ordnumber
        END AS ordernumber,
        formatQty(invhist_qoh_before) AS qohbefore,
        formatQty(invhist_qoh_after) AS qohafter,
+       CASE WHEN(invhist_costmethod='A') THEN text('Average')
+            WHEN(invhist_costmethod='S') THEN text('Standard')
+            WHEN(invhist_costmethod='J') THEN text('Job')
+            WHEN(invhist_costmethod='N') THEN text('None')
+            ELSE 'UNKNOWN'
+       END AS costmethod,
+       formatMoney(invhist_value_before) AS valbefore,
+       formatMoney(invhist_value_after) AS valafter,
        invhist_user AS username,
        invhist_posted,
        0 AS invdetail_id,
        '' AS locationname,
        '' AS detailqty,
        '' AS locationqtybefore,
        '' AS locationqtyafter,
        CASE WHEN (invhist_transtype='TW') THEN whs1.warehous_code
             WHEN (invhist_transtype='IB') THEN whs1.warehous_code
             WHEN (invhist_transtype='IM') THEN whs1.warehous_code
             WHEN (invhist_transtype='IT') THEN whs1.warehous_code
             WHEN (invhist_transtype='RB') THEN 'WIP'
             WHEN (invhist_transtype='RM') THEN 'WIP'
             WHEN (invhist_transtype='RP') THEN 'PURCH'
             WHEN (invhist_transtype='RR') THEN 'CUST'
             WHEN (invhist_transtype='RS') THEN 'SHIP'
             WHEN (invhist_transtype='SH') THEN whs1.warehous_code
             WHEN (invhist_transtype='SI') THEN whs1.warehous_code
             WHEN (invhist_transtype='SV') THEN whs1.warehous_code
 	    WHEN (invhist_transtype='TR') THEN whs2.warehous_code
 	    WHEN (invhist_transtype='TS') THEN whs1.warehous_code
             ELSE ''
        END AS locfrom,
        CASE WHEN (invhist_transtype='TW') THEN whs2.warehous_code
             WHEN (invhist_transtype='AD') THEN whs1.warehous_code
             WHEN (invhist_transtype='CC') THEN whs1.warehous_code
             WHEN (invhist_transtype='IB') THEN 'WIP'
             WHEN (invhist_transtype='IM') THEN 'WIP'
             WHEN (invhist_transtype='NN') THEN whs1.warehous_code
             WHEN (invhist_transtype='RB') THEN whs1.warehous_code
             WHEN (invhist_transtype='RM') THEN whs1.warehous_code
             WHEN (invhist_transtype='RP') THEN whs1.warehous_code
             WHEN (invhist_transtype='RR') THEN whs1.warehous_code
             WHEN (invhist_transtype='RS') THEN whs1.warehous_code
             WHEN (invhist_transtype='RT') THEN whs1.warehous_code
             WHEN (invhist_transtype='RX') THEN whs1.warehous_code
             WHEN (invhist_transtype='SH') THEN 'SHIP'
             WHEN (invhist_transtype='SI') THEN 'SCRAP'
             WHEN (invhist_transtype='SV') THEN 'SHIP'
 	    WHEN (invhist_transtype='TR') THEN whs1.warehous_code
 	    WHEN (invhist_transtype='TS') THEN whs2.warehous_code
             ELSE ''
        END AS locto
   FROM itemsite, item, warehous AS whs1, invhist LEFT OUTER JOIN warehous AS whs2 ON (invhist_xfer_warehous_id=whs2.warehous_id)
  WHERE ( (NOT invhist_hasdetail)
    AND (invhist_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (itemsite_warehous_id=whs1.warehous_id)
    AND (DATE(invhist_transdate) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
    AND (transType(invhist_transtype, <? value("transType") ?>))
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("itemgrp_id") ?>
    AND (item_id IN (SELECT itemgrpitem_item_id
                       FROM itemgrpitem
                      WHERE (itemgrpitem_itemgrp_id=<? value("itemgrp_id") ?>)))
 <? elseif exists("itemgrp_pattern") ?>
    AND (item_id IN (SELECT itemgrpitem_item_id
                       FROM itemgrpitem, itemgrp
                      WHERE ( (itemgrpitem_itemgrp_id=itemgrp_id)
                        AND (itemgrp_name ~ <? value("itemgrp_pattern") ?>) ) ))
 <? elseif exists("classcode_id") ?>
    AND (item_classcode_id=<? value("classcode_id") ?>)
 <? elseif exists("classcode_pattern") ?>
    AND (item_classcode_id IN (SELECT classcode_id
                                 FROM classcode
                                WHERE (classcode_code ~ <? value("classcode_pattern") ?>)))
 <? elseif exists("plancode_id") ?>
    AND (itemsite_plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
    AND (itemsite_plancode_id IN (SELECT plancode_id FROM plancode WHERE (plancode_code ~ <? value("plancode_pattern") ?>)))
 <? elseif exists("itemgrp") ?>
    AND (item_id IN (SELECT DISTINCT itemgrpitem_item_id FROM itemgrpitem))
 <? endif ?>
 )
 UNION
 SELECT invhist_id,
        invhist_transdate,
        formatDateTime(invhist_transdate) AS transdate,
        invhist_transtype,
        whs1.warehous_code AS warehous_code,
        item_number,
        item_descrip1,
        item_descrip2,
        formatQty(invhist_invqty) AS transqty,
        invhist_invuom,
        CASE WHEN (invhist_ordtype NOT LIKE '') THEN (invhist_ordtype || '-' || invhist_ordnumber)
             ELSE invhist_ordnumber
        END AS ordernumber,
        formatQty(invhist_qoh_before) AS qohbefore,
        formatQty(invhist_qoh_after) AS qohafter,
+       CASE WHEN(invhist_costmethod='A') THEN text('Average')
+            WHEN(invhist_costmethod='S') THEN text('Standard')
+            WHEN(invhist_costmethod='J') THEN text('Job')
+            WHEN(invhist_costmethod='N') THEN text('None')
+            ELSE 'UNKNOWN'
+       END AS costmethod,
+       formatMoney(invhist_value_before) AS valbefore,
+       formatMoney(invhist_value_after) AS valafter,
        invhist_user AS username,
        invhist_posted,
        invdetail_id,
        CASE WHEN (invdetail_location_id=-1) THEN formatlotserialnumber(invdetail_ls_id)
             WHEN (invdetail_ls_id IS NULL) THEN formatLocationName(invdetail_location_id)
             ELSE (formatLocationName(invdetail_location_id) || '-' || formatlotserialnumber(invdetail_ls_id))
        END AS locationname,
        formatQty(invdetail_qty) AS detailqty,
        formatQty(invdetail_qty_before) AS locationqtybefore,
        formatQty(invdetail_qty_after) AS locationqtyafter,
        CASE WHEN (invhist_transtype='TW') THEN whs1.warehous_code
             WHEN (invhist_transtype='IB') THEN whs1.warehous_code
             WHEN (invhist_transtype='IM') THEN whs1.warehous_code
             WHEN (invhist_transtype='IT') THEN whs1.warehous_code
             WHEN (invhist_transtype='RB') THEN 'WIP'
             WHEN (invhist_transtype='RM') THEN 'WIP'
             WHEN (invhist_transtype='RP') THEN 'PURCH'
             WHEN (invhist_transtype='RR') THEN 'CUST'
             WHEN (invhist_transtype='RS') THEN 'SHIP'
             WHEN (invhist_transtype='SH') THEN whs1.warehous_code
             WHEN (invhist_transtype='SI') THEN whs1.warehous_code
             WHEN (invhist_transtype='SV') THEN whs1.warehous_code
 	    WHEN (invhist_transtype='TR') THEN whs2.warehous_code
 	    WHEN (invhist_transtype='TS') THEN whs1.warehous_code
             ELSE ''
        END AS locfrom,
        CASE WHEN (invhist_transtype='TW') THEN whs2.warehous_code
             WHEN (invhist_transtype='AD') THEN whs1.warehous_code
             WHEN (invhist_transtype='CC') THEN whs1.warehous_code
             WHEN (invhist_transtype='IB') THEN 'WIP'
             WHEN (invhist_transtype='IM') THEN 'WIP'
             WHEN (invhist_transtype='NN') THEN whs1.warehous_code
             WHEN (invhist_transtype='RB') THEN whs1.warehous_code
             WHEN (invhist_transtype='RM') THEN whs1.warehous_code
             WHEN (invhist_transtype='RP') THEN whs1.warehous_code
             WHEN (invhist_transtype='RR') THEN whs1.warehous_code
             WHEN (invhist_transtype='RS') THEN whs1.warehous_code
             WHEN (invhist_transtype='RT') THEN whs1.warehous_code
             WHEN (invhist_transtype='RX') THEN whs1.warehous_code
             WHEN (invhist_transtype='SH') THEN 'SHIP'
             WHEN (invhist_transtype='SI') THEN 'SCRAP'
             WHEN (invhist_transtype='SV') THEN 'SHIP'
 	    WHEN (invhist_transtype='TR') THEN whs1.warehous_code
 	    WHEN (invhist_transtype='TS') THEN whs2.warehous_code
             ELSE ''
        END AS locto
   FROM itemsite, item, warehous AS whs1, invdetail, invhist LEFT OUTER JOIN warehous AS whs2 ON (invhist_xfer_warehous_id=whs2.warehous_id)
  WHERE ((invhist_hasdetail)
    AND (invhist_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (itemsite_warehous_id=whs1.warehous_id)
    AND (invdetail_invhist_id=invhist_id)
    AND (DATE(invhist_transdate) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
    AND (transType(invhist_transtype, <? value("transType") ?>))
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("itemgrp_id") ?>
    AND (item_id IN (SELECT itemgrpitem_item_id
                       FROM itemgrpitem
                      WHERE (itemgrpitem_itemgrp_id=<? value("itemgrp_id") ?>)))
 <? elseif exists("itemgrp_pattern") ?>
    AND (item_id IN (SELECT itemgrpitem_item_id
                       FROM itemgrpitem, itemgrp
                      WHERE ( (itemgrpitem_itemgrp_id=itemgrp_id)
                        AND (itemgrp_name ~ <? value("itemgrp_pattern") ?>) ) ))
 <? elseif exists("classcode_id") ?>
    AND (item_classcode_id=<? value("classcode_id") ?>)
 <? elseif exists("classcode_pattern") ?>
    AND (item_classcode_id IN (SELECT classcode_id
                                 FROM classcode
                                WHERE (classcode_code ~ <? value("classcode_pattern") ?>)))
 <? elseif exists("plancode_id") ?>
    AND (itemsite_plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
    AND (itemsite_plancode_id IN (SELECT plancode_id
                                    FROM plancode
                                   WHERE (plancode_code ~ <? value("plancode_pattern") ?>)))
 <? elseif exists("itemgrp") ?>
    AND (item_id IN (SELECT DISTINCT itemgrpitem_item_id FROM itemgrpitem))
 <? endif ?>
 );
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: Invoice
 QUERY: GroupHead
 SELECT 
        --remitto.*,
 remitto_name,
 formatAddr(remitto_address1, remitto_address2, remitto_address3, remitto_citystatezip, remitto_country) AS remitto_adr,
-       TEXT(invchead_invcnumber) AS invoicenumber,
+       invchead_invcnumber AS invoicenumber,
        formatDate(invchead_invcdate) AS f_invoicedate,
        cust_number,
        invchead_billto_name,
        formatAddr(invchead_billto_address1, invchead_billto_address2, invchead_billto_address3, ( invchead_billto_city || '  ' || invchead_billto_state || '  ' || invchead_billto_zipcode ), invchead_billto_country) AS f_billtoaddress,
        invchead_billto_phone,
        invchead_shipto_name,
        formatAddr(invchead_shipto_address1, invchead_shipto_address2, invchead_shipto_address3, ( invchead_shipto_city || '  ' || invchead_shipto_state || ' ' || invchead_shipto_zipcode ), invchead_shipto_country) AS f_shiptoaddress,
-       TEXT(invchead_ordernumber) AS ordernumber,
+       invchead_ordernumber AS ordernumber,
        invchead_ponumber,
        formatDate(invchead_orderdate) AS f_orderdate,
        formatDate(invchead_shipdate) AS f_shipdate,
        invchead_fob, terms_descrip, invchead_shipvia
 FROM remitto, cust, invchead
      LEFT OUTER JOIN terms ON (invchead_terms_id=terms_id)
 WHERE ( (invchead_cust_id=cust_id)
  AND (invchead_id=<? value("invchead_id") ?>) )
 ORDER BY ordernumber;
 --------------------------------------------------------------------
   
 QUERY: Detail
 SELECT invcitem_linenumber,
        formatQty(invcitem_billed) AS f_billed,
        (select uom_name from uom where uom_id = invcitem_qty_uom_id) AS invuom,
        CASE WHEN (item_number IS NULL) THEN invcitem_number
             WHEN (invcitem_custpn != '') THEN invcitem_custpn
             else item_number
        END AS number,
        CASE WHEN (item_number IS NULL) THEN invcitem_descrip
             WHEN (invcitem_custpn != '' AND itemalias_usedescrip=TRUE) THEN itemalias_descrip1
             ELSE item_descrip1
        END AS descrip1,
        CASE WHEN (invcitem_custpn != '' AND itemalias_usedescrip=TRUE) THEN itemalias_descrip2
             ELSE itemalias_descrip2
        END AS descrip2,
        formatPrice(invcitem_price / COALESCE(invcitem_price_invuomratio,1)) AS f_unitprice,
        formatMoney(round((invcitem_billed * invcitem_qty_invuomratio) * (invcitem_price / COALESCE(invcitem_price_invuomratio,1)),2)) AS f_extprice,
        invcitem_notes,
        getInvcitemLotSerial(invcitem_id) AS lotserial,
-       characteristicsToString('SI', (SELECT coitem_id FROM coitem, cohead, invchead WHERE (cohead_number=invchead_ordernumber and invchead_id=<? value("invchead_id") ?> and coitem_cohead_id=cohead_id and coitem_linenumber=invcitem_linenumber)), '=', ', ') AS coitem_characteristics
+--Sub-select updated for 3.1 to support kitting
+       characteristicsToString('SI',(SELECT coitem_id FROM coitem, cohead, invchead, itemsite 
+       WHERE (cohead_number=invchead_ordernumber and invchead_id=<? value("invchead_id") ?>
+       and coitem_cohead_id=cohead_id 
+       and invcitem_item_id = item_id
+       and coitem_itemsite_id = itemsite_id
+       and itemsite_item_id = item_id
+       and coitem_linenumber=invcitem_linenumber)
+       ), '=', ', ') 
+       AS coitem_characteristics
 FROM invcitem LEFT OUTER JOIN (item JOIN uom ON (item_inv_uom_id=uom_id)) ON (invcitem_item_id=item_id) LEFT OUTER JOIN itemalias ON (itemalias_item_id=item_id AND itemalias_number=invcitem_custpn)
 WHERE (invcitem_invchead_id=<? value("invchead_id") ?>)
 ORDER BY invcitem_linenumber;
 --------------------------------------------------------------------
   
 QUERY: foot
 SELECT formatMoney(SUM(round((invcitem_billed * invcitem_qty_invuomratio) * (invcitem_price / COALESCE(invcitem_price_invuomratio,1)),2))) AS f_extprice
 FROM invcitem LEFT OUTER JOIN item on (invcitem_item_id=item_id)
 WHERE (invcitem_invchead_id=<? value("invchead_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: GroupExtended
 SELECT formatMoney( noNeg(invchead_freight + invchead_misc_amount + invchead_tax +
                        ( SELECT COALESCE(SUM(round(((invcitem_billed * invcitem_qty_invuomratio) * (invcitem_price / COALESCE(invcitem_price_invuomratio,1))),2)), 0)
                          FROM invcitem LEFT OUTER JOIN item ON (invcitem_item_id=item_id)
                          WHERE (invcitem_invchead_id=<? value("invchead_id") ?>) )
                     - total_allocated) ) AS f_totaldue,
        formatMoney(invchead_misc_amount) AS f_misc,
        formatMoney(invchead_tax) AS f_tax,
        formatMoney(invchead_freight) AS f_freight,
-       formatMoney(invchead_payment) AS f_payment,
+       formatMoney(invchead_payment + (SELECT SUM(arapply_applied) AS applied
+                                       FROM arapply
+                                       LEFT OUTER JOIN invchead ON (arapply_target_docnumber = invchead_invcnumber)
+                                       WHERE (invchead_id = <? value("invchead_id") ?>)
+                                       AND (arapply_source_doctype = 'K'))) AS f_payment,
        formatMoney(total_allocated) AS f_allocated,
        invchead_notes,
        invchead_misc_descrip
-FROM invchead,
+FROM invchead, arapply, 
 (SELECT COALESCE(SUM(CASE WHEN((aropen_amount - aropen_paid) >=
 			        currToCurr(aropenco_curr_id, aropen_curr_id,
 					   aropenco_amount, aropen_docdate))
 		THEN currToCurr(aropenco_curr_id, invchead_curr_id,
 				aropenco_amount, aropen_docdate)
 		ELSE currToCurr(aropen_curr_id, invchead_curr_id,
 				aropen_amount - aropen_paid, aropen_docdate)
 	    END),0) AS total_allocated
   FROM aropenco, aropen, cohead, invchead
  WHERE ( (aropenco_aropen_id=aropen_id)
    AND   (aropenco_cohead_id=cohead_id)
    AND   ((aropen_amount - aropen_paid) > 0)
    AND   (cohead_number=invchead_ordernumber)
    AND   (NOT invchead_posted)
    AND   (invchead_id=<? value("invchead_id") ?>) )
  UNION
 SELECT COALESCE(SUM(currToCurr(arapply_curr_id, t.aropen_curr_id,
                                arapply_applied, t.aropen_docdate)),0) AS total_allocated
   FROM arapply, aropen s, aropen t, invchead
  WHERE ( (s.aropen_id=arapply_source_aropen_id)
    AND   (arapply_target_aropen_id=t.aropen_id)
    AND   (arapply_target_doctype='I')
    AND   (arapply_target_docnumber=invchead_invcnumber)
    AND   (arapply_source_aropen_id=s.aropen_id)
    AND   (invchead_posted)
    AND   (invchead_id=<? value("invchead_id") ?>) )
  -- there will be two rows, one each for posted and not. get the greater of the two
  -- as at least one is guaranteed to be 0
 ORDER BY total_allocated DESC ) AS totalalloc
 WHERE (invchead_id=<? value("invchead_id") ?>)
 ;
 --------------------------------------------------------------------
   
 QUERY: allocatedCMs
 SELECT cohead_id,
        aropen_docnumber,
        formatMoney(aropen_amount) AS f_total,
        formatMoney(aropen_paid) AS f_paid,
        formatMoney(aropen_amount - aropen_paid) AS f_balance,
        CASE WHEN((aropen_amount - aropen_paid) >= currToCurr(aropenco_curr_id,
 							     aropen_curr_id,
 							     aropenco_amount,
 							     aropen_docdate))
 	    THEN currToCurr(aropenco_curr_id, aropen_curr_id,
 			    aropenco_amount, aropen_docdate)
             ELSE (aropen_amount - aropen_paid)
        END AS allocated,
        CASE WHEN((aropen_amount - aropen_paid) >= currToCurr(aropenco_curr_id,
 							     aropen_curr_id,
 							     aropenco_amount,
 							     aropen_docdate))
 	    THEN formatMoney(currToCurr(aropenco_curr_id, aropen_curr_id,
 					aropenco_amount, aropen_docdate))
             ELSE formatMoney(aropen_amount - aropen_paid)
        END AS f_allocated,
        CASE WHEN((aropen_amount - aropen_paid) >= currToCurr(aropenco_curr_id,
 							     aropen_curr_id,
 							     aropenco_amount,
 							     aropen_docdate))
 	    THEN currToCurr(aropenco_curr_id, invchead_curr_id,
 			    aropenco_amount, aropen_docdate)
             ELSE currToCurr(aropen_curr_id, invchead_curr_id,
                             aropen_amount - aropen_paid, aropen_docdate)
        END AS allocated_invccurr,
        CASE WHEN((aropen_amount - aropen_paid) >= currToCurr(aropenco_curr_id,
 							     aropen_curr_id,
 							     aropenco_amount,
 							     aropen_docdate))
 	    THEN formatMoney(currToCurr(aropenco_curr_id, invchead_curr_id,
 					aropenco_amount, aropen_docdate))
             ELSE formatMoney(currToCurr(aropen_curr_id, invchead_curr_id,
                                         aropen_amount - aropen_paid,
                                         aropen_docdate))
        END AS f_allocated_invccurr,
        curr_symbol AS aropen_currsymbol
   FROM aropenco, aropen, cohead, invchead, curr_symbol
  WHERE ( (aropenco_aropen_id=aropen_id)
    AND   (aropenco_cohead_id=cohead_id)
    AND   ((aropen_amount - aropen_paid) > 0)
    AND   (aropen_curr_id=curr_id)
    AND   (cohead_number=invchead_ordernumber)
    AND   (NOT invchead_posted)
    AND   (invchead_id=<? value("invchead_id") ?>) )
 UNION
 SELECT cohead_id,
        arapply_source_docnumber AS aropen_docnumber,
        formatMoney(s.aropen_amount) AS f_total,
        formatMoney(s.aropen_paid -
                    currToCurr(arapply_curr_id, s.aropen_curr_id,
                               arapply_applied, arapply_postdate)) AS f_paid,
        formatMoney(s.aropen_amount - s.aropen_paid +
                    currToCurr(arapply_curr_id, s.aropen_curr_id,
                               arapply_applied, arapply_postdate)) AS f_balance,
        currToCurr(arapply_curr_id, s.aropen_curr_id,
                   arapply_applied, arapply_postdate) AS allocated,
        formatMoney(currToCurr(arapply_curr_id, s.aropen_curr_id,
                               arapply_applied,
                               arapply_postdate)) AS f_allocated,
        currToCurr(arapply_curr_id, invchead_curr_id,
                   arapply_applied, t.aropen_docdate) AS allocated_invccurr,
        formatMoney(currToCurr(arapply_curr_id, invchead_curr_id,
                               arapply_applied,
                               t.aropen_docdate)) AS f_allocated_invccurr,
        curr_symbol AS aropen_currsymbol
   FROM arapply, aropen s, aropen t, cohead, invchead, curr_symbol
  WHERE ( (s.aropen_id=arapply_source_aropen_id)
    AND   (arapply_target_aropen_id=t.aropen_id)
    AND   (arapply_target_doctype='I')
    AND   (arapply_target_docnumber=invchead_invcnumber)
    AND   (arapply_source_aropen_id=s.aropen_id)
    AND   (arapply_curr_id=curr_id)
    AND   (cohead_number=invchead_ordernumber)
    AND   (invchead_posted)
    AND   (invchead_id=<? value("invchead_id") ?>) )
  ORDER BY aropen_docnumber;
 --------------------------------------------------------------------
   
 QUERY: currency
 SELECT
  curr_symbol
 FROM
     invchead,
     curr_symbol
 WHERE (invchead_id = <? value("invchead_id") ?>) AND
       invchead_curr_id = curr_id;
 --------------------------------------------------------------------
   
 QUERY: logo
 SELECT image_data 
 FROM image 
 WHERE ((image_name='logo'));
 --------------------------------------------------------------------
   
 QUERY: tracknum
-select cosmisc_tracknum from cohead, cosmisc, invchead 
+select formatdate(cosmisc_shipdate) AS f_shipdate, cosmisc_tracknum, cosmisc_shipvia from cohead, cosmisc, invchead 
 where 
 cohead_id = cosmisc_cohead_id
 and cohead_number = invchead_ordernumber
-and invchead_id = <? value("invchead_id") ?>;
+and invchead_id = <? value("invchead_id") ?>
+order by cosmisc_shipdate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: InvoiceInformation
 QUERY: GroupHead
 SELECT invchead_id, invchead_ponumber,
        formatDate(invchead_shipdate) AS f_shipdate,
        formatDate(invchead_invcdate) AS f_invcdate,
        formatMoney((invchead_tax + invchead_misc_amount + invchead_freight + SUM(round((invcitem_billed * invcitem_qty_invuomratio) * (invcitem_price / COALESCE(invcitem_price_invuomratio,1)),2)))) AS f_amount,
        invchead_billto_name, invchead_billto_address1,
        invchead_billto_address2, invchead_billto_address3,
        ( invchead_billto_city || ' ' || invchead_billto_state || ', '
          || invchead_billto_zipcode ) AS billtocitystatezip,
        invchead_shipto_name, invchead_shipto_address1,
        invchead_shipto_address2, invchead_shipto_address3,
        ( invchead_shipto_city || ' ' || invchead_shipto_state || ', '
          || invchead_shipto_zipcode ) AS shiptocitystatezip,
        invchead_notes, invchead_invcnumber
 FROM invchead LEFT OUTER JOIN (invcitem LEFT OUTER JOIN item ON (invcitem_item_id=item_id) ) ON (invcitem_invchead_id=invchead_id)
 WHERE (invchead_id=<? value("invchead_id") ?>)
 GROUP BY invchead_id, invchead_ponumber,
          invchead_shipdate, invchead_invcdate,
          invchead_misc_amount, invchead_freight, invchead_tax,
          invchead_billto_name, invchead_billto_address1,
          invchead_billto_address2, invchead_billto_address3,
          invchead_billto_city, invchead_billto_state, invchead_billto_zipcode,
          invchead_shipto_name, invchead_shipto_address1,
          invchead_shipto_address2, invchead_shipto_address3,
          invchead_shipto_city, invchead_shipto_state, invchead_shipto_zipcode,
          invchead_notes, invchead_invcnumber;
 --------------------------------------------------------------------
   
 QUERY: CustInfo
 SELECT cust_id,
        cust_number,
        cust_name,
        cust_address1,
        cust_address2,
        cust_address3,
        cust_city || ' ' || cust_state || ', ' || cust_zipcode AS custcitystatezip
 FROM invchead, cust
 WHERE ( (invchead_id=<? value("invchead_id") ?>)
  AND (invchead_cust_id=cust_id) );
 --------------------------------------------------------------------
   
 QUERY: Details
 SELECT 1 as grpnum,
        arapply_id,
        CASE WHEN (arapply_source_doctype = 'C') THEN text('C/M')
             WHEN (arapply_fundstype='C') THEN text('Check')
             WHEN (arapply_fundstype='T') THEN text('Certified Check')
             WHEN (arapply_fundstype='M') THEN text('Master Card')
             WHEN (arapply_fundstype='V') THEN text('Visa')
             WHEN (arapply_fundstype='A') THEN text('American Express')
             WHEN (arapply_fundstype='D') THEN text('Discover Card')
             WHEN (arapply_fundstype='R') THEN text('Other Credit Card')
             WHEN (arapply_fundstype='K') THEN text('Cash')
             WHEN (arapply_fundstype='W') THEN text('Wire Transfer')
             WHEN (arapply_fundstype='O') THEN text('Other')
        END AS documenttype,
        CASE WHEN (arapply_source_doctype = 'C') THEN arapply_source_docnumber
+            WHEN (arapply_source_doctype = 'R') THEN arapply_source_docnumber
             WHEN (arapply_source_doctype = 'K') THEN arapply_refnumber
             ELSE text('Error')
        END AS docnumber,
        formatDate(arapply_postdate) AS f_postdate,
        formatMoney(arapply_applied) AS f_amount
   FROM arapply, invchead
  WHERE ( (arapply_target_doctype='I')
    AND (arapply_target_docnumber=invchead_invcnumber)
    AND (invchead_id=<? value("invchead_id") ?>) )
 ORDER BY arapply_postdate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ItemCostsByClassCode
 QUERY: head
 SELECT <? if exists("classcode_id") ?>
          ( SELECT (classcode_code || '-' || classcode_descrip)
              FROM classcode
             WHERE (classcode_id=<? value("classcode_id") ?>) )
        <? elseif exists("classcode_pattern") ?>
          text(<? value("classcode_pattern") ?>)
        <? else ?>
          text('All Class Codes')
        <? endif ?>
        AS classcode;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT item_id,
        item_number,
        item_descrip1,
        item_descrip2,
        uom_name as f_uom,
        formatCost(scost) as f_stdcost,
        formatCost(acost) as f_actcost,
        classcode_code
   FROM ( SELECT item_id,
                 item_number,
                 item_descrip1,
                 item_descrip2,
                 uom_name,
                 stdcost(item_id) AS scost,
                 actcost(item_id) AS acost,
                 classcode_code
            FROM item, classcode, uom
           WHERE ((item_classcode_id=classcode_id)
             AND (item_inv_uom_id=uom_id)
           <? if exists("classcode_id") ?>
             AND (classcode_id=<? value("classcode_id") ?>)
           <? elseif exists("classcode_pattern") ?>
             AND (classcode_code ~ <? value("classcode_pattern") ?>)
           <? endif ?>
           )
        ) AS data
+ WHERE ( (true)
 <? if exists("onlyShowZeroCosts") ?>
- WHERE ((scost=0)
-    OR (acost=0)
- )
+   AND ((scost=0) OR (acost=0))
+<? endif ?>
+<? if exists("onlyShowDiffCosts") ?>
+   AND (scost != acost)
 <? endif ?>
+ )
 ORDER BY item_number
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ItemMaster
 QUERY: head
 SELECT item_number,
        formatBoolYN(item_active) AS f_item_active,
        item_descrip1, item_descrip2,
        CASE WHEN(item_type='P') THEN 'Purchased'
             WHEN(item_type='M') THEN 'Manufactured'
             WHEN(item_type='J') THEN 'Job'
             WHEN(item_type='F') THEN 'Phantom'
             WHEN(item_type='B') THEN 'Breeder'
             WHEN(item_type='C') THEN 'Co-Product'
             WHEN(item_type='Y') THEN 'By-Product'
             WHEN(item_type='R') THEN 'Reference'
             WHEN(item_type='T') THEN 'Tooling'
             WHEN(item_type='O') THEN 'Outside Process'
             ELSE item_type
        END AS f_item_type,
        formatBoolYN(item_config) AS f_item_config,
        (classcode_code||' - '||classcode_descrip) AS f_classcode,
        iuom.uom_name AS invuom,
        formatBoolYN(item_picklist) AS f_item_picklist,
        formatBoolYN(item_fractional) AS f_item_fractional,
        itemcapuom(item_id) AS capuom, itemaltcapuom(item_id) AS altcapuom, puom.uom_name AS shipuom,
        formatUOMRatio(itemcapinvrat(item_id)) AS f_capinvrat,
        formatUOMRatio(itemaltcapinvrat(item_id)) AS f_altcapinvrat,
        formatUOMRatio(iteminvpricerat(item_id)) AS f_shipinvrat,
        formatWeight(item_prodweight) AS f_item_prodweight,
        formatWeight(item_packweight) AS f_item_packweight,
        formatBoolYN(item_sold) AS f_item_sold
   FROM item, classcode, uom AS iuom, uom AS puom
  WHERE ((item_id=<? value("item_id") ?>)
    AND  (item_inv_uom_id=iuom.uom_id)
    AND  (item_price_uom_id=puom.uom_id)
    AND  (item_classcode_id=classcode_id) );
 --------------------------------------------------------------------
   
 QUERY: sold
 SELECT uom_name,
        formatUOMRatio(iteminvpricerat(item_id)) AS f_iteminvpricerat,
        (prodcat_code||' - '||prodcat_descrip) AS f_prodcat,
-       formatBoolYN(item_taxable) AS f_item_taxable,
        formatBoolYN(item_exclusive) AS f_item_exclusive,
        formatPrice(item_listprice) AS f_item_listprice,
        formatExtPrice(item_listprice / iteminvpricerat(item_id)) AS f_extprice
   FROM item, prodcat, uom
  WHERE ((item_id=<? value("item_id") ?>)
    AND  (item_price_uom_id=uom_id)
    AND  (item_sold)
    AND  (item_prodcat_id=prodcat_id) );
 --------------------------------------------------------------------
   
 QUERY: notes
 SELECT item_comments, item_extdescrip
   FROM item
  WHERE (item_id=<? value("item_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: itemchar
 SELECT 1 as one,
        char_name as charass_name,
        charass_value
   FROM charass, char
  WHERE ((charass_target_type='I')
    AND (charass_char_id=char_id)
    AND (charass_target_id=<? value("item_id") ?>))
 ORDER BY char_name;
 --------------------------------------------------------------------
   
 QUERY: imglist
 SELECT 1 as one,
        image_name, firstLine(image_descrip) as f_descrip,
        CASE WHEN (itemimage_purpose='I') THEN 'Inventory Description'
             WHEN (itemimage_purpose='P') THEN 'Product Description'
             WHEN (itemimage_purpose='E') THEN 'Engineering Reference'
             WHEN (itemimage_purpose='M') THEN 'Miscellaneous'
             ELSE 'Other'
        END as f_purpose
 FROM itemimage, image
 WHERE ( (itemimage_image_id=image_id)
  AND (itemimage_item_id=<? value("item_id") ?>) )
 ORDER BY image_name;
 --------------------------------------------------------------------
   
 QUERY: comments
 SELECT 1 as one,
        formatDate(comment_date) as f_date,
        comment_user,
        comment_text
 FROM comment
 WHERE ( (comment_source='I')
  AND (comment_source_id=<? value("item_id") ?>) )
 ORDER BY comment_date;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ItemSitesByParameterList
 QUERY: head
 SELECT <? if exists("classcode_id") ?>
          ( SELECT (classcode_code||'-'||classcode_descrip)
              FROM classcode
             WHERE (classcode_id=<? value("classcode_id") ?>) )
        <? elseif exists("classcode_pattern") ?>
          text(<? value("classcode_pattern") ?>)
        <? elseif exists("plancode_id") ?>
          ( SELECT (plancode_code||'-'||plancode_name)
              FROM plancode
             WHERE (plancode_id=<? value("plancode_id") ?>) )
        <? elseif exists("plancode_pattern") ?>
          text(<? value("plancode_pattern") ?>)
        <? elseif exists("costcat_id") ?>
          ( SELECT (costcat_code||'-'||costcat_descrip)
              FROM costcat
             WHERE (costcat_id=<? value("costcat_id") ?>) )
        <? elseif exists("costcat_pattern") ?>
          text(<? value("costcat_pattern") ?>)
        <? elseif exists("itemgrp_id") ?>
          ( SELECT (itemgrp_name||'-'||itemgrp_descrip)
              FROM itemgrp
             WHERE (itemgrp_id=<? value("itemgrp_id") ?>) )
        <? elseif exists("itemgrp_pattern") ?>
          text(<? value("itemgrp_pattern") ?>)
        <? else ?>
          text('')
        <? endif ?>
        AS f_value,
        <? if reExists("classcode.*") ?>
          text('Class Codes:')
        <? elseif reExists("plancode.*") ?>
          text('Planner Codes:')
        <? elseif reExists("costcat.*") ?>
          text('Cost Categories:')
        <? elseif reExists("itemgrp.*") ?>
          text('Item Groups:')
        <? else ?>
          text('')
        <? endif ?>
        AS f_label,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("showInactive") ?>
          text('Yes')
        <? else ?>
          text('No')
        <? endif ?>
        AS f_showInactive
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT warehous_code,
        formatBoolYN(itemsite_active) AS active,
        item_number,
        item_descrip1,
        item_descrip2,
        formatBoolYN(itemsite_supply) AS supplied,
        formatBoolYN(itemsite_sold) AS sold,
        itemsite_soldranking,
        formatBoolYN(itemsite_stocked) AS stocked,
        formatBoolYN(itemsite_createpr) AS createpr,
        CASE WHEN (itemsite_controlmethod='N') THEN 'None'
             WHEN (itemsite_controlmethod='R') THEN 'Regular'
             WHEN (itemsite_controlmethod='L') THEN 'Lot #'
             WHEN (itemsite_controlmethod='S') THEN 'Serial #'
             ELSE '?'
        END AS controlmethod,
        formatBoolYN(itemsite_loccntrl) AS locationcontrol,
        CASE WHEN (itemsite_location_id=-1) THEN 'None'
             ELSE ( SELECT location_name
                      FROM location
                     WHERE (location_id=itemsite_location_id) )
        END AS defaultlocation,
        formatBoolYN(itemsite_useparams) AS enforceparams,
        formatBoolYN(itemsite_useparamsmanual) AS onmanualorders,
        formatQty(itemsite_reorderlevel) AS reorderlevel,
        formatQty(itemsite_ordertoqty) AS orderupto,
        formatQty(itemsite_multordqty) AS ordermult,
        formatQty(itemsite_safetystock) AS safetystock,
        itemsite_abcclass,
        itemsite_cyclecountfreq,
        itemsite_leadtime,
        itemsite_eventfence,
        formatQty(itemsite_qtyonhand) AS qoh,
        formatDate(itemsite_datelastused, 'Never') AS lastused,
        formatDate(itemsite_datelastcount, 'Never') AS lastcounted,
        CASE WHEN(itemsite_plancode_id=-1) THEN 'Error'
             ELSE (SELECT (plancode_code || '-' || plancode_name)
                     FROM plancode
                    WHERE (plancode_id=itemsite_plancode_id) )
        END AS plannercode
   FROM itemsite, warehous, item
  WHERE ((itemsite_item_id=item_id)
    AND (itemsite_warehous_id=warehous_id)
 <? if exists("classcode_id") ?>
    AND (item_classcode_id=<? value("classcode_id") ?>)
 <? elseif exists("classcode_pattern") ?>
    AND (item_classcode_id IN (SELECT classcode_id
                                 FROM classcode
                                WHERE (classcode_code ~ <? value("classcode_pattern") ?>) ) )
 <? elseif exists("plancode_id") ?>
    AND (itemsite_plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
    AND (itemsite_plancode_id IN (SELECT plancode_id
                                    FROM plancode
                                   WHERE (plancode_code ~ <? value("plancode_pattern") ?>)))
 <? elseif exists("costcat_id") ?>
    AND (itemsite_costcat_id=<? value("costcat_id") ?>)
 <? elseif exists("costcat_pattern") ?>
    AND (itemsite_costcat_id IN (SELECT costcat_id
                                   FROM costcat
                                  WHERE (costcat_code ~ <? value("costcat_pattern") ?>)))
 <? elseif exists("itemgrp_id") ?>
    AND (item_id IN (SELECT itemgrpitem_item_id
                       FROM itemgrpitem
                      WHERE (itemgrpitem_itemgrp_id=<? value("itemgrp_id") ?>) ) )
 <? elseif exists("itemgrp_pattern") ?>
    AND (item_id IN (SELECT itemgrpitem_item_id
                       FROM itemgrpitem, itemgrp
                      WHERE ( (itemgrpitem_itemgrp_id=itemgrp_id)
                        AND (itemgrp_name ~ <? value("itemgrp_pattern") ?>) ) ))
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if NOT exists("showInactive") ?>
    AND (itemsite_active)
 <? endif ?>
 )
 ORDER BY item_number;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ItemsByCharacteristic
 QUERY: detail
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        formatBoolYN(item_active) AS active,
        CASE WHEN (item_type='M') THEN 'Manufactured'
             WHEN (item_type='P') THEN 'Purchased'
             WHEN (item_type='F') THEN 'Phantom'
             WHEN (item_type='B') THEN 'Breeder'
             WHEN (item_type='C') THEN 'Co-Product'
             WHEN (item_type='Y') THEN 'By-Product'
             WHEN (item_type='R') THEN 'Reference'
             WHEN (item_type='T') THEN 'Tooling'
             WHEN (item_type='O') THEN 'Outside Process'
+            WHEN (item_type='J') THEN 'Job'
+            WHEN (item_type='K') THEN 'Kit'
             ELSE item_type
        END AS itemtype,
        iuom.uom_name AS invuom,
        itemcapuom(item_id) AS capuom,
        itemaltcapuom(item_id) AS altcapuom,
        puom.uom_name AS priceuom,
        puom.uom_name AS shipuom,
        formatRatio(itemcapinvrat(item_id)) AS capratio,
        formatRatio(itemaltcapinvrat(item_id)) AS altcapratio,
        formatRatio(iteminvpricerat(item_id)) AS shipratio,
        formatRatio(iteminvpricerat(item_id)) AS priceratio,
        formatBoolYN(item_sold) AS sold,
        formatBoolYN(item_exclusive) AS exclusive,
-       formatBoolYN(item_taxable) AS taxable,
        formatBoolYN(item_picklist) AS picklist,
        formatBoolYN(item_config) AS configured,
        formatWeight(item_prodweight) AS prodweight,
        formatWeight(item_packweight) AS packweight,
        char_name, charass_value
   FROM item, charass, char, uom AS iuom, uom AS puom
  WHERE ((charass_target_type='I')
    AND (charass_target_id=item_id)
    AND (item_inv_uom_id=iuom.uom_id)
    AND (item_price_uom_id=puom.uom_id)
    AND (charass_char_id=char_id)
    AND (char_id=<? value("char_id") ?>)
    AND (charass_value ~* <? value("value") ?>)
 <? if not exists("showInactive") ?>
    AND (item_active)
 <? endif ?>
 )
 ORDER BY item_number;
 --------------------------------------------------------------------
   
 QUERY: head
 SELECT char_name,
        text(<? value("value") ??>) AS charvalue,
        <? if exists("showInactive") ?>
          text('Showing Active and Inactive Items')
        <? else ?>
          text('Showing Active Items')
        <? endif ?>
        AS lbl_show
   FROM char
  WHERE (char_id=<? value("char_id") ?>);
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ItemsByClassCode
 QUERY: detail
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        formatBoolYN(item_active) AS active,
        CASE WHEN (item_type='M') THEN 'Manufactured'
             WHEN (item_type='P') THEN 'Purchased'
             WHEN (item_type='F') THEN 'Phantom'
             WHEN (item_type='B') THEN 'Breeder'
             WHEN (item_type='C') THEN 'Co-Product'
             WHEN (item_type='Y') THEN 'By-Product'
             WHEN (item_type='R') THEN 'Reference'
             WHEN (item_type='T') THEN 'Tooling'
             WHEN (item_type='O') THEN 'Outside Process'
+            WHEN (item_type='J') THEN 'Job'
+            WHEN (item_type='K') THEN 'Kit'
             ELSE item_type
        END AS itemtype,
        iuom.uom_name AS invuom,
        itemcapuom(item_id) AS capuom,
        itemaltcapuom(item_id) AS altcapuom,
        puom.uom_name AS priceuom,
        puom.uom_name AS shipuom,
        formatRatio(itemcapinvrat(item_id)) AS capratio,
        formatRatio(itemaltcapinvrat(item_id)) AS altcapratio,
        formatRatio(iteminvpricerat(item_id)) AS shipratio,
        formatRatio(iteminvpricerat(item_id)) AS priceratio,
        formatBoolYN(item_sold) AS sold,
        formatBoolYN(item_exclusive) AS exclusive,
-       formatBoolYN(item_taxable) AS taxable,
        formatBoolYN(item_picklist) AS picklist,
        formatBoolYN(item_config) AS configured,
        formatWeight(item_prodweight) AS prodweight,
        formatWeight(item_packweight) AS packweight,
        classcode_code
   FROM item, classcode, uom AS iuom, uom AS puom
  WHERE ((item_classcode_id=classcode_id)
    AND (item_inv_uom_id=iuom.uom_id)
    AND (item_price_uom_id=puom.uom_id)
 <? if exists("classcode_id") ?>
    AND (classcode_id=<? value("classcode_id") ?>)
 <? elseif exists("classcode_pattern") ?>
    AND (classcode_code ~ <? value("classcode_pattern") ?>)
 <? endif ?>
 <? if not exists("showInactive") ?>
    AND (item_active)
 <? endif ?>
 )
 ORDER BY item_number;
 --------------------------------------------------------------------
   
 QUERY: head
 SELECT <? if exists("classcode_id") ?>
          ( SELECT (classcode_code||'-'||classcode_descrip)
              FROM classcode
             WHERE (classcode_id=<? value("classcode_id") ?>) )
        <? elseif exists("classcode_pattern") ?>
          text(<? value("classcode_pattern") ?>)
        <? else ?>
          text('All Class Codes')
        <? endif ?>
        AS classcode;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ItemsByProductCategory
 QUERY: detail
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        formatBoolYN(item_active) AS active,
        CASE WHEN (item_type='M') THEN 'Manufactured'
             WHEN (item_type='P') THEN 'Purchased'
             WHEN (item_type='F') THEN 'Phantom'
             WHEN (item_type='B') THEN 'Breeder'
             WHEN (item_type='C') THEN 'Co-Product'
             WHEN (item_type='Y') THEN 'By-Product'
             WHEN (item_type='R') THEN 'Reference'
             WHEN (item_type='T') THEN 'Tooling'
             WHEN (item_type='O') THEN 'Outside Process'
+            WHEN (item_type='J') THEN 'Job'
+            WHEN (item_type='K') THEN 'Kit'
             ELSE item_type
        END AS itemtype,
        iuom.uom_name AS invuom,
        itemcapuom(item_id) AS capuom,
        itemaltcapuom(item_id) AS altcapuom,
        puom.uom_name AS priceuom,
        puom.uom_name AS shipuom,
        formatRatio(itemcapinvrat(item_id)) AS capratio,
        formatRatio(itemaltcapinvrat(item_id)) AS altcapratio,
        formatRatio(iteminvpricerat(item_id)) AS shipratio,
        formatRatio(iteminvpricerat(item_id)) AS priceratio,
        formatBoolYN(item_sold) AS sold,
        formatBoolYN(item_exclusive) AS exclusive,
-       formatBoolYN(item_taxable) AS taxable,
        formatBoolYN(item_picklist) AS picklist,
        formatBoolYN(item_config) AS configured,
        formatWeight(item_prodweight) AS prodweight,
        formatWeight(item_packweight) AS packweight,
        prodcat_code
   FROM item, prodcat, uom AS iuom, uom AS puom
  WHERE ((item_prodcat_id=prodcat_id)
    AND (item_inv_uom_id=iuom.uom_id)
    AND (item_price_uom_id=puom.uom_id)
 <? if exists("prodcat_id") ?>
    AND (prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (prodcat_code ~ <? value("prodcat_pattern") ?>)
 <? endif ?>
 <? if not exists("showInactive") ?>
    AND (item_active)
 <? endif ?>
 )
 ORDER BY item_number;
 --------------------------------------------------------------------
   
 QUERY: head
 SELECT <? if exists("prodcat_id") ?>
          ( SELECT (prodcat_code||'-'||prodcat_descrip)
              FROM prodcat
             WHERE (prodcat_id=<? value("prodcat_id") ?>) )
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('All Product Categories')
        <? endif ?>
        AS prodcat;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ListOpenSalesOrders
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse;
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT DISTINCT cohead_id,
        cohead_number,
        cohead_billtoname,
        cohead_custponumber,
        formatDate(cohead_orderdate) AS f_orderdate
   FROM cohead, coitem, itemsite, cust
  WHERE ((coitem_cohead_id=cohead_id)
    AND (coitem_itemsite_id=itemsite_id)
    AND (cohead_cust_id=cust_id)
    AND (coitem_status='O')
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY cohead_number
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ListTransferOrders
 QUERY: head
 SELECT <? if exists("src_warehous_id") ?>
          ( SELECT warehous_code
              FROM whsinfo
             WHERE (warehous_id=<? value("src_warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?> AS src_warehous_code,
        <? if exists("dest_warehous_id") ?>
          ( SELECT warehous_code
              FROM whsinfo
             WHERE (warehous_id=<? value("dest_warehous_id") ?>) )
        <? else ?>
-          text('All Warehouses')
+          text('All Sites')
        <? endif ?> AS dest_warehous_code,
        CASE WHEN (<? value ("tohead_status") ?>='C') THEN 'Closed'
             WHEN (<? value ("tohead_status") ?>='O') THEN 'Open'
             ELSE text('All Statuses')
             END AS status;
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT tohead_number,
        tohead_srcname,
        tohead_trnsname,
        tohead_destname,
        formatDate(tohead_orderdate) AS f_orderdate,
        formatDate(MIN(toitem_schedshipdate)) AS f_scheddate,
        formatDate(DATE(MAX(shipitem_shipdate))) AS f_shipdate,
        CASE WHEN (tohead_status='C') THEN 'Closed'
             WHEN (tohead_status='O') THEN 'Open'
             ELSE tohead_status
             END AS status
   FROM tohead, toitem LEFT OUTER JOIN
        (shipitem JOIN
         shiphead ON (shipitem_shiphead_id=shiphead_id
                     AND shiphead_order_type='TO')
        ) ON (shipitem_orderitem_id=toitem_id)
  WHERE ((toitem_tohead_id=tohead_id)
    AND  (toitem_status<>'X')
 <? if exists("src_warehous_id") ?>
    AND  (tohead_src_warehous_id=<? value("src_warehous_id") ?>)
 <? endif ?>
 <? if exists("dest_warehous_id") ?>
    AND  (tohead_dest_warehous_id=<? value("dest_warehous_id") ?>)
 <? endif ?>
 <? if exists("tohead_status") ?>
    AND (tohead_status=<? value("tohead_status") ?>)
 <? endif ?>
 )
 GROUP BY tohead_number, tohead_srcname, tohead_trnsname, tohead_destname,
          tohead_orderdate, tohead_status
 ORDER BY tohead_number;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: MaterialUsageVarianceByBOMItem
 QUERY: head
 SELECT parent.item_number AS parent_number,
        parent.item_descrip1 AS parent_descrip1,
        parent.item_descrip2 AS parent_descrip2,
        puom.uom_name AS parent_invuom,
        child.item_number AS comp_number,
        child.item_descrip1 AS comp_descrip1,
        child.item_descrip2 AS comp_descrip2,
        cuom.uom_name AS comp_invuom,
        bomitem_seqnumber as comp_seqnumber,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse
   FROM item as parent, item as child, uom AS puom, uom AS cuom, bomitem
  WHERE ((parent.item_id=<? value("item_id") ?>)
    AND (parent.item_inv_uom_id=puom.uom_id)
    AND (bomitem_item_id=child.item_id)
    AND (child.item_inv_uom_id=cuom.uom_id)
    AND (bomitem_id=<? value("component_item_id") ?>) );
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT formatDate(posted) AS f_posted,
        formatQty(ordered) AS f_ordered,
        formatQty(received) AS f_produced,
        formatQty(projreq) AS f_projreq,
        formatQtyPer(projqtyper) AS f_projqtyper,
        formatQty(actiss) AS f_actiss, 
        formatQtyPer(actqtyper) AS f_actqtyper,
        formatQtyPer(actqtyper - projqtyper) AS f_qtypervar,
        formatPrcnt((1 - (actqtyper / projqtyper)) * -1) AS f_percent
   FROM ( SELECT womatlvar_posted AS posted,
                 womatlvar_qtyord AS ordered,
                 womatlvar_qtyrcv AS received,
                 (womatlvar_qtyrcv * (womatlvar_qtyper * (1 + womatlvar_scrap))) AS projreq,
                 womatlvar_qtyper AS projqtyper,
                 (womatlvar_qtyiss) AS actiss, (womatlvar_qtyiss / (womatlvar_qtyrcv * (1 + womatlvar_scrap))) AS actqtyper 
            FROM womatlvar, itemsite AS component,
                 itemsite AS parent
           WHERE ((womatlvar_parent_itemsite_id=parent.itemsite_id)
             AND (womatlvar_component_itemsite_id=component.itemsite_id)
             AND (womatlvar_bomitem_id=<? value("component_item_id") ?>)
             AND (womatlvar_posted BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
             AND (component.itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
                 )
        ) AS data
 ORDER BY posted;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: MaterialUsageVarianceByComponentItem
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        uom_name,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate
   FROM item JOIN uom ON (item_inv_uom_id=uom_id)
  WHERE (item_id=<? value("item_id") ?>);
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT formatDate(posted) AS f_posted,
        item_number, item_descrip1, item_descrip2, uom_name,
        formatQty(ordered) AS f_ordered,
        formatQty(received) AS f_produced,
        formatQty(projreq) AS f_projreq,
        formatQtyPer(projqtyper) AS f_projqtyper,
        formatQty(actiss) AS f_actiss, 
        formatQtyPer(actqtyper) AS f_actqtyper,
        formatQtyPer(actqtyper - projqtyper) AS f_qtypervar,
        formatPrcnt((1 - (actqtyper / projqtyper)) * -1) AS f_percent
   FROM ( SELECT womatlvar_posted AS posted,
                 item_number, uom_name,
                 item_descrip1, item_descrip2,
                 womatlvar_qtyord AS ordered,
                 womatlvar_qtyrcv AS received,
                 (womatlvar_qtyrcv * (womatlvar_qtyper * (1 + womatlvar_scrap))) AS projreq,
                 womatlvar_qtyper AS projqtyper,
                 (womatlvar_qtyiss) AS actiss,
                 (womatlvar_qtyiss / (womatlvar_qtyrcv * (1 + womatlvar_scrap))) AS actqtyper 
            FROM womatlvar, itemsite AS component,
                 itemsite AS parent, item, uom
           WHERE ((womatlvar_parent_itemsite_id=parent.itemsite_id)
             AND (womatlvar_component_itemsite_id=component.itemsite_id)
             AND (parent.itemsite_item_id=item_id)
             AND (item_inv_uom_id=uom_id)
             AND (component.itemsite_item_id=<? value("item_id") ?>)
             AND (womatlvar_posted BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
             AND (component.itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
                 )
        ) AS data
 ORDER BY posted;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: MaterialUsageVarianceByItem
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        uom_name,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate
   FROM item JOIN uom ON (item_inv_uom_id=uom_id)
  WHERE (item_id=<? value("item_id") ?>);
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT formatDate(posted) AS f_posted,
        item_number, item_descrip1, item_descrip2, uom_name,
        formatQty(ordered) AS f_ordered,
        formatQty(received) AS f_produced,
        formatQty(projreq) AS f_projreq,
        formatQtyPer(projqtyper) AS f_projqtyper,
        formatQty(actiss) AS f_actiss, 
        formatQtyPer(actqtyper) AS f_actqtyper,
        formatQtyPer(actqtyper - projqtyper) AS f_qtypervar,
        formatPrcnt((1 - (actqtyper / projqtyper)) * -1) AS f_percent
   FROM ( SELECT womatlvar_posted AS posted,
                 item_number, uom_name,
                 item_descrip1, item_descrip2,
                 womatlvar_qtyord AS ordered,
                 womatlvar_qtyrcv AS received,
                 (womatlvar_qtyrcv * (womatlvar_qtyper * (1 + womatlvar_scrap))) AS projreq,
                 womatlvar_qtyper AS projqtyper,
                 (womatlvar_qtyiss) AS actiss,
                 (womatlvar_qtyiss / (womatlvar_qtyrcv * (1 + womatlvar_scrap))) AS actqtyper 
            FROM womatlvar, itemsite AS component,
                 itemsite AS parent, item, uom
           WHERE ((womatlvar_parent_itemsite_id=parent.itemsite_id)
             AND (womatlvar_component_itemsite_id=component.itemsite_id)
             AND (component.itemsite_item_id=item_id)
             AND (item_inv_uom_id=uom_id)
             AND (parent.itemsite_item_id=<? value("item_id") ?>)
             AND (womatlvar_posted BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
             AND (parent.itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
                 )
        ) AS data
 ORDER BY posted;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: MaterialUsageVarianceByWarehouse
 QUERY: head
 SELECT formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT formatDate(posted) AS f_posted,
        parent_number, parent_descrip1, parent_descrip2, parent_invuom,
        child_number, child_descrip1, child_descrip2, child_invuom,
        formatQty(ordered) AS f_ordered,
        formatQty(received) AS f_produced,
        formatQty(projreq) AS f_projreq,
        formatQtyPer(projqtyper) AS f_projqtyper,
        formatQty(actiss) AS f_actiss, 
        formatQtyPer(actqtyper) AS f_actqtyper,
        formatQtyPer(actqtyper - projqtyper) AS f_qtypervar,
        formatPrcnt((1 - (actqtyper / projqtyper)) * -1) AS f_percent
   FROM ( SELECT womatlvar_posted AS posted,
                 parentitem.item_number AS parent_number,
                 puom.uom_name AS parent_invuom,
                 parentitem.item_descrip1 AS parent_descrip1,
                 parentitem.item_descrip2 AS parent_descrip2,
                 componentitem.item_number AS child_number,
                 cuom.uom_name AS child_invuom,
                 componentitem.item_descrip1 AS child_descrip1,
                 componentitem.item_descrip2 AS child_descrip2,
                 womatlvar_qtyord AS ordered,
                 womatlvar_qtyrcv AS received,
                 (womatlvar_qtyrcv * (womatlvar_qtyper * (1 + womatlvar_scrap))) AS projreq,
                 womatlvar_qtyper AS projqtyper,
                 (womatlvar_qtyiss) AS actiss,
                 (womatlvar_qtyiss / (womatlvar_qtyrcv * (1 + womatlvar_scrap))) AS actqtyper 
            FROM womatlvar, itemsite AS componentsite, itemsite AS parentsite,
                 item AS componentitem, item AS parentitem, uom AS puom, uom AS cuom
           WHERE ((womatlvar_parent_itemsite_id=parentsite.itemsite_id)
             AND (womatlvar_component_itemsite_id=componentsite.itemsite_id)
             AND (parentsite.itemsite_item_id=parentitem.item_id)
             AND (parentitem.item_inv_uom_id=puom.uom_id)
             AND (componentsite.itemsite_item_id=componentitem.item_id)
             AND (componentitem.item_inv_uom_id=cuom.uom_id)
             AND (womatlvar_posted BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
             AND (componentsite.itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
                 )
        ) AS data
 ORDER BY posted;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: OpenWorkOrdersWithClosedParentSalesOrders
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT formatWONumber(wo_id) AS wonumber,
        wo_status, item_number, uom_name,
        item_descrip1, item_descrip2,
        warehous_code,
        cohead_number,
        formatQty(wo_qtyord) AS qtyord,
        formatQty(wo_qtyrcv) AS qtyrcv,
        formatDate(wo_startdate) AS startdate,
        formatDate(wo_duedate) AS duedate 
   FROM coitem, cohead, wo, itemsite, warehous, item, uom
  WHERE ((coitem_cohead_id=cohead_id)
    AND (coitem_order_id=wo_id)
    AND (coitem_status='C')
    AND (wo_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (itemsite_warehous_id=warehous_id)
    AND (wo_status IN ('O', 'E', 'R', 'I'))
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY wo_duedate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: OpenWorkOrdersWithParentSalesOrders
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT formatWONumber(wo_id) AS wonumber,
        wo_status, item_number, uom_name,
        item_descrip1, item_descrip2,
        warehous_code,
        cohead_number,
        formatQty(wo_qtyord) AS qtyord,
        formatQty(wo_qtyrcv) AS qtyrcv,
        formatDate(wo_startdate) AS startdate,
        formatDate(wo_duedate) AS duedate 
   FROM coitem, cohead, wo, itemsite, warehous, item, uom
  WHERE ((coitem_cohead_id=cohead_id)
    AND (coitem_order_id=wo_id)
    AND (coitem_status<>'X')
    AND (wo_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (itemsite_warehous_id=warehous_id)
    AND (wo_status IN ('O', 'E', 'R', 'I'))
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY wo_duedate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: POLineItemsByDate
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("agentUsername") ?>
        TEXT(<? value("agentUsername" ?>)
        <? else ?>
        TEXT('All Agents')
        <? endif ?>
        AS agentUsername,
        <? if exists("openItems") ?>
          text('Open Items')
        <? elseif exists("closedItems") ?>
          text('Closed Items')
        <? else ?>
          text('All Items')
        <? endif ?>
        as f_whichitems,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT CASE WHEN (itemsite_id IS NULL) THEN ( SELECT warehous_code
                                               FROM warehous
                                               WHERE (pohead_warehous_id=warehous_id) )
             ELSE ( SELECT warehous_code
                    FROM warehous
                    WHERE (itemsite_warehous_id=warehous_id) )
        END AS warehousecode,
        pohead_number as f_ponumber,
        poitem_linenumber as f_linenumber,
        vend_name,
        formatDate(poitem_duedate) as f_duedate,
        COALESCE(item_number, (text('NonInv - ') || poitem_vend_item_number)) AS itemnumber,
        COALESCE(uom_name, poitem_vend_uom) AS itemuom,
        formatQty(poitem_qty_ordered) as f_ordered,
        formatQty(poitem_qty_received) as f_received,
        formatQty(poitem_qty_returned) as f_returned
   FROM pohead, vend,
        poitem LEFT OUTER JOIN
          (itemsite JOIN item
            ON (itemsite_item_id=item_id) JOIN uom ON (item_inv_uom_id=uom_id))
          ON (poitem_itemsite_id=itemsite_id) 
  WHERE ((poitem_pohead_id=pohead_id)
    AND (pohead_vend_id=vend_id)
    AND (poitem_duedate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND ( ( (itemsite_id IS NULL) AND (pohead_warehous_id=<? value("warehous_id") ?>) ) OR
          ( (itemsite_id IS NOT NULL) AND (itemsite_warehous_id=<? value("warehous_id") ?>) ) )
 <? endif ?>
 <? if exists("agentUsername") ?>
    AND (pohead_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
 <? if exists("openItems") ?>
    AND (poitem_status='O')
 <? elseif exists("closedItems") ?>
    AND (poitem_status='C')
 <? endif ?>
 )
 ORDER BY poitem_duedate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: POLineItemsByItem
 QUERY: head
 SELECT item_number, item_descrip1, item_descrip2, uom_name,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code FROM warehous WHERE warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("agentUsername") ?>
        TEXT(<? value("agentUsername" ?>)
        <? else ?>
        TEXT('All Agents')
        <? endif ?>
        AS agentUsername,
        <? if exists("openItems") ?>
          text('Open Items')
        <? elseif exists("closedItems") ?>
          text('Closed Items')
        <? else ?>
          text('All Items')
        <? endif ?>
        AS f_whichitems
   FROM item JOIN uom ON (item_inv_uom_id=uom_id)
  WHERE (item_id=<? value("item_id") ?>);
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT warehous_code, pohead_number as f_ponumber, vend_name,
        formatDate(poitem_duedate) as f_duedate,
        poitem_vend_uom as uom_name, 
        formatQty(poitem_qty_ordered) as f_ordered,
        formatQty(poitem_qty_received) as f_received,
        formatQty(poitem_qty_returned) as f_returned 
   FROM pohead, poitem, vend, itemsite, warehous 
  WHERE ((poitem_pohead_id=pohead_id)
    AND (pohead_vend_id=vend_id)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("agentUsername") ?>
    AND (pohead_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
 <? if exists("openItems") ?>
    AND (poitem_status='O')
 <? elseif exists("closedItems") ?>
    AND (poitem_status='C')
 <? endif ?>
    AND (poitem_itemsite_id=itemsite_id)
    AND (itemsite_warehous_id=warehous_id)
    AND (itemsite_item_id=<? value("item_id") ?>)
 ) 
 ORDER BY poitem_duedate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: POLineItemsByVendor
 QUERY: head
 SELECT vend_number,
        vend_name,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code FROM warehous WHERE warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("agentUsername") ?>
        TEXT(<? value("agentUsername" ?>)
        <? else ?>
        TEXT('All Agents')
        <? endif ?>
        AS agentUsername,
        <? if exists("openItems") ?>
          text('Open Items')
        <? elseif exists("closedItems") ?>
          text('Closed Items')
        <? else ?>
          text('All Items')
        <? endif ?>
        AS f_whichitems
   FROM vend
  WHERE (vend_id=<? value("vend_id") ?>);
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT CASE WHEN (itemsite_id IS NULL) THEN ( SELECT warehous_code
                                               FROM warehous
                                               WHERE (pohead_warehous_id=warehous_id) )
             ELSE ( SELECT warehous_code
                    FROM warehous
                    WHERE (itemsite_warehous_id=warehous_id) )
        END AS warehousecode,
        pohead_number as f_ponumber,
        formatDate(poitem_duedate) as f_duedate,
        COALESCE(item_number, (text('NonInv - ') || poitem_vend_item_number)) AS itemnumber,
        COALESCE(uom_name, poitem_vend_uom) AS itemuom,
        formatQty(poitem_qty_ordered) as f_ordered,
        formatQty(poitem_qty_received) as f_received,
        formatQty(poitem_qty_returned) as f_returned 
   FROM pohead,
        poitem LEFT OUTER JOIN
        ( itemsite JOIN item
          ON (itemsite_item_id=item_id) JOIN uom ON (item_inv_uom_id=uom_id))
        ON (poitem_itemsite_id=itemsite_id)
  WHERE ((poitem_pohead_id=pohead_id)
 <? if exists("warehous_id") ?>
    AND ( ( (itemsite_id IS NULL) AND (pohead_warehous_id=<? value("warehous_id") ?>) ) OR
          ( (itemsite_id IS NOT NULL) AND (itemsite_warehous_id=<? value("warehous_id") ?>) ) )
 <? endif ?>
 <? if exists("agentUsername") ?>
    AND (pohead_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
 <? if exists("poNumber") ?>
    AND (pohead_number=<? value("poNumber") ?>)
 <? endif ?>
 <? if exists("openItems") ?>
    AND (poitem_status='O')
 <? elseif exists("closedItems") ?>
    AND (poitem_status='C')
 <? endif ?>
    AND (pohead_vend_id=<? value("vend_id") ?>)) 
 ORDER BY poitem_duedate, pohead_number, poitem_linenumber;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: POsByDate
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("agentUsername") ?>
        TEXT(<? value("agentUsername" ?>)
        <? else ?>
        TEXT('All Agents')
        <? endif ?>
        AS agentUsername,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT warehous_code AS warehousecode,
        pohead_number as f_ponumber,
        vend_name,
        CASE WHEN(poitem_status='C') THEN TEXT('Closed')
             WHEN(poitem_status='U') THEN TEXT('Unposted')
             WHEN(poitem_status='O' AND (SUM(poitem_qty_received-poitem_qty_returned) > 0) AND (SUM(poitem_qty_ordered)>SUM(poitem_qty_received-poitem_qty_returned))) THEN TEXT('Partial')
             WHEN(poitem_status='O' AND (SUM(poitem_qty_received-poitem_qty_returned) > 0) AND (SUM(poitem_qty_ordered)=SUM(poitem_qty_received-poitem_qty_returned))) THEN TEXT('Recieved')
             WHEN(poitem_status='O') THEN TEXT('Open')
             ELSE poitem_status
        END AS poitemstatus,
        formatDate(MIN(poitem_duedate)) as f_duedate,
        MIN(poitem_duedate) AS min_duedate
   FROM poitem, vend, pohead
        LEFT OUTER JOIN
          warehous
          ON (pohead_warehous_id=warehous_id) 
  WHERE ((poitem_pohead_id=pohead_id)
    AND (pohead_vend_id=vend_id)
    AND (poitem_duedate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND ( pohead_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("agentUsername") ?>
    AND (pohead_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
 <? if not exists("showClosed") ?>
    AND (poitem_status!='C')
 <? endif ?>
 )
 GROUP BY warehous_code, pohead_number, vend_name,
          poitem_status
 ORDER BY min_duedate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: POsByVendor
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("vend_id") ?>
          (select vend_number from vend where vend_id=<? value("vend_id" ?>)
        <? else ?>
        TEXT('All Vendors')
        <? endif ?>
        AS f_vend,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("byReceiptDate") ?>
          TEXT('By Receipt Date')
        <? elseif exists("byDueDate") ?>
          TEXT('By Due Date')
        <? else ?>
          TEXT('By Order Date')
        <? endif ?>
        AS f_byDate,
        <? if exists("descrip_pattern") ?>
          TEXT('Where Item Description contains ' || <? value("descrip_pattern") ?>)
        <? else ?>
          TEXT('')
        <? endif ?>
        AS f_descrip
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT pohead_id, pohead_number,
        warehous_code AS warehousecode,
        CASE WHEN(poitem_status='C') THEN TEXT('Closed')
             WHEN(poitem_status='U') THEN TEXT('Unposted')
             WHEN(poitem_status='O' AND (SUM(poitem_qty_received-poitem_qty_returned) > 0) AND (SUM(poitem_qty_ordered)>SUM(poitem_qty_received-poitem_qty_returned))) THEN TEXT('Partial')
             WHEN(poitem_status='O' AND (SUM(poitem_qty_received-poitem_qty_returned) > 0) AND (SUM(poitem_qty_ordered)=SUM(poitem_qty_received-poitem_qty_returned))) THEN TEXT('Received')
             WHEN(poitem_status='O') THEN TEXT('Open')
             ELSE poitem_status
        END AS poitemstatus,
        vend_number,
 <? if exists("byReceiptDate") ?>
        formatDate(MIN(date(porecv_date))) AS f_date,
        MIN(date(porecv_date)) AS sortDate,
 <? elseif exists("byDueDate") ?>
        formatDate(MIN(poitem_duedate)) AS f_date,
        MIN(poitem_duedate) AS sortDate,
 <? else ?>
        formatDate(pohead_orderdate) AS f_date,
        pohead_orderdate AS sortDate,
 <? endif ?>
        (MIN(poitem_duedate) < CURRENT_DATE) AS late
   FROM vend, poitem,
 <? if exists("byReceiptDate") ?>
        porecv,
 <? endif ?>
        pohead LEFT OUTER JOIN warehous ON (pohead_warehous_id=warehous_id)
  WHERE ((poitem_pohead_id=pohead_id)
    AND  (pohead_vend_id=vend_id)
 <? if exists("byReceiptDate") ?>
    AND  (porecv_itemsite_id=poitem_itemsite_id)
    AND  (porecv_ponumber=pohead_number)
    AND  (date(porecv_date) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? elseif exists("byDueDate") ?>
    AND  (poitem_duedate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? else ?>
    AND  (pohead_orderdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? endif ?>
 <? if exists("vend_id") ?>
    AND  (vend_id=<? value("vend_id") ?>)
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (pohead_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if not exists("showClosed") ?>
    AND (poitem_status!='C')
 <? endif ?>
 <? if exists("descrip_pattern") ?>
   AND ((poitem_vend_item_descrip ~* <? value("descrip_pattern") ?>)
     OR (poitem_itemsite_id IN (
       SELECT itemsite_id
         FROM itemsite, item
        WHERE ((itemsite_item_id=item_id)
          AND  ((item_descrip1 ~* <? value("descrip_pattern") ?>)
             OR (item_descrip2 ~* <? value("descrip_pattern") ?>)))
                               )))
 <? endif ?>
 
 )
 GROUP BY pohead_id, pohead_number, warehous_code,
          poitem_status, pohead_orderdate, vend_number
 ORDER BY sortDate
 
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: PackingList-Shipment
 QUERY: head
 SELECT shiphead_number, 'S/O #:' AS ordertype,
        cohead_number AS ordernumber,
        formatsobarcode(cohead_id) AS order_barcode,
        cohead_shipvia AS shipvia,
        cohead_shiptophone AS shiptophone,
        cohead_custponumber,
        formatDate(cohead_orderdate) AS orderdate,
        cohead_shipcomments AS shipcomments,   
        cohead_billtoname AS billtoname,
        formataddr(cohead_billtoaddress1, cohead_billtoaddress2,
                   cohead_billtoaddress3,
                   (cohead_billtocity || '  ' ||   cohead_billtostate ||
                   '  ' || cohead_billtozipcode), cohead_billtocountry) AS billing_address,
        cohead_shiptoname AS shiptoname,
        formataddr(cohead_shiptoaddress1, cohead_shiptoaddress2,
                   cohead_shiptoaddress3,
                   (cohead_shiptocity || '  ' ||   cohead_shiptostate ||
                   '  ' || cohead_shiptozipcode), cohead_shiptocountry) AS shipping_address,           
 
        cust_number,
        cust_contact,
        cust_phone,
        terms_descrip
   FROM shiphead, cohead, cust, terms
  WHERE ((cohead_cust_id=cust_id)
    AND (cohead_terms_id=terms_id)
    AND (cohead_id=shiphead_order_id)
    AND (shiphead_order_type='SO')
    AND (shiphead_id=<? value("shiphead_id") ?>)
 )
 <? if exists("MultiWhs") ?>
 UNION
 SELECT shiphead_number, 'T/O #:' AS ordertype,
        tohead_number AS ordernumber,
        formattobarcode(tohead_id) AS order_barcode,
        shiphead_shipvia AS shipvia,
        tohead_destphone AS shiptophone,
        TEXT(tohead_number) AS cohead_custponumber,
        formatDate(tohead_orderdate) AS orderdate,
        tohead_shipcomments AS shipcomments,
        '' AS billtoname,
        '' AS billing_address,
        tohead_destname AS shiptoname,
        formataddr(tohead_destaddress1, tohead_destaddress2,
                    tohead_destaddress3,
                   (tohead_destcity || ' ' || tohead_deststate ||
                    ' ' || tohead_destpostalcode), tohead_destcountry) AS shipping_address,
        'Transfer Order' AS cust_number,
        tohead_destcntct_name AS cust_contact,
        tohead_destphone AS cust_phone,
        '' AS terms_descrip
   FROM shiphead, tohead
  WHERE ((tohead_id=shiphead_order_id)
    AND  (shiphead_order_type='TO')
    AND  (shiphead_id=<? value("shiphead_id") ?>)
 )
 <? endif ?>;
 --------------------------------------------------------------------
   
 QUERY: scheddate
 SELECT formatDate(MIN(coitem_scheddate)) AS scheddate
   FROM coitem, coship
  WHERE ((coitem_status <> 'X')
    AND  (coitem_id=coship_coitem_id)
    AND  (coship_cosmisc_id=<? value("coship_cosmisc_id") ?>));
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT 1 AS groupby,
-       coitem_linenumber AS linenumber,
+--     coitem_linenumber AS linenumber,
+--     In 3.1 replace line above with line below to support 
+--     kitting functionality
+       formatsolinenumber(coitem_id) AS linenumber,
        coitem_memo AS memo,
        item_number,
        formatitemsitebarcode(itemsite_id) AS item_barcode,
        formatsoitembarcode(coitem_id) AS orderitem_barcode,
 --     In 2.3 replaced the next line:
 --     uom_name,
 --     with:
        (select uom_name from uom where uom_id = coitem_qty_uom_id) AS uom_name,
-       item_shipuom,
+       itemsellinguom(item_id) AS shipuom,
        item_descrip1,
        item_descrip2,
 
        formatQty(coitem_qtyord) AS ordered,
        formatQty(coship_qty) AS shipped,
 
-       formatQty(roundUp((coitem_qtyord * coitem_qty_invuomratio) /
-                         CASE WHEN(item_shipinvrat = 0) THEN 1
-                                                        ELSE item_shipinvrat
-                         END)) AS shipordered,
-       formatQty(roundUp(coship_qty /
-                         CASE WHEN(item_shipinvrat = 0) THEN 1
-                                                        ELSE item_shipinvrat
-                         END ) ) AS shipatshipping,
-
        CASE WHEN (coitem_status='O' AND (SELECT cust_creditstatus
                                            FROM cust,cohead
                                           WHERE coitem_cohead_id=cohead_id
                                             AND cust_id=cohead_cust_id)='H') THEN 'H'
             WHEN (coitem_status='O' AND ((SELECT SUM(invcitem_billed)
                                             FROM cohead, invchead, invcitem
                                            WHERE ((invchead_ordernumber=cohead_number)
                                              AND  (invcitem_invchead_id=invchead_id)
                                              AND  (invcitem_item_id=item_id)
                                              AND  (invcitem_warehous_id=itemsite_warehous_id)
                                              AND  (invcitem_linenumber=coitem_linenumber)
                                              AND  (cohead_id=coitem_cohead_id))) >= coitem_qtyord)) THEN 'I'
             WHEN (coitem_status='O' AND ((SELECT SUM(invcitem_billed)
                                             FROM cohead, invchead, invcitem
                                            WHERE ((invchead_ordernumber=cohead_number)
                                              AND  (invcitem_invchead_id=invchead_id)
                                              AND  (invcitem_item_id=item_id)
                                              AND  (invcitem_warehous_id=itemsite_warehous_id)
                                              AND  (invcitem_linenumber=coitem_linenumber)
                                              AND  (cohead_id=coitem_cohead_id))) > 0)) THEN 'P'
             WHEN (coitem_status='O' AND (itemsite_qtyonhand - qtyAllocated(itemsite_id, CURRENT_DATE)
                                          + qtyOrdered(itemsite_id, CURRENT_DATE))
                                           >= (coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned)) THEN 'R'
             ELSE coitem_status
        END AS f_status,
        CASE
          WHEN (getPacklistItemLotSerial(coship_cosmisc_id, coitem_id) = '') THEN
            ''
          ELSE
            'Serial #/Lot Information:'
        END AS lotserial_title,
        getPacklistItemLotSerial(coship_cosmisc_id, coitem_id) AS lotserial,
        CASE
          WHEN (getPacklistCharName(coship_cosmisc_id, coitem_id) = '') THEN
            ''
          ELSE
            'Characteristics:'
        END AS char_title,
        getPacklistCharName(coship_cosmisc_id, coitem_id) AS char_name,
        getPacklistCharValue(coship_cosmisc_id, coitem_id) AS char_value
   FROM itemsite, item, coitem, coship, uom
  WHERE ( (coitem_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (coitem_status <> 'X')
    AND (coitem_id=coship_coitem_id)
    AND (coship_cosmisc_id=<? value("cosmisc_id") ?>)
 )
 <? if exists("MultiWhs") ?>
 UNION
 SELECT 2 AS groupby,
-       toitem_linenumber AS linenumber,
+--     For 3.1 added CAST to match column type of corresponding column in other SELECT 
+--     in this UNION
+       CAST(toitem_linenumber AS text) AS linenumber,
        '' AS memo,
        item_number,
        formatitemsitebarcode(itemsite_id) AS item_barcode,
        formattoitembarcode(toitem_id) AS orderitem_barcode,
        uom_name,
-       item_shipuom,
+       itemsellinguom(item_id) AS shipuom,
        item_descrip1,
        item_descrip2,
 
        formatQty(toitem_qty_ordered) AS ordered,
        formatQty(shipitem_qty) AS shipped,
 
-       formatQty(roundUp(toitem_qty_ordered /
-                         CASE WHEN (item_shipinvrat = 0) THEN 1
-                                                         ELSE item_shipinvrat
-                         END)) AS shipordered,
-       formatQty(roundUp(shipitem_qty /
-                         CASE WHEN (item_shipinvrat = 0) THEN 1
-                                                         ELSE item_shipinvrat
-                         END)) AS shipatshipping,
-
        toitem_status AS f_status,
        CASE
          WHEN (getPacklistItemLotSerial(shiphead_id, toitem_id) = '') THEN
            ''
          ELSE
            'Serial #/Lot Information:'
        END AS lotserial_title,
        getPacklistItemLotSerial(shiphead_id, toitem_id) AS lotserial,
        '' AS char_title,
        '' AS char_name,
        '' AS char_value
   FROM itemsite, item, toitem, tohead, shipitem, shiphead, uom
  WHERE ((toitem_item_id=item_id)
    AND  (item_inv_uom_id=uom_id)
    AND  (item_id=itemsite_item_id)
    AND  (toitem_tohead_id=tohead_id)
    AND  (toitem_status <> 'X')
    AND  (tohead_src_warehous_id=itemsite_warehous_id)
    AND  (toitem_id=shipitem_orderitem_id)
    AND  (shipitem_shiphead_id=shiphead_id)
    AND  (shiphead_order_type='TO')
    AND  (shiphead_id=<? value("shiphead_id") ?>)
 )
 <? endif ?>
 ORDER BY linenumber;
 --------------------------------------------------------------------
   
 QUERY: logo
 SELECT image_data 
 FROM image 
 WHERE ((image_name='logo'));
 --------------------------------------------------------------------
   
 QUERY: so_ra_relation
 --added in 2.3 to show RA link to S/O if the SO
 --was created as the result of a replacement RA
 select 
 'RA #' AS ratext,
 rahead_number
 from
 rahead, cohead, shiphead
 where 
 rahead_new_cohead_id = cohead_id
 and cohead_id = shiphead_order_id
 and shiphead_id = <? value("shiphead_id") ?>;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: PackingList
 QUERY: head
 SELECT COALESCE(shiphead_number::TEXT, 'Not Issued To Shipping') AS shiphead_number,
 	      'S/O #:' AS ordertype,
        cohead_number AS ordernumber,
        formatsobarcode(cohead_id) AS order_barcode,
        COALESCE(shiphead_shipvia, cohead_shipvia) AS shipvia,
        cohead_shiptophone AS shiptophone,
        cohead_custponumber,
        formatDate(cohead_orderdate) AS orderdate,
        cohead_shipcomments AS shipcomments,
        cohead_billtoname AS billtoname,
        formataddr(cohead_billtoaddress1, cohead_billtoaddress2,
                   cohead_billtoaddress3,
                   (cohead_billtocity || '  ' ||   cohead_billtostate ||
                   '  ' || cohead_billtozipcode), cohead_billtocountry) AS billing_address,
        cohead_shiptoname AS shiptoname,
        formataddr(cohead_shiptoaddress1, cohead_shiptoaddress2,
                   cohead_shiptoaddress3,
                   (cohead_shiptocity || '  ' ||   cohead_shiptostate ||
                   '  ' || cohead_shiptozipcode), cohead_shiptocountry) AS shipping_address,           
 
        cust_number,
        cust_contact,
        cust_phone,
        terms_descrip
   FROM cust, terms, cohead
 <? if exists("shiphead_id") ?>
 	JOIN
 <? else ?>
 	LEFT OUTER JOIN
 <? endif ?>
        shiphead ON ((shiphead_id=<? value("shiphead_id") ?>)
 		AND (shiphead_order_id=cohead_id)
 		AND (shiphead_order_type='SO'))
  WHERE ((cohead_cust_id=cust_id)
    AND  (cohead_terms_id=terms_id)
 <? if exists("head_id") ?>
    AND  (<? value("head_type") ?>='SO')
    AND  (cohead_id=<? value("head_id") ?>)
 <? endif ?>
 )
 
 <? if exists("MultiWhs") ?>
 UNION
 SELECT COALESCE(shiphead_number::TEXT, 'Not Issued To Shipping') AS shiphead_number,
       'T/O #:' AS ordertype,
        tohead_number AS ordernumber,
        formattobarcode(tohead_id) AS order_barcode,
        COALESCE(shiphead_shipvia, tohead_shipvia) AS shipvia,
        tohead_destphone AS shiptophone,
        TEXT(tohead_number) AS cohead_custponumber,
        formatDate(tohead_orderdate) AS orderdate,
        tohead_shipcomments AS shipcomments,
        '' AS billtoname,
        '' AS billing_address,
        tohead_destname AS shiptoname,
        formataddr(tohead_destaddress1, tohead_destaddress2,
                    tohead_destaddress3,
                   (tohead_destcity || ' ' || tohead_deststate ||
                    ' ' || tohead_destpostalcode), tohead_destcountry) AS shipping_address,
        'Transfer Order' AS cust_number,
        tohead_destcntct_name AS cust_contact,
        tohead_destphone AS cust_phone,
        '' AS terms_descrip
   FROM tohead 
 <? if exists("shiphead_id") ?>
 	JOIN
 <? else ?>
 	LEFT OUTER JOIN
 <? endif ?>
        shiphead ON ((shiphead_id=<? value("shiphead_id") ?>)
 		AND (shiphead_order_id=tohead_id)
 		AND (shiphead_order_type='TO'))
 <? if exists("head_id") ?>
  WHERE ((<? value("head_type") ?>='TO')
    AND  (tohead_id=<? value("head_id") ?>)
    )
 <? endif ?>
 <? endif ?>;
 --------------------------------------------------------------------
   
 QUERY: scheddate
 SELECT formatDate(MIN(orderitem_scheddate)) AS scheddate
   FROM orderitem
        <? if exists("shiphead_id") ?>
        JOIN shiphead ON ((orderitem_orderhead_type=shiphead_order_type)
 		     AND (orderitem_orderhead_id=shiphead_order_id)
 		     AND (shiphead_id=<? value("shiphead_id")?>))
        JOIN shipitem ON ((shiphead_id=shipitem_shiphead_id)
 		     AND (shipitem_orderitem_id=orderitem_id))
        <? endif ?>
  WHERE ((orderitem_status <> 'X')
 <? if exists("head_id") ?>
    AND  (orderitem_orderhead_type=<? value("head_type") ?>)
    AND  (orderitem_orderhead_id=<? value("head_id") ?>)
 <? endif ?>
  );
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT 1 AS groupby,
        coitem_linenumber AS linenumber,
        coitem_memo AS memo,
        item_number,
        formatitemsitebarcode(itemsite_id) AS item_barcode,
        formatsoitembarcode(coitem_id) AS orderitem_barcode,
        (select uom_name from uom where uom_id = coitem_qty_uom_id) AS uom_name,
-       item_shipuom,
+       itemsellinguom(item_id) AS shipuom,
        item_descrip1,
        item_descrip2,
-
        formatQty(coitem_qtyord) AS ordered,
-       formatQty(<? if exists("shiphead_id") ?>
-                 qtyInShipment('SO', coitem_id, <? value("shiphead_id") ?>)
-                 <? else ?> qtyAtShipping('SO', coitem_id) <? endif ?>
-                ) AS atshipping,
-
-       formatQty(roundUp((coitem_qtyord * coitem_qty_invuomratio) /
-                         CASE WHEN(item_shipinvrat = 0) THEN 1
-                                                        ELSE item_shipinvrat
-                         END)) AS shipordered,
-       formatQty(roundUp(<? if exists("shiphead_id") ?>
-                 qtyInShipment('SO', coitem_id, <? value("shiphead_id") ?>)
-                 <? else ?> qtyAtShipping('SO', coitem_id) <? endif ?> /
-                         CASE WHEN(item_shipinvrat = 0) THEN 1
-                                                        ELSE item_shipinvrat
-                         END)) AS shipatshipping,
 
        CASE WHEN (coitem_status='O' AND (SELECT cust_creditstatus
                                            FROM cust,cohead
                                           WHERE coitem_cohead_id=cohead_id
                                             AND cust_id=cohead_cust_id)='H') THEN 'H'
             WHEN (coitem_status='O' AND ((SELECT SUM(invcitem_billed)
                                             FROM cohead, invchead, invcitem
                                            WHERE ((invchead_ordernumber=cohead_number)
                                              AND  (invcitem_invchead_id=invchead_id)
                                              AND  (invcitem_item_id=item_id)
                                              AND  (invcitem_warehous_id=itemsite_warehous_id)
                                              AND  (invcitem_linenumber=coitem_linenumber)
                                              AND  (cohead_id=coitem_cohead_id))) >= coitem_qtyord)) THEN 'I'
             WHEN (coitem_status='O' AND ((SELECT SUM(invcitem_billed)
                                             FROM cohead, invchead, invcitem
                                            WHERE ((invchead_ordernumber=cohead_number)
                                              AND  (invcitem_invchead_id=invchead_id)
                                              AND  (invcitem_item_id=item_id)
                                              AND  (invcitem_warehous_id=itemsite_warehous_id)
                                              AND  (invcitem_linenumber=coitem_linenumber)
                                              AND  (cohead_id=coitem_cohead_id))) > 0)) THEN 'P'
             WHEN (coitem_status='O' AND (itemsite_qtyonhand - qtyAllocated(itemsite_id, CURRENT_DATE)
                                          + qtyOrdered(itemsite_id, CURRENT_DATE))
                                           >= (coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned)) THEN 'R'
             ELSE coitem_status
        END AS f_status
   FROM itemsite, item, coitem, uom
  WHERE ( (coitem_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (coitem_status <> 'X')
 <? if exists("shiphead_id") ?>
    AND  (coitem_cohead_id IN (SELECT shiphead_order_id FROM shiphead
 			      WHERE ((shiphead_id=<? value("shiphead_id") ?>)
 			        AND  (shiphead_order_type='SO'))))
 <? endif ?>
 <? if exists("head_id") ?>
    AND  (<? value("head_type") ?>='SO')
    AND  (coitem_cohead_id=<? value("head_id") ?>)
 <? endif ?>
 )
-GROUP BY coitem_qty_uom_id, coitem_linenumber, coitem_id, coitem_memo, item_number, uom_name, item_shipuom,
+GROUP BY coitem_qty_uom_id, coitem_linenumber, coitem_id, coitem_memo, item_number, uom_name, shipuom,
          item_descrip1, item_descrip2, coitem_qtyord, coitem_qty_invuomratio, coitem_qtyshipped,
-         coitem_qtyreturned, item_shipinvrat, coitem_status, coitem_cohead_id,
+         coitem_qtyreturned, coitem_status, coitem_cohead_id,
          itemsite_id, itemsite_qtyonhand, itemsite_warehous_id, item_id
 <? if exists("MultiWhs") ?>
 UNION
 SELECT 2 AS groupby,
        toitem_linenumber AS linenumber,
        '' AS memo,
        item_number,
        formatitemsitebarcode(itemsite_id) AS item_barcode,
        formattoitembarcode(toitem_id) AS orderitem_barcode,
        uom_name,
-       item_shipuom,
+       itemsellinguom(item_id) AS shipuom,
        item_descrip1,
        item_descrip2,
 
        formatQty(toitem_qty_ordered) AS ordered,
-       formatQty(<? if exists("shiphead_id") ?>
-                 qtyInShipment('TO', toitem_id, <? value("shiphead_id") ?>)
-                 <? else ?> qtyAtShipping('TO', toitem_id) <? endif ?>
-                ) AS atshipping,
-       formatQty(roundUp(toitem_qty_ordered /
-                         CASE WHEN (item_shipinvrat = 0) THEN 1
-                                                         ELSE item_shipinvrat
-                         END)) AS shipordered,
-       formatQty(roundUp(<? if exists("shiphead_id") ?>
-                         qtyInShipment('TO', toitem_id, <? value("shiphead_id")?>)
-                         <? else ?> qtyAtShipping('TO', toitem_id) <? endif ?>
-                         /
-                         CASE WHEN (item_shipinvrat = 0) THEN 1
-                                                         ELSE item_shipinvrat
-                         END)) AS shipatshipping,
 
        toitem_status AS f_status
   FROM itemsite, item, toitem, tohead, uom
  WHERE ((toitem_item_id=item_id)
    AND  (item_inv_uom_id=uom_id)
    AND  (item_id=itemsite_item_id)
    AND  (toitem_tohead_id=tohead_id)
    AND  (toitem_status <> 'X')
    AND  (tohead_src_warehous_id=itemsite_warehous_id)
 <? if exists("shiphead_id") ?>
    AND  (toitem_tohead_id IN (SELECT shiphead_order_id FROM shiphead
 			      WHERE ((shiphead_id=<? value("shiphead_id") ?>)
 			        AND  (shiphead_order_type='TO'))))
 <? endif ?>
 <? if exists("head_id") ?>
    AND  (<? value("head_type") ?>='TO')
    AND  (toitem_tohead_id=<? value("head_id") ?>)
 <? endif ?>
 )
 <? endif ?>
 ORDER BY linenumber;
 --------------------------------------------------------------------
   
 QUERY: logo
 SELECT image_data 
 FROM image 
 WHERE ((image_name='logo'));
 --------------------------------------------------------------------
   
 QUERY: lotdetail
 SELECT
 shiphead_number AS cosmisc_number,
 (orderhead_number || '-' || orderitem_linenumber) AS ordernumber,
 item_number,
 formatlotserialnumber(invdetail_ls_id) AS invdetail_lotserial,
 SUM(invdetail_qty) * -1 AS lotqty,
 SUM(invhist_invqty) as totalshipmentqty,
 invhist_transtype,
 formatdate(MAX(invhist_transdate)) AS invhistdate,
 formatdate(MAX(shipitem_transdate)) AS shiptransdate
 FROM shiphead,shipitem,invhist,invdetail,orderhead,orderitem,itemsite,item
 WHERE ( (shiphead_id = <? value("cosmisc_id") ?> )
 AND (shipitem_shiphead_id=shiphead_id)
 AND (invhist_id=shipitem_invhist_id)
 AND (invdetail_invhist_id=invhist_id)
 AND (orderhead_type=shiphead_order_type)
 AND (orderhead_id=shiphead_order_id)
 AND (orderitem_orderhead_type=shiphead_order_type)
 AND (orderitem_id=shipitem_orderitem_id)
 AND (itemsite_id=orderitem_itemsite_id)
 AND (item_id=itemsite_item_id)
 )
 GROUP BY shiphead_number,orderhead_number,item_number,invdetail_ls_id,
 orderitem_linenumber,invhist_transtype
 ORDER BY ordernumber;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: PartiallyShippedOrders
 QUERY: detail
 SELECT CASE WHEN (cohead_holdtype IN ('P', 'C', 'R')) THEN -1
             ELSE cohead_id
        END AS _coheadid, cohead_id,
        cohead_holdtype, cohead_number, cust_name,
        CASE WHEN (cohead_holdtype='N') THEN <? value("none") ?>
             WHEN (cohead_holdtype='C') THEN <? value("credit") ?>
             WHEN (cohead_holdtype='S') THEN <? value("ship") ?>
             WHEN (cohead_holdtype='P') THEN <? value("pack") ?>
             WHEN (cohead_holdtype='R') THEN <? value("return") ?>
             ELSE <? value("Other") ?>
        END AS f_holdtype,
        formatDate(cohead_orderdate) AS f_orderdate,
        formatDate(MIN(coitem_scheddate)) AS f_scheddate,
        formatDate(cohead_packdate) AS f_packdate,
        <? if exists("showPrices") ?>
          formatExtPrice( SUM( (noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) *
                             (coitem_price / coitem_price_invuomratio) ) )
        <? else ?>
          text('')
        <? endif ?>
        AS f_extprice,
        SUM( (noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) *
             (coitem_price / coitem_price_invuomratio) ) AS backlog,
        MIN(coitem_scheddate) AS scheddate,
        COALESCE(MIN(coship_id), 0) AS shipped
   FROM cohead, itemsite, item, cust,
        coitem LEFT OUTER JOIN coship ON (coship_coitem_id=coitem_id) 
  WHERE ( (coitem_cohead_id=cohead_id)
    AND (cohead_cust_id=cust_id)
    AND (coitem_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (coitem_status='O')
    AND (cohead_id IN ( SELECT DISTINCT coitem_cohead_id
                          FROM coitem
                         WHERE (coitem_qtyshipped > 0) ))
    AND (coitem_qtyshipped < coitem_qtyord)
    AND (coitem_scheddate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 GROUP BY cohead_id, cohead_number, cust_name, cohead_holdtype,
          cohead_orderdate, cohead_packdate
 ORDER BY scheddate, cohead_number;
 --------------------------------------------------------------------
   
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT (warehous_code||'-'||warehous_descrip)
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("showPrices") ?>
          text('$ Amount')
        <? else ?>
          text('')
        <? endif ?>
        AS f_amount,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: PendingWOMaterialAvailability
 QUERY: head
 SELECT item_number, item_descrip1, item_descrip2,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse
   FROM item
 WHERE (item_id=<? value("item_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT bomitem_seqnumber, item_number, item_descrip1, item_descrip2, uom_name,
        formatQty(pendalloc) AS pendalloc,
        formatQty(totalalloc + pendalloc) AS totalalloc,
        formatQty(qoh) AS qoh,
        formatQty(qoh + ordered - (totalalloc + pendalloc)) AS totalavail
 FROM ( SELECT bomitem_seqnumber, item_number,
               item_descrip1, item_descrip2, uom_name,
               ((itemuomtouom(bomitem_item_id, bomitem_uom_id, NULL, bomitem_qtyper * (1 + bomitem_scrap))) * <? value("buildQty") ?>) AS pendalloc,
               qtyAllocated(itemsite_id, date(<? value("buildDate") ?>)) AS totalalloc,
               noNeg(itemsite_qtyonhand) AS qoh,
               qtyOrdered(itemsite_id, date(<? value("buildDate") ?>)) AS ordered
    FROM itemsite, item, bomitem(<? value("item_id") ?>), uom
        WHERE ((bomitem_item_id=itemsite_item_id)
         AND (itemsite_item_id=item_id)
         AND (item_inv_uom_id=uom_id)
         AND (itemsite_warehous_id=<? value("warehous_id") ?>)
         AND (<? value("effectiveDate") ?> BETWEEN bomitem_effective AND (bomitem_expires-1)) ) ) AS data
 <? if exists("showShortages") ?>
 WHERE ((qoh + ordered - (totalalloc + pendalloc)) < 0.0)
 <? endif ?>
 ORDER BY bomitem_seqnumber;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: PickingListSOClosedLines
 QUERY: head
 SELECT cust_number,
        formatsobarcode(cohead_id) AS order_barcode,
 
        formataddr(cohead_billtoaddress1, cohead_billtoaddress2, cohead_billtoaddress3, (cohead_billtocity || '  ' ||   cohead_billtostate || '  ' || cohead_billtozipcode), cohead_billtocountry) AS billing_address, 
 
   formataddr(cohead_shiptoaddress1, cohead_shiptoaddress2, cohead_shiptoaddress3, (cohead_shiptocity || '  ' ||   cohead_shiptostate || '  ' || cohead_shiptozipcode), cohead_shiptocountry) AS shipping_address,           
 
        cust_contact,
        cohead_billtoname,
        cohead_billtoaddress1,
        cohead_billtoaddress2,
        cohead_billtoaddress3,
        (cohead_billtocity || '  ' || cohead_billtostate || '  ' || cohead_billtozipcode) AS billtocitystatezip,
        cust_phone,
        cohead_shiptoname,
        cohead_shiptoaddress1,
        cohead_shiptoaddress2,
        cohead_shiptoaddress3,
        (cohead_shiptocity || '  ' || cohead_shiptostate || ' ' || cohead_shiptozipcode) AS shiptocitystatezip,
        cohead_number,
        cohead_shipvia,
        cohead_shiptophone,
        cohead_custponumber,
        formatDate(cohead_orderdate) AS orderdate,
        cohead_shipcomments, 
        terms_descrip
   FROM cohead, cust, terms
  WHERE ((cohead_cust_id=cust_id)
    AND (cohead_terms_id=terms_id)
    AND (cohead_id=<? value("sohead_id") ?>)
 );
 --------------------------------------------------------------------
   
 QUERY: scheddate
 SELECT formatDate(MIN(coitem_scheddate)) AS scheddate
   FROM coitem
  WHERE ((coitem_status <> 'X') AND (coitem_cohead_id=<? value("sohead_id") ?>));
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT 1 AS groupby,
-       coitem_linenumber,
+       formatsolinenumber(coitem_id) AS linenumber,
        coitem_memo,
        item_number,
        formatitemsitebarcode(itemsite_id) AS item_barcode,
 --     In 2.3 replaced the next line:
 --     uom_name,
 --     with:
        (select uom_name from uom where uom_id = coitem_qty_uom_id) AS uom_name,
-       item_shipuom,
+       itemsellinguom(item_id) AS shipuom,
        item_descrip1,
        item_descrip2,
        formatQty(coitem_qtyord) AS ordered,
        formatQty(coitem_qtyshipped - coitem_qtyreturned) AS shipped,
        formatQty(noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned)) AS balance,
        formatQty( ( SELECT COALESCE(SUM(coship_qty), 0)
                     FROM coship, cosmisc
                     WHERE ( (coship_coitem_id=coitem_id)
                      AND (coship_cosmisc_id=cosmisc_id)
                      AND (NOT cosmisc_shipped) ) ) ) AS atshipping,
-       formatQty(roundUp((coitem_qtyord * coitem_qty_invuomratio) / CASE WHEN(item_shipinvrat = 0) THEN 1 ELSE item_shipinvrat END)) AS shipordered,
-       formatQty(roundUp(((coitem_qtyshipped - coitem_qtyreturned) * coitem_qty_invuomratio) / CASE WHEN(item_shipinvrat = 0) THEN 1 ELSE item_shipinvrat END)) AS shipshipped,
-       formatQty(roundUp((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) / CASE WHEN(item_shipinvrat = 0) THEN 1 ELSE item_shipinvrat END)) AS shipbalance,
-       formatQty(roundUp( ( SELECT COALESCE(SUM(coship_qty), 0)
-                            FROM coship, cosmisc
-                            WHERE ( (coship_coitem_id=coitem_id)
-                              AND (coship_cosmisc_id=cosmisc_id)
-                              AND (NOT cosmisc_shipped) ) )/ CASE WHEN(item_shipinvrat = 0) THEN 1 ELSE item_shipinvrat END ) ) AS shipatshipping,
        CASE WHEN (coitem_status='O' AND (SELECT cust_creditstatus FROM cust,cohead WHERE coitem_cohead_id=cohead_id AND cust_id=cohead_cust_id)='H') THEN 'H'
             WHEN (coitem_status='O' AND ((SELECT SUM(invcitem_billed)
                                             FROM cohead, invchead, invcitem
                                            WHERE ((invchead_ordernumber=cohead_number)
                                              AND  (invcitem_invchead_id=invchead_id)
                                              AND  (invcitem_item_id=item_id)
                                              AND  (invcitem_warehous_id=itemsite_warehous_id)
-                                             AND  (invcitem_linenumber=coitem_linenumber)
+                                             AND  (invcitem_linenumber=CASE WHEN(coitem_subnumber > 0) THEN (coitem_linenumber * 1000) + coitem_subnumber ELSE coitem_linenumber END)
                                              AND  (cohead_id=coitem_cohead_id))) >= coitem_qtyord)) THEN 'I'
             WHEN (coitem_status='O' AND ((SELECT SUM(invcitem_billed)
                                             FROM cohead, invchead, invcitem
                                            WHERE ((invchead_ordernumber=cohead_number)
                                              AND  (invcitem_invchead_id=invchead_id)
                                              AND  (invcitem_item_id=item_id)
                                              AND  (invcitem_warehous_id=itemsite_warehous_id)
-                                             AND  (invcitem_linenumber=coitem_linenumber)
+                                             AND  (invcitem_linenumber=CASE WHEN(coitem_subnumber > 0) THEN (coitem_linenumber * 1000) + coitem_subnumber ELSE coitem_linenumber END)
                                              AND  (cohead_id=coitem_cohead_id))) > 0)) THEN 'P'
             WHEN (coitem_status='O' AND (itemsite_qtyonhand - qtyAllocated(itemsite_id, CURRENT_DATE)
                                          + qtyOrdered(itemsite_id, CURRENT_DATE))
                                           >= (coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned)) THEN 'R'
             ELSE coitem_status
        END AS f_status
   FROM itemsite, item, uom, coitem
  WHERE ( (coitem_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
+   AND (item_type != 'K')
    AND (coitem_status <> 'X')
    AND (coitem_cohead_id=<? value("sohead_id") ?>)
 )
 --2.3 add coitem_qty_uom_id, to the GROUP BY clause
 GROUP BY coitem_qty_uom_id,
-         coitem_linenumber, coitem_id, coitem_memo, item_number, uom_name, item_shipuom,
+         linenumber, coitem_linenumber, coitem_subnumber, coitem_id, coitem_memo, item_number, uom_name, shipuom,
          item_descrip1, item_descrip2, coitem_qtyord, coitem_qty_invuomratio, coitem_qtyshipped,
-         coitem_qtyreturned, item_shipinvrat, coitem_status, coitem_cohead_id,
+         coitem_qtyreturned, coitem_status, coitem_cohead_id,
          itemsite_id, itemsite_qtyonhand, itemsite_warehous_id, item_id
-ORDER BY coitem_linenumber;
+ORDER BY linenumber;
 --------------------------------------------------------------------
   
 QUERY: logo
 SELECT image_data 
 FROM image 
 WHERE ((image_name='logo'));
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: PickingListSOLocsNoClosedLines
 QUERY: head
 SELECT cust_number,
        formatsobarcode(cohead_id) AS order_barcode,
 
        formataddr(cohead_billtoaddress1, cohead_billtoaddress2, cohead_billtoaddress3, (cohead_billtocity || '  ' ||   cohead_billtostate || '  ' || cohead_billtozipcode), cohead_billtocountry) AS billing_address, 
 
   formataddr(cohead_shiptoaddress1, cohead_shiptoaddress2, cohead_shiptoaddress3, (cohead_shiptocity || '  ' ||   cohead_shiptostate || '  ' || cohead_shiptozipcode), cohead_shiptocountry) AS shipping_address,           
 
        cust_contact,
        cohead_billtoname,
        cohead_billtoaddress1,
        cohead_billtoaddress2,
        cohead_billtoaddress3,
        (cohead_billtocity || '  ' || cohead_billtostate || '  ' || cohead_billtozipcode) AS billtocitystatezip,
        cust_phone,
        cohead_shiptoname,
        cohead_shiptoaddress1,
        cohead_shiptoaddress2,
        cohead_shiptoaddress3,
        (cohead_shiptocity || '  ' || cohead_shiptostate || ' ' || cohead_shiptozipcode) AS shiptocitystatezip,
        cohead_number,
        cohead_shipvia,
        cohead_shiptophone,
        cohead_custponumber,
        formatDate(cohead_orderdate) AS orderdate,
        cohead_shipcomments, 
        terms_descrip
   FROM cust, cohead
   LEFT OUTER JOIN terms on (cohead_terms_id=terms_id)
  WHERE ((cohead_cust_id=cust_id)
 --   AND (cohead_id='9999')
     AND (cohead_id=<? value("sohead_id") ?>)
 );
 --------------------------------------------------------------------
   
 QUERY: scheddate
 SELECT formatDate(MIN(coitem_scheddate)) AS scheddate
   FROM coitem
  WHERE ((coitem_status <> 'X') AND (coitem_cohead_id=<? value("sohead_id") ?>));
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT 
-
-       coitem_linenumber,
+       formatsolinenumber(coitem_id) AS linenumber,
        coitem_memo,
        item_number,
        formatitemsitebarcode(itemsite_id) AS item_barcode,
---
-       --location_aisle || '-' || location_rack || '-' || location_bin || '-' || location_name  AS location_name,
---
-
-       CASE WHEN (location_aisle || '-' || location_rack || '-' || location_bin || '-' || location_name) IS NULL THEN itemsite_location_comments
-            ELSE location_aisle || '-' || location_rack || '-' || location_bin || '-' || location_name
+       CASE WHEN (formatLocationName(location_id) = 'N/A') THEN itemsite_location_comments || ' ' || '(comment)'
+            ELSE formatLocationName(location_id)
        END AS location_name,
-
---
        itemsite_location_comments AS location_comment,
        formatlotserialnumber(itemloc_ls_id),
-       CASE WHEN itemloc_expiration = '1970-01-01' THEN text ('N/A')
-          WHEN itemloc_expiration = '2100-01-01' THEN text ('N/A')
-          ELSE CAST(formatdate(itemloc_expiration) AS text)
-       END AS expiration,
+       formatDate(itemloc_expiration, 'N/A') AS expiration,
        itemloc_qty AS location_qty_qty,
+	   CASE WHEN (fetchMetricBool('EnableSOReservationsByLocation')) THEN formatQty(qtyReservedLocation(itemloc_id, 'SO', coitem_id))
+	        ELSE formatQty(0)
+       END AS location_reserved_qty,
        itemuomtouomratio(item_id,item_inv_uom_id, coitem_qty_uom_id) * itemloc_qty AS loc_issue_uom_qty,
        formatqty(itemuomtouomratio(item_id,item_inv_uom_id, coitem_qty_uom_id) * itemloc_qty) AS loc_issue_uom_fmt,
---
-       (select uom_name from uom where uom_id = coitem_qty_uom_id) AS uom_name,
-       item_shipuom,
+       coitemuom.uom_name AS uom_name,
        item_descrip1,
        item_descrip2,
        formatQty(coitem_qtyord) AS ordered,
        formatQty(coitem_qtyshipped - coitem_qtyreturned) AS shipped,
        formatQty(noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned)) AS balance,
-       formatQty( ( SELECT COALESCE(SUM(coship_qty), 0)
-                    FROM coship, cosmisc
-                    WHERE ( (coship_coitem_id=coitem_id)
-                     AND (coship_cosmisc_id=cosmisc_id)
-                     AND (NOT cosmisc_shipped) ) ) ) AS atshipping,
-       formatQty(roundUp((coitem_qtyord * coitem_qty_invuomratio) / CASE WHEN(item_shipinvrat = 0) THEN 1 ELSE item_shipinvrat END)) AS shipordered,
-       formatQty(roundUp(((coitem_qtyshipped - coitem_qtyreturned) * coitem_qty_invuomratio) / CASE WHEN(item_shipinvrat = 0) THEN 1 ELSE item_shipinvrat END)) AS shipshipped,
-       formatQty(roundUp((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) / CASE WHEN(item_shipinvrat = 0) THEN 1 ELSE item_shipinvrat END)) AS shipbalance,
-       formatQty(roundUp( ( SELECT COALESCE(SUM(coship_qty), 0)
-                            FROM coship, cosmisc
-                            WHERE ( (coship_coitem_id=coitem_id)
-                              AND (coship_cosmisc_id=cosmisc_id)
-                              AND (NOT cosmisc_shipped) ) )/ CASE WHEN(item_shipinvrat = 0) THEN 1 ELSE item_shipinvrat END ) ) AS shipatshipping,
-       CASE WHEN (coitem_status='O' AND (SELECT cust_creditstatus FROM cust,cohead WHERE coitem_cohead_id=cohead_id AND cust_id=cohead_cust_id)='H') THEN 'H'
+       formatQty( ( SELECT COALESCE(SUM(shipitem_qty), 0)
+                    FROM shipitem
+                    WHERE ( (shipitem_orderitem_id=coitem_id)
+                      AND   (NOT shipitem_shipped) ) ) ) AS atshipping,
+       formatQty(roundUp((coitem_qtyord * coitem_qty_invuomratio))) AS shipordered,
+       formatQty(roundUp(((coitem_qtyshipped - coitem_qtyreturned) * coitem_qty_invuomratio))) AS shipshipped,
+       formatQty(roundUp((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio))) AS shipbalance,
+       CASE WHEN (coitem_status='O' AND cust_creditstatus='H') THEN 'H'
             WHEN (coitem_status='O' AND ((SELECT SUM(invcitem_billed)
                                             FROM cohead, invchead, invcitem
                                            WHERE ((invchead_ordernumber=cohead_number)
                                              AND  (invcitem_invchead_id=invchead_id)
                                              AND  (invcitem_item_id=item_id)
                                              AND  (invcitem_warehous_id=itemsite_warehous_id)
-                                             AND  (invcitem_linenumber=coitem_linenumber)
+                                             AND  (invcitem_linenumber=CASE WHEN(coitem_subnumber > 0) THEN (coitem_linenumber * 1000) + coitem_subnumber ELSE coitem_linenumber END)
                                              AND  (cohead_id=coitem_cohead_id))) >= coitem_qtyord)) THEN 'I'
             WHEN (coitem_status='O' AND ((SELECT SUM(invcitem_billed)
                                             FROM cohead, invchead, invcitem
                                            WHERE ((invchead_ordernumber=cohead_number)
                                              AND  (invcitem_invchead_id=invchead_id)
                                              AND  (invcitem_item_id=item_id)
                                              AND  (invcitem_warehous_id=itemsite_warehous_id)
-                                             AND  (invcitem_linenumber=coitem_linenumber)
+                                             AND  (invcitem_linenumber=CASE WHEN(coitem_subnumber > 0) THEN (coitem_linenumber * 1000) + coitem_subnumber ELSE coitem_linenumber END)
                                              AND  (cohead_id=coitem_cohead_id))) > 0)) THEN 'P'
             WHEN (coitem_status='O' AND (itemsite_qtyonhand - qtyAllocated(itemsite_id, CURRENT_DATE)
                                          + qtyOrdered(itemsite_id, CURRENT_DATE))
                                           >= (coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned)) THEN 'R'
             ELSE coitem_status
        END AS f_status
        
-FROM item, uom, warehous, coitem, itemsite 
+FROM coitem
+     JOIN cohead ON (cohead_id = coitem_cohead_id)
+	 JOIN cust ON (cust_id = cohead_cust_id)
+     JOIN itemsite ON (itemsite_id = coitem_itemsite_id)
+	 JOIN item ON (item_id = itemsite_item_id)
+	 JOIN whsinfo ON (warehous_id = itemsite_warehous_id)
+	 JOIN uom invuom ON (invuom.uom_id = item_inv_uom_id)
+	 JOIN uom coitemuom ON (coitemuom.uom_id = coitem_qty_uom_id) 
      LEFT OUTER JOIN itemloc  ON (itemloc_itemsite_id = itemsite_id)
      LEFT OUTER JOIN location ON (itemloc_location_id = location_id)
- WHERE ( (coitem_itemsite_id=itemsite_id)
-   AND (itemsite_item_id=item_id)
-   AND (itemsite_warehous_id = warehous_id)
-   AND (item_inv_uom_id=uom_id)
-   AND (coitem_status <> 'X')
+ WHERE ( (coitem_status <> 'X')
    AND (coitem_status <> 'C')
+   AND   (item_type != 'K')
 --REMOVE LINE ABOVE AND CLOSED LINES WILL BE DISPLAYED
    AND (coitem_cohead_id=<? value("sohead_id") ?>)
---   AND (coitem_cohead_id='3349')
 )
 
-ORDER BY coitem_linenumber, expiration, location_name;
+ORDER BY linenumber, expiration, location_name;
 --------------------------------------------------------------------
   
 QUERY: logo
 SELECT image_data 
 FROM image 
 WHERE ((image_name='logo'));
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
-REPORT: PickingListNoClosedLines
+REPORT: PickingListSONoClosedLines
 QUERY: head
 SELECT cust_number,
        formatsobarcode(cohead_id) AS order_barcode,
 
        formataddr(cohead_billtoaddress1, cohead_billtoaddress2, cohead_billtoaddress3, (cohead_billtocity || '  ' ||   cohead_billtostate || '  ' || cohead_billtozipcode), cohead_billtocountry) AS billing_address, 
 
   formataddr(cohead_shiptoaddress1, cohead_shiptoaddress2, cohead_shiptoaddress3, (cohead_shiptocity || '  ' ||   cohead_shiptostate || '  ' || cohead_shiptozipcode), cohead_shiptocountry) AS shipping_address,           
 
        cust_contact,
        cohead_billtoname,
        cohead_billtoaddress1,
        cohead_billtoaddress2,
        cohead_billtoaddress3,
        (cohead_billtocity || '  ' || cohead_billtostate || '  ' || cohead_billtozipcode) AS billtocitystatezip,
        cust_phone,
        cohead_shiptoname,
        cohead_shiptoaddress1,
        cohead_shiptoaddress2,
        cohead_shiptoaddress3,
        (cohead_shiptocity || '  ' || cohead_shiptostate || ' ' || cohead_shiptozipcode) AS shiptocitystatezip,
        cohead_number,
        cohead_shipvia,
        cohead_shiptophone,
        cohead_custponumber,
        formatDate(cohead_orderdate) AS orderdate,
        cohead_shipcomments, 
        terms_descrip
   FROM cohead, cust, terms
  WHERE ((cohead_cust_id=cust_id)
    AND (cohead_terms_id=terms_id)
    AND (cohead_id=<? value("sohead_id") ?>)
 );
 --------------------------------------------------------------------
   
 QUERY: scheddate
 SELECT formatDate(MIN(coitem_scheddate)) AS scheddate
   FROM coitem
  WHERE ((coitem_status <> 'X') AND (coitem_cohead_id=<? value("sohead_id") ?>));
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT 1 AS groupby,
-       coitem_linenumber,
+       formatsolinenumber(coitem_linenumber) AS linenumber,
        coitem_memo,
        item_number,
        formatitemsitebarcode(itemsite_id) AS item_barcode,
---     In 2.3 replaced the next line:
---     uom_name,
---     with:
-       (select uom_name from uom where uom_id = coitem_qty_uom_id) AS uom_name,
-       item_shipuom,
+       (select uom_name from uom where uom_id = coitem_qty_uom_id) AS item_invuom,
        item_descrip1,
        item_descrip2,
        formatQty(coitem_qtyord) AS ordered,
        formatQty(coitem_qtyshipped - coitem_qtyreturned) AS shipped,
        formatQty(noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned)) AS balance,
        formatQty( ( SELECT COALESCE(SUM(coship_qty), 0)
                     FROM coship, cosmisc
                     WHERE ( (coship_coitem_id=coitem_id)
                      AND (coship_cosmisc_id=cosmisc_id)
                      AND (NOT cosmisc_shipped) ) ) ) AS atshipping,
-       formatQty(roundUp((coitem_qtyord * coitem_qty_invuomratio) / CASE WHEN(item_shipinvrat = 0) THEN 1 ELSE item_shipinvrat END)) AS shipordered,
-       formatQty(roundUp(((coitem_qtyshipped - coitem_qtyreturned) * coitem_qty_invuomratio) / CASE WHEN(item_shipinvrat = 0) THEN 1 ELSE item_shipinvrat END)) AS shipshipped,
-       formatQty(roundUp((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) / CASE WHEN(item_shipinvrat = 0) THEN 1 ELSE item_shipinvrat END)) AS shipbalance,
        formatQty(roundUp( ( SELECT COALESCE(SUM(coship_qty), 0)
                             FROM coship, cosmisc
                             WHERE ( (coship_coitem_id=coitem_id)
                               AND (coship_cosmisc_id=cosmisc_id)
-                              AND (NOT cosmisc_shipped) ) )/ CASE WHEN(item_shipinvrat = 0) THEN 1 ELSE item_shipinvrat END ) ) AS shipatshipping,
+                              AND (NOT cosmisc_shipped) ) )/ CASE WHEN(itemuomratiobytype(item_id, 'Selling') = 0) THEN 1 ELSE itemuomratiobytype(item_id, 'Selling') END ) ) AS shipatshipping,
        CASE WHEN (coitem_status='O' AND (SELECT cust_creditstatus FROM cust,cohead WHERE coitem_cohead_id=cohead_id AND cust_id=cohead_cust_id)='H') THEN 'H'
             WHEN (coitem_status='O' AND ((SELECT SUM(invcitem_billed)
                                             FROM cohead, invchead, invcitem
                                            WHERE ((invchead_ordernumber=cohead_number)
                                              AND  (invcitem_invchead_id=invchead_id)
                                              AND  (invcitem_item_id=item_id)
                                              AND  (invcitem_warehous_id=itemsite_warehous_id)
-                                             AND  (invcitem_linenumber=coitem_linenumber)
+                                             AND  (invcitem_linenumber=CASE WHEN(coitem_subnumber > 0) THEN (coitem_linenumber * 1000) + coitem_subnumber ELSE coitem_linenumber END)
                                              AND  (cohead_id=coitem_cohead_id))) >= coitem_qtyord)) THEN 'I'
             WHEN (coitem_status='O' AND ((SELECT SUM(invcitem_billed)
                                             FROM cohead, invchead, invcitem
                                            WHERE ((invchead_ordernumber=cohead_number)
                                              AND  (invcitem_invchead_id=invchead_id)
                                              AND  (invcitem_item_id=item_id)
                                              AND  (invcitem_warehous_id=itemsite_warehous_id)
-                                             AND  (invcitem_linenumber=coitem_linenumber)
+                                             AND  (invcitem_linenumber=CASE WHEN(coitem_subnumber > 0) THEN (coitem_linenumber * 1000) + coitem_subnumber ELSE coitem_linenumber END)
                                              AND  (cohead_id=coitem_cohead_id))) > 0)) THEN 'P'
             WHEN (coitem_status='O' AND (itemsite_qtyonhand - qtyAllocated(itemsite_id, CURRENT_DATE)
                                          + qtyOrdered(itemsite_id, CURRENT_DATE))
                                           >= (coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned)) THEN 'R'
             ELSE coitem_status
        END AS f_status
   FROM itemsite, item, uom, coitem
  WHERE ( (coitem_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (coitem_status <> 'X')
    AND (coitem_status <> 'C')
+   AND (item_type != 'K')
 -- 1 REMOVE THIS AND CLOSED LINES WILL NOT DISPLAY ON PACKING LIST  
    <? if exists("hide closed") ?>
    AND (coitem_status <> 'C')
 -- 2 REMOVE THIS AND CLOSED LINES WILL NOT DISPLAY ON PACKING LIST  
 -- <? endif ?>
    AND (coitem_cohead_id=<? value("sohead_id") ?>)
 )
---2.3 add coitem_qty_uom_id, to the GROUP BY clause
-GROUP BY coitem_qty_uom_id, coitem_linenumber, coitem_id, coitem_memo, item_number, uom_name, item_shipuom,
+GROUP BY coitem_qty_uom_id, coitem_linenumber, coitem_subnumber, coitem_id, coitem_memo, item_number, item_invuom,
          item_descrip1, item_descrip2, coitem_qtyord, coitem_qty_invuomratio, coitem_qtyshipped,
-         coitem_qtyreturned, item_shipinvrat, coitem_status, coitem_cohead_id,
+         coitem_qtyreturned, coitem_status, coitem_cohead_id,
          itemsite_id, itemsite_qtyonhand, itemsite_warehous_id, item_id
-ORDER BY coitem_linenumber;
+ORDER BY linenumber;
 --------------------------------------------------------------------
   
 QUERY: logo
 SELECT image_data 
 FROM image 
 WHERE ((image_name='logo'));
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: PricingScheduleAssignments
 QUERY: detail
 SELECT ipsass_id,
        CASE WHEN (ipsass_shipto_id=-1) THEN TEXT('ANY')
             ELSE (SELECT shipto_num FROM shipto WHERE (shipto_id=ipsass_shipto_id))
        END AS shiptonum,
-       CASE WHEN (ipsass_shipto_id != -1) THEN (SELECT cust_number FROM cust, shipto WHERE ((shipto_cust_id=cust_id) AND (shipto_id=ipsass_shipto_id)))
+       CASE WHEN (ipsass_shipto_id != -1) THEN (SELECT cust_number
+                                                FROM cust, shipto
+                                                WHERE ((shipto_cust_id=cust_id) AND (shipto_id=ipsass_shipto_id)))
             WHEN (ipsass_cust_id=-1) THEN TEXT('Any')
             ELSE (SELECT cust_number FROM cust WHERE (cust_id=ipsass_cust_id))
+       END AS custnumber,
+       CASE WHEN (ipsass_shipto_id != -1) THEN (SELECT cust_name
+                                                FROM cust, shipto
+                                                WHERE ((shipto_cust_id=cust_id) AND (shipto_id=ipsass_shipto_id)))
+            WHEN (ipsass_cust_id=-1) THEN ''
+            ELSE (SELECT cust_name FROM cust WHERE (cust_id=ipsass_cust_id))
        END AS custname,
        CASE WHEN (ipsass_cust_id != -1) THEN TEXT('N/A')
             WHEN (ipsass_shipto_id != -1) THEN TEXT('N/A')
             WHEN (ipsass_custtype_id=-1) THEN ipsass_custtype_pattern
             ELSE (SELECT custtype_code FROM custtype WHERE (custtype_id=ipsass_custtype_id))
        END AS custtype,
        ipshead_name
   FROM ipsass, ipshead
  WHERE (ipshead_id=ipsass_ipshead_id)
 ORDER BY custname, custtype;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: PurchasePriceVariancesByItem
 QUERY: head
 SELECT item_number, item_descrip1,
        item_descrip2, uom_name,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("agentUsername") ?>
        TEXT(<? value("agentUsername" ?>)
        <? else ?>
        TEXT('All Agents')
        <? endif ?>
        AS agentUsername
   FROM item JOIN uom ON (item_inv_uom_id=uom_id)
  WHERE (item_id=<? value("item_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT porecv_id, porecv_ponumber, vend_name,
        formatDate(porecv_date) as f_date,
        firstLine(porecv_vend_item_number) as f_itemnum,
        firstLine(porecv_vend_item_descrip) as f_itemdescrip,
        formatQty(porecv_qty) as f_qty,
        formatPrice(porecv_purchcost) as f_purchcost,
        formatPurchPrice(SUM(vodist_amount) / vodist_qty) AS f_vouchcost,
        formatPrice(porecv_recvcost) as f_recvcost 
   FROM vend, itemsite, porecv
        LEFT OUTER JOIN
        ( vodist JOIN vohead
          ON (vodist_vohead_id=vohead_id and vohead_posted)
        ) ON ( (vodist_poitem_id=porecv_poitem_id) AND (vodist_vohead_id=porecv_vohead_id) )
  WHERE ( (porecv_vend_id=vend_id)
    AND (porecv_itemsite_id=itemsite_id)
    AND (itemsite_item_id=<? value("item_id") ?>)
    AND (date(porecv_date) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("agentUsername") ?>
    AND (porecv_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
  )
 GROUP BY porecv_id, porecv_ponumber, vend_name, porecv_date, porecv_vend_item_number,
          porecv_vend_item_descrip, porecv_qty, porecv_purchcost, porecv_recvcost,
          vodist_qty
 ORDER BY porecv_date DESC;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: PurchasePriceVariancesByVendor
 QUERY: head
 SELECT vend_name,
        vend_number,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("agentUsername") ?>
        TEXT(<? value("agentUsername" ?>)
        <? else ?>
        TEXT('All Agents')
        <? endif ?>
        AS agentUsername
   FROM vend
  WHERE (vend_id=<? value("vend_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT porecv_id, porecv_ponumber,
        formatDate(porecv_date) as f_date,
        COALESCE(item_number, ('NonInv - ' || porecv_vend_item_number)) as f_itemnum,
        COALESCE(item_descrip1, porecv_vend_item_descrip) as f_itemdescrip,
        formatQty(porecv_qty) as f_qty,
        formatPrice(porecv_purchcost) as f_purchcost,
        formatPurchPrice(SUM(vodist_amount) / vodist_qty) AS f_vouchcost,
        formatPrice(porecv_recvcost) as f_recvcost 
   FROM vend,
        porecv LEFT OUTER JOIN
        ( itemsite JOIN item
          ON (itemsite_item_id=item_id)
        ) ON (porecv_itemsite_id=itemsite_id)
        LEFT OUTER JOIN
        ( vodist JOIN vohead
          ON (vodist_vohead_id=vohead_id and vohead_posted)
        ) ON ( (vodist_poitem_id=porecv_poitem_id) AND (vodist_vohead_id=porecv_vohead_id) )
  WHERE ( (porecv_vend_id=vend_id)
    AND (vend_id=<? value("vend_id") ?>)
    AND (date(porecv_date) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("agentUsername") ?>
    AND (porecv_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
  )
 GROUP BY porecv_id, porecv_ponumber, porecv_date, item_number, porecv_vend_item_number,
          item_descrip1, porecv_vend_item_descrip, porecv_qty, porecv_purchcost, porecv_recvcost,
          vodist_qty
 ORDER BY porecv_date DESC;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: PurchaseReqsByPlannerCode
 QUERY: head
 SELECT <? if exists("plancode_id") ?>
          ( SELECT (plancode_code||'-'||plancode_name)
              FROM plancode
             WHERE plancode_id=<? value("plancode_id") ?>)
        <? elseif exists("plancode_pattern") ?>
          text(<? value("plancode_pattern") ?>)
        <? else ?>
          text('All Planner Codes')
        <? endif ?>
        AS plancode,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT item_number,
        (item_descrip1 || ' ' || item_descrip2) as item_descrip,
        pr_status,
        CASE WHEN (pr_order_type='W') THEN ('W/O ' || ( SELECT formatWoNumber(womatl_wo_id)
                                                          FROM womatl
                                                         WHERE (womatl_id=pr_order_id) ) )
             WHEN (pr_order_type='S') THEN ('S/O ' || (SELECT formatSoNumber(pr_order_id)))
             WHEN (pr_order_type='F') THEN ('Planned Order')
             WHEN (pr_order_type='M') THEN 'Manual'
             ELSE 'Other'
        END AS f_type,
        formatDate(pr_duedate) AS f_duedate,
        formatQty(pr_qtyreq) AS f_qtyreq
   FROM pr, itemsite, item
  WHERE ((pr_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (pr_duedate BETWEEN <? value("startDate") ?> and <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("plancode_id") ?>
    AND (itemsite_plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
    AND (itemsite_plancode_id IN (SELECT plancode_id
                                    FROM plancode
                                   WHERE (plancode_code ~ <? value("plancode_pattern") ?>) ) )
 <? endif ?>
 )
 ORDER BY pr_duedate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: PurchaseRequestsByItem
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        uom_name,
        <? if exists("warehous_id") ?>
          (select warehous_code
             from warehous
            where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse
   FROM item JOIN uom ON (item_inv_uom_id=uom_id)
  WHERE (item_id=<? value("item_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT pr_status,
        CASE WHEN (pr_order_type='W') THEN ('W/O ' || ( SELECT formatWoNumber(womatl_wo_id)
                                                        FROM womatl
                                                        WHERE (womatl_id=pr_order_id) ) )
             WHEN (pr_order_type='S') THEN ('S/O ' || (SELECT formatSoNumber(pr_order_id)))
             WHEN (pr_order_type='F') THEN ('Planned Order')
             WHEN (pr_order_type='M') THEN 'Manual'
             ELSE 'Other'
        END as f_type,
        formatDate(pr_duedate) as f_duedate,
        formatQty(pr_qtyreq) as f_qtyreq
   FROM pr, itemsite 
  WHERE ((pr_itemsite_id=itemsite_id)
    AND (itemsite_item_id=<? value("item_id") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
  ) 
 ORDER BY pr_duedate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: PurchaseReqsByPlannerCode
 QUERY: head
 SELECT <? if exists("plancode_id") ?>
          ( SELECT (plancode_code||'-'||plancode_name)
              FROM plancode
             WHERE plancode_id=<? value("plancode_id") ?>)
        <? elseif exists("plancode_pattern") ?>
          text(<? value("plancode_pattern") ?>)
        <? else ?>
          text('All Planner Codes')
        <? endif ?>
        AS plancode,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT item_number,
        (item_descrip1 || ' ' || item_descrip2) as item_descrip,
        pr_status,
        CASE WHEN (pr_order_type='W') THEN ('W/O ' || ( SELECT formatWoNumber(womatl_wo_id)
                                                          FROM womatl
                                                         WHERE (womatl_id=pr_order_id) ) )
             WHEN (pr_order_type='S') THEN ('S/O ' || (SELECT formatSoNumber(pr_order_id)))
             WHEN (pr_order_type='F') THEN ('Planned Order')
             WHEN (pr_order_type='M') THEN 'Manual'
             ELSE 'Other'
        END AS f_type,
        formatDate(pr_duedate) AS f_duedate,
        formatQty(pr_qtyreq) AS f_qtyreq
   FROM pr, itemsite, item
  WHERE ((pr_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (pr_duedate BETWEEN <? value("startDate") ?> and <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("plancode_id") ?>
    AND (itemsite_plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
    AND (itemsite_plancode_id IN (SELECT plancode_id
                                    FROM plancode
                                   WHERE (plancode_code ~ <? value("plancode_pattern") ?>) ) )
 <? endif ?>
 )
 ORDER BY pr_duedate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: QOHByItem
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("showValue") ?>
          text('Unit Cost') AS lbl_unitcost,
          text('Value') AS lbl_value,
          text('Non-Netable Value') AS lbl_nnvalue,
+         text('Cost Method') AS lbl_costmethod,
          <? if exists("useActualCosts") ?>
            text('Showing Actual Costs')
-         <? else ?>
+         <? elseif exists("useStandardCosts") ?>
            text('Showing Standard Costs')
+         <? else ?>
+           text('Showing Posted Costs')
          <? endif ?>
          AS lbl_showvalue
        <? else ?>
          text('') AS lbl_unitcost,
          text('') AS lbl_value,
          text('') AS lbl_nnvalue,
+         text('') AS lbl_costmethod,
          text('') AS lbl_showvalue
        <? endif ?>
 FROM item
 WHERE (item_id=<? value("item_id") ?>);
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT itemsite_id, detail,
        warehous_code,
        formatQty(reorderlevel) AS f_reorderlevel,
        formatQty(qoh) AS f_qoh,
        CASE WHEN (NOT useDefaultLocation(itemsite_id)) THEN 'None'
                  ELSE defaultLocationName(itemsite_id)
        END AS defaultlocation,
        CASE WHEN (itemsite_loccntrl) THEN formatQty(nnqoh)
             ELSE 'N/A'
        END AS f_nnqoh,
        <? if exists("showValue") ?>
          formatCost(cost)
        <? else ?>
          text('')
        <? endif ?>
        AS f_unitcost,
        <? if exists("showValue") ?>
          formatExtPrice(cost * qoh)
        <? else ?>
          text('')
        <? endif ?>
        AS f_value,
        <? if exists("showValue") ?>
          CASE WHEN (itemsite_loccntrl) THEN formatExtPrice(cost * nnqoh)
               ELSE 'N/A'
          END
        <? else ?>
          text('')
        <? endif ?>
        AS f_nonnetvalue,
        cost,
        qoh,
        nnqoh,
        noNeg(qoh) AS r_qoh,
        noNeg(nnqoh) AS r_nnqoh,
        <? if exists("showValue") ?>
          CASE WHEN (itemsite_loccntrl) THEN noNeg(cost * nnqoh)
               ELSE 0
          END
        <? else ?>
          0
        <? endif ?>
        AS r_nonnetvalue,
        <? if exists("showValue") ?>
          noNeg(cost * qoh)
        <? else ?>
          0
        <? endif ?>
-       AS r_value
-FROM ( SELECT itemsite_id,
+       AS r_value,
+       <? if exists("showValue") ?>
+         <? if exists("usePostedCosts") ?>
+           CASE WHEN(itemsite_costmethod='A') THEN text('Average')
+                WHEN(itemsite_costmethod='S') THEN text('Standard')
+                WHEN(itemsite_costmethod='J') THEN text('Job')
+                WHEN(itemsite_costmethod='N') THEN text('None')
+                ELSE text('UNKNOWN')
+           END
+         <? else ?>
+           text('')
+         <? endif ?>
+       <? else ?>
+         text('')
+       <? endif ?>
+       AS f_costmethod
+FROM ( SELECT itemsite_id, itemsite_costmethod,
               itemsite_loccntrl,
               CASE WHEN ((itemsite_loccntrl) OR (itemsite_controlmethod IN ('L', 'S'))) THEN 1
                    ELSE 0
               END AS detail,
               warehous_code,
               CASE WHEN(itemsite_useparams) THEN itemsite_reorderlevel ELSE 0.0 END AS reorderlevel,
               itemsite_qtyonhand AS qoh,
               itemsite_nnqoh AS nnqoh,
               <? if exists("useActualCosts") ?>
                 actcost(item_id)
-              <? else ?>
+              <? elseif exists("useStandardCosts") ?>
                 stdcost(item_id)
+              <? else ?>
+                (itemsite_value / CASE WHEN(itemsite_qtyonhand=0) THEN 1 ELSE itemsite_qtyonhand END)
               <? endif ?>
               AS cost
        FROM itemsite, item, warehous
        WHERE ((itemsite_item_id=item_id)
         AND (itemsite_warehous_id=warehous_id)
         AND (itemsite_active)
         AND (itemsite_item_id=<? value("item_id") ?>)
 <? if exists("warehous_id") ?>
         AND (warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
        )
       ) AS data
 ORDER BY warehous_code;
 
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: QOHByParameterList
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("classcode_id") ?>
          ( SELECT (classcode_code||'-'||classcode_descrip)
              FROM classcode
             WHERE (classcode_id=<? value("classcode_id") ?>) )
        <? elseif exists("classcode_pattern") ?>
          text(<? value("classcode_pattern") ?>)
        <? elseif exists("itemgrp_id") ?>
          ( SELECT (itemgrp_name|| '-'||itemgrp_descrip)
              FROM itemgrp
             WHERE (itemgrp_id=<? value("itemgrp_id") ?>) )
        <? elseif exists("itemgrp_pattern") ?>
          text(<? value("itemgrp_pattern") ?>)
        <? elseif exists("itemgrp") ?>
          text('All Item Groups')
        <? else ?>
          text('')
        <? endif ?>
        AS value,
        <? if exists("classcode") ?>
          text('Class Code:')
        <? elseif exists("classcode_id") ?>
          text('Class Code:')
        <? elseif exists("classcode_pattern") ?>
          text('Class Codes:')
        <? elseif exists("itemgrp") ?>
          text('Item Group:')
        <? elseif exists("itemgrp_id") ?>
          text('Item Group:')
        <? elseif exists("itemgrp_pattern") ?>
          text('Item Groups:')
        <? else ?>
          text('')
        <? endif ?>
        AS label,
        <? if exists("onlyShowPositive") ?>
          text('Only Showing Positive Quantities')
        <? elseif exists("onlyShowNegative") ?>
          text('Only Showing Negative Quantities')
        <? else ?>
          text('Showing All Quantities')
        <? endif ?>
        AS showquantities,
        <? if exists("showValue") ?>
          text('Unit Cost') AS lbl_unitcost,
          text('Value') AS lbl_value,
          text('NN Value') AS lbl_nnvalue,
+         text('Cost Method') AS lbl_costmethod,
        <? else ?>
          text('') AS lbl_unitcost,
          text('') AS lbl_value,
          text('') AS lbl_nnvalue,
+         text('') AS lbl_costmethod,
        <? endif ?>
        <? if exists("showValue") ?>
          <? if exists("useActualCosts") ?>
            text('Showing Actual Costs')
-         <? else ?>
+         <? elseif exists("useStandardCosts") ?>
            text('Showing Standard Costs')
+         <? else ?>
+           text('Showing Posted Costs')
          <? endif ?>
        <? else ?>
          text('')
        <? endif ?>
        AS showvalues;
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT itemsite_id,
        detail,
        item_number,
        item_descrip1,
        item_descrip2,
        uom_name,
        warehous_code,
        formatQty(reorderlevel) AS f_reorderlevel,
        formatQty(qoh) AS f_qoh,
        CASE WHEN (NOT useDefaultLocation(itemsite_id)) THEN 'None'
                  ELSE defaultLocationName(itemsite_id)
        END AS defaultlocation,
        formatQty(nonnetable) AS f_nonnetable,
        <? if exists("showValue") ?>
          formatCost(standardcost)
        <? else ?>
          text('')
        <? endif ?>
        AS f_unitcost,
        <? if exists("showValue") ?>
          formatExtPrice(noNeg(standardcost * qoh))
        <? else ?>
          text('')
        <? endif ?>
        AS f_value,
        <? if exists("showValue") ?>
          CASE WHEN (itemsite_loccntrl) THEN formatExtPrice(noNeg(standardcost * nonnetable))
               ELSE 'N/A'
          END
        <? else ?>
          text('')
        <? endif ?>
        AS f_nonnetvalue,
        standardcost,
        qoh,
        nonnetable,
        noNeg(qoh) AS r_qoh,
        noNeg(nonnetable) AS r_nonnetable,
        <? if exists("showValue") ?>
          noNeg(standardcost * qoh)
        <? else ?>
          0
        <? endif ?>
        AS r_value,
        <? if exists("showValue") ?>
          CASE WHEN (itemsite_loccntrl) THEN noNeg(standardcost * nonnetable)
               ELSE 0
          END
        <? else ?>
          0
        <? endif ?>
-       AS r_nonnetvalue
-FROM ( SELECT itemsite_id,
+       AS r_nonnetvalue,
+       <? if exists("showValue") ?>
+         <? if exists("usePostedCosts") ?>
+           CASE WHEN(itemsite_costmethod='A') THEN text('Average')
+                WHEN(itemsite_costmethod='S') THEN text('Standard')
+                WHEN(itemsite_costmethod='J') THEN text('Job')
+                WHEN(itemsite_costmethod='N') THEN text('None')
+                ELSE text('UNKNOWN')
+           END
+         <? else ?>
+           text('')
+         <? endif ?>
+       <? else ?>
+         text('')
+       <? endif ?>
+       AS f_costmethod
+FROM ( SELECT itemsite_id, itemsite_costmethod,
               item_number,
               item_descrip1, item_descrip2, itemsite_loccntrl,
               warehous_code,
               uom_name,
               CASE WHEN(itemsite_useparams) THEN itemsite_reorderlevel ELSE 0.0 END AS reorderlevel,
               itemsite_qtyonhand AS qoh,
               CASE WHEN ((itemsite_loccntrl) OR (itemsite_controlmethod IN ('L', 'S'))) THEN 1
                    ELSE 0
               END AS detail,
               itemsite_nnqoh AS nonnetable,
               <? if exists("useActualCosts") ?>
                 actcost(itemsite_item_id)
-              <? else ?>
+              <? elseif exists("useStandardCosts") ?>
                 stdcost(itemsite_item_id)
+              <? else ?>
+                (itemsite_value / CASE WHEN(itemsite_qtyonhand=0) THEN 1 ELSE itemsite_qtyonhand END)
               <? endif ?>
               AS standardcost
          FROM itemsite, item, uom, warehous
         WHERE ((itemsite_item_id=item_id)
           AND (item_inv_uom_id=uom_id)
           AND (itemsite_warehous_id=warehous_id)
           AND (itemsite_active)
 <? if exists("classcode_id") ?>
           AND (item_classcode_id=<? value("classcode_id") ?>)
 <? elseif exists("classcode_pattern") ?>
           AND (item_classcode_id IN (SELECT classcode_id
                                        FROM classcode
                                       WHERE (classcode_code ~ <? value("classcode_pattern") ?>) ) )
 <? elseif exists("itemgrp_id") ?>
           AND (item_id IN (SELECT itemgrpitem_item_id FROM itemgrpitem WHERE (itemgrpitem_itemgrp_id=<? value("itemgrp_id") ?>)))
 <? elseif exists("itemgrp_pattern") ?>
           AND (item_id IN (SELECT itemgrpitem_item_id
                              FROM itemgrpitem, itemgrp
                             WHERE ( (itemgrpitem_itemgrp_id=itemgrp_id)
                               AND (itemgrp_name ~ <? value("itemgrp_pattern") ?>) ) ))
 <? elseif exists("itemgrp") ?>
           AND (item_id IN (SELECT DISTINCT itemgrpitem_item_id FROM itemgrpitem))
 <? endif ?>
 <? if exists("onlyShowPositive") ?>
           AND (itemsite_qtyonhand > 0)
 <? elseif exists("onlyShowNegative") ?>
           AND (itemsite_qtyonhand < 0)
 <? endif ?>
 <? if exists("warehous_id") ?>
           AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 ) ) AS data
 ORDER BY warehous_code, item_number;
 
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ReceiptsReturnsByDate
 QUERY: head
 SELECT formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("agentUsername") ?>
        TEXT(<? value("agentUsername" ?>)
        <? else ?>
        TEXT('All Agents')
        <? endif ?>
        AS agentUsername,
        <? if exists("showVariances") ?>
          text('Purch. Cost') AS f_purchcost,
          text('Recv. Cost') AS f_recvcost
        <? else ?>
          text('') AS f_purchcost,
          text('') AS f_recvcost
        <? endif ?>
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT porecv_id, porecv_ponumber,
        vend_name,
        formatDate(porecv_duedate) AS f_scheddate,
        formatDate(porecv_date) AS f_recvdate,
        item_number, item_descrip1, 
        item_descrip2,
        text('Received') AS f_rcvdrtnd,
        formatQty(porecv_qty) AS f_qty,
        <? if exists("showVariances") ?>
          formatCost(porecv_purchcost)
        <? else ?>
          text('')
        <? endif ?>
        AS f_purchcost,
        <? if exists("showVariances") ?>
          CASE WHEN (porecv_recvcost IS NULL) THEN text('N/A')
               ELSE formatCost(porecv_recvcost)
          END
        <? else ?>
          text('')
        <? endif ?>
        AS f_recvcost,
        porecv_date AS sortdate 
 FROM porecv, itemsite, item, vend 
 WHERE ((porecv_itemsite_id=itemsite_id)
  AND (itemsite_item_id=item_id)
  AND (porecv_vend_id=vend_id)
  AND (date(porecv_date) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("agentUsername") ?>
  AND (porecv_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
 )
 UNION SELECT poreject_id, poreject_ponumber,
              vend_name,
              '' AS f_duedate,
              formatDate(poreject_date) AS f_recvdate,
              item_number,
              item_descrip1, item_descrip2,
              text('Returned'),
              formatQty(poreject_qty) AS f_recvqty,
              '' AS f_purchcost,
              '' AS f_recvcost,
              poreject_date AS sortdate
 FROM poreject, itemsite, item, vend
 WHERE ((poreject_itemsite_id=itemsite_id)
  AND (itemsite_item_id=item_id)
  AND (poreject_vend_id=vend_id)
  AND (date(poreject_date) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("agentUsername") ?>
  AND (poreject_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
 )
 ORDER BY sortdate DESC
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ReceiptsReturnsByItem
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("agentUsername") ?>
        TEXT(<? value("agentUsername" ?>)
        <? else ?>
        TEXT('All Agents')
        <? endif ?>
        AS agentUsername,
        <? if exists("showVariances") ?>
          text('Purch. Cost') AS f_purchcost,
          text('Recv. Cost') AS f_recvcost
        <? else ?>
          text('') AS f_purchcost,
          text('') AS f_recvcost
        <? endif ?>
   FROM item
  WHERE (item_id=<? value("item_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT porecv_id, porecv_ponumber, vend_name,
        formatDate(porecv_duedate) as f_scheddate,
        formatDate(porecv_date) as f_recvdate,
        porecv_vend_item_number,
        porecv_vend_item_descrip,
        text('Received') as f_rcvdrtnd,
        formatQty(porecv_qty) as f_qty,
        <? if exists("showVariances") ?>
          formatCost(porecv_purchcost)
        <? else ?>
          text('')
        <? endif ?>
        AS f_purchcost,
        <? if exists("showVariances") ?>
          CASE WHEN (porecv_recvcost IS NULL) THEN text('N/A')
               ELSE formatCost(porecv_recvcost)
          END
        <? else ?>
          text('')
        <? endif ?>
        AS f_recvcost,
        porecv_date AS sortdate
 FROM porecv, vend, itemsite
 WHERE ( (porecv_vend_id=vend_id)
  AND (porecv_itemsite_id=itemsite_id)
  AND (date(porecv_date) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
  AND (itemsite_item_id=<? value("item_id") ?>)
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("agentUsername") ?>
  AND (porecv_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
 )
 UNION SELECT poreject_id, poreject_ponumber, vend_name,
              '',
              formatDate(poreject_date),
              poreject_vend_item_number, poreject_vend_item_descrip, 'Returned',
              formatQty(poreject_qty),
              '',
              '',
              poreject_date AS sortdate
 FROM poreject, vend, itemsite
 WHERE ( (poreject_vend_id=vend_id)
  AND (poreject_itemsite_id=itemsite_id)
  AND (date(poreject_date) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
  AND (itemsite_item_id=<? value("item_id") ?>)
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("agentUsername") ?>
  AND (poreject_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
 )
 ORDER BY sortdate DESC
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ReceiptsReturnsByVendor
 QUERY: head
 SELECT vend_name,
        vend_number,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate,
        <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("agentUsername") ?>
        TEXT(<? value("agentUsername" ?>)
        <? else ?>
        TEXT('All Agents')
        <? endif ?>
        AS agentUsername,
        <? if exists("showVariances") ?>
          text('Purch. Cost') AS f_purchcost,
          text('Recv. Cost') AS f_recvcost
        <? else ?>
          text('') AS f_purchcost,
          text('') AS f_recvcost
        <? endif ?>
 FROM vend
 WHERE (vend_id=<? value("vend_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT porecv_id, porecv_ponumber,
        formatDate(porecv_duedate) as f_scheddate,
        formatDate(porecv_date) as f_recvdate,
        item_number, item_descrip1, item_descrip2,
        text('Received') as f_rcvdrtnd,
        formatQty(porecv_qty) as f_qty,
        <? if exists("showVariances") ?>
          formatCost(porecv_purchcost)
        <? else ?>
          text('')
        <? endif ?>
        AS f_purchcost,
        <? if exists("showVariances") ?>
          CASE WHEN (porecv_recvcost IS NULL) THEN text('Returned')
               ELSE formatCost(porecv_recvcost)
          END
        <? else ?>
          text('')
        <? endif ?>
        AS f_recvcost,
        porecv_date AS sortdate
 FROM porecv, itemsite, item, vend
 WHERE ( (porecv_itemsite_id=itemsite_id)
  AND (itemsite_item_id=item_id)
  AND (porecv_vend_id=<? value("vend_id") ?>)
  AND (date(porecv_date) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("agentUsername") ?>
  AND (porecv_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
 )
 UNION SELECT poreject_id, poreject_ponumber,
              '',
              formatDate(poreject_date),
              item_number, item_descrip1, item_descrip2, 'Returned',
              formatQty(poreject_qty),
              '',
              '',
              poreject_date AS sortdate
 FROM poreject, itemsite, item, vend
 WHERE ( (poreject_itemsite_id=itemsite_id)
  AND (itemsite_item_id=item_id)
  AND (poreject_vend_id=vend_id)
  AND (poreject_vend_id=<? value("vend_id") ?>)
  AND (date(poreject_date) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("agentUsername") ?>
  AND (poreject_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
 )
 ORDER BY sortdate DESC
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: RejectedMaterialByVendor
 QUERY: head
 SELECT vend_number, vend_name,
        <? if exists("warehous_id") ?>
          (select warehous_code
             from warehous
            where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("agentUsername") ?>
        TEXT(<? value("agentUsername" ?>)
        <? else ?>
        TEXT('All Agents')
        <? endif ?>
        AS agentUsername,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate
   FROM vend
  WHERE (vend_id=<? value("vend_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT poreject_id, poreject_ponumber, vend_name,
        formatDate(poreject_date) as f_date,
        poreject_vend_item_number as f_itemnum,
        poreject_vend_item_descrip as f_itemdescrip,
        formatQty(poreject_qty) as f_qty,
        rjctcode_code as f_rejectcode
 FROM poreject, vend, itemsite, rjctcode
 WHERE ( (poreject_posted)
  AND (poreject_vend_id=vend_id)
  AND (poreject_rjctcode_id=rjctcode_id)
  AND (poreject_itemsite_id=itemsite_id)
  AND (vend_id=<? value("vend_id") ?>)
  AND (date(poreject_date) BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("agentUsername") ?>
  AND (poreject_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
  )
 ORDER BY poreject_date DESC;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ReorderExceptionsByPlannerCode
 QUERY: head
 SELECT <? if exists("plancode_id") ?>
          ( SELECT (plancode_code || '-' || plancode_name)
              FROM plancode
             WHERE plancode_id=<? value("plancode_id") ?>)
        <? elseif exists("plancode_pattern") ?>
          text(<? value("plancode_pattern") ?>)
        <? else ?>
          text('All Planner Codes')
        <? endif ?>
        AS plannercode,
        <? if exists("includePlannedOrders") ?>
          formatBoolYN(true)
        <? else ?>
          formatBoolYN(false)
        <? endif ?>
        AS includeplnord,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT warehous_code, item_number, item_descrip1, item_descrip2,
        formatDate(reorderdate) AS f_reorderdate,
        formatQty(reorderlevel) AS f_reorderlevel,
        formatQty((itemsite_qtyonhand - qtyAllocated(itemsite_id, reorderdate) + qtyOrdered(itemsite_id, reorderdate))) AS f_projavail,
        reorderdate 
   FROM ( SELECT itemsite_id,
                 CASE WHEN (item_type IN ('M', 'B', 'T')) THEN 1
                      WHEN (item_type IN ('P', 'O')) THEN 2
                      ELSE 3
                 END AS itemtype,
                 warehous_code, item_number, item_descrip1, item_descrip2,
                 reorderDate(itemsite_id, <? value("lookAheadDays") ?>, <? if exists("includePlannedOrder") ?>true<? else ?>false<? endif ?>) AS reorderdate, itemsite_qtyonhand,
                 reorderlevel 
            FROM ( SELECT itemsite_id, itemsite_item_id, itemsite_warehous_id,
                          itemsite_qtyonhand,
                          CASE WHEN(itemsite_useparams) THEN itemsite_reorderlevel ELSE 0.0 END AS reorderlevel
                     FROM itemsite 
                    WHERE ((true)
 <? if exists("warehous_id") ?>
                      AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("plancode_id") ?>
                      AND (itemsite_plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
                      AND (itemsite_plancode_id IN (SELECT plancode_id
                                                      FROM plancode
                                                     WHERE (plancode_code ~ <? value("plancode_pattern") ?>)))
 <? endif ?>
                          )
                 ) AS itemsitedate, item, warehous
           WHERE ((itemsite_item_id=item_id)
             AND (itemsite_warehous_id=warehous_id))
        ) AS data 
  WHERE (reorderdate IS NOT NULL) 
 ORDER BY reorderdate, item_number;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SalesHistoryByBilltoName
 QUERY: head
 SELECT text(<? value("billToName") ?>) AS billtoname,
        <? if exists("warehous_id") ?>
            (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-           text('All Warehouses')
+           text('All Sites')
        <? endif ?>
          AS warehouse,
        <? if exists("prodcat_id") ?>
            (select (prodcat_code||'-'||prodcat_descrip) from prodcat where prodcat_id=<? value("prodcat_id") ?>)
        <? elseif exists("prodcat_pattern") ?>
            text(<? value("prodcat_pattern") ?>)
        <? else ?>
            text('All Categories')
        <? endif ?>
          AS prodcat,
        formatDate(date(<? value("startDate") ?>)) AS startDate,
        formatDate(date(<? value("endDate") ?>)) AS endDate,
        <? if exists("showPrices") ?>
            text('Unit Price') AS lbl_unitprice,
            text('Total') AS lbl_total
        <? else ?>
            text('') AS lbl_unitprice,
            text('') AS lbl_total
        <? endif ?>
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohist_billtoname as billto,
        cohist_ordernumber AS sonumber,
        cohist_invcnumber AS invnumber,
        formatDate(cohist_orderdate) AS orddate,
        formatDate(cohist_invcdate) AS invcdate,
        item_number, item_descrip1, item_descrip2,
        formatQty(cohist_qtyshipped) AS shipped,
        <? if exists("showPrices") ?>
-       formatPrice(cohist_unitprice) AS unitprice,
-       formatMoney(round(cohist_qtyshipped * cohist_unitprice,2)) AS f_total,
+       formatPrice(currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate)) AS unitprice,
+       formatMoney(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)) AS f_total,
        <? else ?>
        '' AS unitprice,
        '' AS f_total,
        <? endif ?>
-       round(cohist_qtyshipped * cohist_unitprice,2) AS total
+       round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2) AS total
   FROM cohist, itemsite, item
  WHERE ((cohist_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
    AND (UPPER(cohist_billtoname) ~ UPPER(<? value("billToName") ?>))
 <? if exists("prodcat_id") ?>
    AND (item_prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (item_prodcat_id IN (SELECT prodcat_id FROM prodcat WHERE (prodcat_code ~ <? value("prodcat_pattern") ?>)))
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY cohist_invcdate, cohist_billtoname, item_number;
       
 --------------------------------------------------------------------
   
 QUERY: showPrices
 SELECT TRUE
  WHERE (TRUE =
 <? if exists("showPrices") ?>
     TRUE
 <? else ?>
     FALSE
 <? endif ?>
  );
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SalesHistoryByCustomer
 QUERY: head
 SELECT cust_name,
        <? if exists("warehous_id") ?>
            (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-           text('All Warehouses')
+           text('All Sites')
        <? endif ?>
          AS warehouse,
        <? if exists("prodcat_id") ?>
            (select (prodcat_code||'-'||prodcat_descrip) from prodcat where prodcat_id=<? value("prodcat_id") ?>)
        <? elseif exists("prodcat_pattern") ?>
            text(<? value("prodcat_pattern") ?>)
        <? else ?>
            text('All Categories')
        <? endif ?>
          AS prodcat,
        formatDate(date(<? value("startDate") ?>)) AS startDate,
        formatDate(date(<? value("endDate") ?>)) AS endDate,
        <? if exists("showPrices") ?>
            text('Unit Price') AS lbl_unitprice,
            text('Total') AS lbl_total
        <? else ?>
            text('') AS lbl_unitprice,
            text('') AS lbl_total
        <? endif ?>
   FROM cust
  WHERE (cust_id=<? value("cust_id") ?>);
     
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohist_ordernumber AS sonumber,
        cohist_invcnumber AS invnumber,
        formatDate(cohist_orderdate) AS orddate,
        formatDate(cohist_invcdate, 'Return') AS invcdate,
        item_number, item_descrip1, item_descrip2,
        formatQty(cohist_qtyshipped) AS shipped,
        <? if exists("showPrices") ?>
-       formatPrice(cohist_unitprice) AS unitprice,
-       formatMoney(round(cohist_qtyshipped * cohist_unitprice,2)) AS f_total,
+       formatPrice(currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate)) AS unitprice,
+       formatMoney(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)) AS f_total,
        <? else ?>
        '' AS unitprice,
        '' AS f_total,
        <? endif ?>
-       round(cohist_qtyshipped * cohist_unitprice,2) AS total
+       round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2) AS total
   FROM cohist, itemsite, item, prodcat 
  WHERE ((cohist_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (item_prodcat_id=prodcat_id)
    AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("prodcat_id") ?>
    AND (prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (prodcat_code ~ <? value("prodcat_pattern") ?>)
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
    AND (cohist_cust_id=<? value("cust_id") ?>) )
 ORDER BY cohist_shipdate, item_number;
       
 --------------------------------------------------------------------
   
 QUERY: showPrices
 SELECT TRUE
  WHERE (TRUE =
 <? if exists("showPrices") ?>
     TRUE
 <? else ?>
     FALSE
 <? endif ?>
  );
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SalesHistoryByItem
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        uom_name,
        <? if exists("warehous_id") ?>
            (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-           text('All Warehouses')
+           text('All Sites')
        <? endif ?>
          AS warehouse,
        formatDate(date(<? value("startDate") ?>)) AS startDate,
        formatDate(date(<? value("endDate") ?>)) AS endDate,
        <? if exists("showPrices") ?>
            text('Unit Price') AS lbl_unitprice,
            text('Total') AS lbl_total,
        <? else ?>
            text('') AS lbl_unitprice,
            text('') AS lbl_total,
        <? endif ?>
        <? if exists("custtype_id") ?>
          ( SELECT (custtype_code||'-'||custtype_descrip)
              FROM custtype
             WHERE (custtype_id=<? value("custtype_id") ?>) )
        <? elseif exists("custtype_pattern") ?>
          text(<? value("custtype_pattern") ?>)
        <? else ?>
          text('All Customer Types')
        <? endif ?>
        AS custtype
   FROM item JOIN uom ON (item_inv_uom_id=uom_id)
  WHERE (item_id=<? value("item_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cust_name, salesrep_name,
        cohist_ordernumber AS sonumber,
        formatDate(cohist_orderdate) AS orddate,
        CASE WHEN (cohist_invcnumber='-1') THEN 'Credit'
             ELSE text(cohist_invcnumber)
        END AS invnumber,
        formatDate(cohist_invcdate, 'Return') AS invcdate,
        formatQty(cohist_qtyshipped) AS f_shipped,
        cohist_qtyshipped as shipped,
        <? if exists("showPrices") ?>
-       formatPrice(cohist_unitprice) AS unitprice,
-       formatMoney(round(cohist_qtyshipped * cohist_unitprice,2)) AS f_total,
-       round(cohist_qtyshipped * cohist_unitprice,2) AS total
+       formatPrice(currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate)) AS unitprice,
+       formatMoney(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)) AS f_total,
+       round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2) AS total
        <? else ?>
        '' AS unitprice,
        '' AS f_total,
        0 AS total
        <? endif ?>
   FROM cohist, cust, salesrep, itemsite, item 
  WHERE ((cohist_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (cohist_cust_id=cust_id)
    AND (cohist_salesrep_id=salesrep_id)
    AND (itemsite_item_id=<? value("item_id") ?>)
    AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("custtype_id") ?>
    AND (cust_custtype_id=<? value("custtype_id") ?>)
 <? elseif exists("custtype_pattern") ?>
    AND (cust_custtype_id IN (SELECT custtype_id
                                FROM custtype
                               WHERE (custtype_code ~ <? value("custtype_pattern") ?>)))
 <? endif ?>
  ) 
 ORDER BY cohist_invcdate, cust_number;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SalesHistoryByParameterList
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("prodcat_id") ?>
          ( SELECT (prodcat_code||'-'||prodcat_descrip)
              FROM prodcat
             WHERE (prodcat_id=<? value("prodcat_id") ?>) )
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? elseif exists("custtype_id") ?>
          ( SELECT (custtype_code || '-' || custtype_descrip)
              FROM custtype
             WHERE (custtype_id=<? value("custtype_id") ?>) )
        <? elseif exists("custtype_pattern") ?>
          text(<? value("custtype_pattern") ?>)
        <? elseif exists("custgrp_id") ?>
          ( SELECT (custgrp_name || '-' || custgrp_descrip)
              FROM custgrp
             WHERE (custgrp_id=<? value("custgrp_id") ?>) )
        <? elseif exists("custgrp_pattern") ?>
          text(<? value("custgrp_pattern") ?>)
        <? else ?>
          text('')
        <? endif ?>
        AS f_value,
        <? if reExists("prodcat.*") ?>
          text('Product Categories:')
        <? elseif reExists("custtype.*") ?>
          text('Customer Types:')
        <? elseif reExists("custgrp.*") ?>
          text('Customer Groups:')
        <? else ?>
          text('')
        <? endif ?>
        AS f_label,
        formatDate(date(<? value("startDate") ?>)) AS startDate,
        formatDate(date(<? value("endDate") ?>)) AS endDate,
        <? if exists("showPrices") ?>
            text('Unit Price') AS lbl_unitprice,
            text('Total') AS lbl_total
        <? else ?>
            text('') AS lbl_unitprice,
            text('') AS lbl_total
        <? endif ?>   
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohist_ordernumber AS sonumber,
        cohist_invcnumber AS invnumber,
        formatDate(cohist_orderdate) AS orddate,
        formatDate(cohist_invcdate) AS invcdate,
        item_number, item_descrip1, item_descrip2,
        formatQty(cohist_qtyshipped) AS shipped,
        <? if exists("showPrices") ?>
-       formatPrice(cohist_unitprice) AS unitprice,
-       formatMoney(round(cohist_qtyshipped * cohist_unitprice,2)) AS f_total,
+       formatPrice(currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate)) AS unitprice,
+       formatMoney(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)) AS f_total,
        <? else ?>
        '' AS unitprice,
        '' AS f_total,
        <? endif ?>
-       round(cohist_qtyshipped * cohist_unitprice,2)  AS total
+       round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)  AS total
   FROM cohist, itemsite, item, cust 
  WHERE ((cohist_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (cohist_cust_id=cust_id)
    AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("prodcat_id") ?>
    AND (item_prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (item_prodcat_id IN (SELECT prodcat_id FROM prodcat WHERE (prodcat_code ~ <? value("prodcat_pattern") ?>)))
 <? elseif exists("custtype_id") ?>
    AND (cust_custtype_id=<? value("custtype_id") ?>)
 <? elseif exists("custtype_pattern") ?>
    AND (cust_custtype_id IN (SELECT custtype_id FROM custtype WHERE (custtype_code ~ <? value("custtype_pattern") ?>)))
 <? elseif exists("custgrp_id") ?>
    AND (cust_id IN (SELECT custgrpitem_cust_id FROM custgrpitem WHERE (custgrpitem_id=<? value("custgrp_id") ?>)))
 <? elseif exists("custgrp_pattern") ?>
    AND (cust_id IN (SELECT custgrpitem_cust_id FROM custgrp, custgrpitem WHERE ((custgrpitem_custgrp_id=custgrp_id) AND (custgrp_name ~ <? value("custgrp_pattern") ?>))))
 <? elseif exists("custgrp") ?>
   AND (cust_id IN (SELECT DISTINCT custgrpitem_cust_id FROM custgrpitem))
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
  )
 ORDER BY cohist_invcdate, item_number;      
 --------------------------------------------------------------------
   
 QUERY: showPrices
 SELECT TRUE
  WHERE (TRUE=
 <? if exists("showPrices") ?>
     TRUE
 <? else ?>
     FALSE
 <? endif ?>
  );
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SalesHistoryBySalesRep
 QUERY: head
 SELECT salesrep_name,
        <? if exists("warehous_id") ?>
            (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-           text('All Warehouses')
+           text('All Sites')
        <? endif ?>
          AS warehouse,
        <? if exists("prodcat_id") ?>
            (select (prodcat_code||'-'||prodcat_descrip) from prodcat where prodcat_id=<? value("prodcat_id") ?>)
        <? elseif exists("prodcat_pattern") ?>
            text(<? value("prodcat_pattern") ?>)
        <? else ?>
            text('All Categories')
        <? endif ?>
          AS prodcat,
        formatDate(date(<? value("startDate") ?>)) AS startDate,
        formatDate(date(<? value("endDate") ?>)) AS endDate,
        <? if exists("showPrices") ?>
            text('UnitPrice') AS lbl_unitprice,
            text('Total') AS lbl_total
        <? else ?>
            text('') AS lbl_unitprice,
            text('') AS lbl_total
        <? endif ?>
   FROM salesrep
  WHERE (salesrep_id=<? value("salesrep_id") ?>);
     
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cust_name,
        cohist_ordernumber as sonumber,
        CASE WHEN (cohist_invcnumber='-1') THEN 'Credit'
             ELSE text(cohist_invcnumber)
        END as invnumber,
        formatDate(cohist_orderdate) AS orddate, formatDate(cohist_invcdate, 'Return') AS invcdate,
        item_number, uom_name, item_descrip1, item_descrip2,
        formatQty(cohist_qtyshipped) AS shipped,
        <? if exists("showPrices") ?>
-       formatPrice(cohist_unitprice) AS unitprice,
-       formatMoney(round(cohist_qtyshipped * cohist_unitprice,2)) AS f_total,
+       formatPrice(currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate)) AS unitprice,
+       formatMoney(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)) AS f_total,
        <? else ?>
        '' AS unitprice,
        '' AS f_total,
        <? endif ?>
-       round(cohist_qtyshipped * cohist_unitprice,2) AS total
+       round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2) AS total
   FROM cohist, cust, itemsite, item, uom, prodcat 
  WHERE ((cohist_itemsite_id=itemsite_id)
    AND (cohist_cust_id=cust_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (item_prodcat_id=prodcat_id)
    AND (cohist_salesrep_id=<? value("salesrep_id") ?>)
    AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("prodcat_id") ?>
    AND (prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (prodcat_code ~ <? value("prodcat_pattern") ?>)
 <? endif ?>
  )
 ORDER BY cohist_invcdate, item_number;
 --------------------------------------------------------------------
   
 QUERY: showPrices
 SELECT TRUE
  WHERE (TRUE =
 <? if exists("showPrices") ?>
     TRUE
 <? else ?>
     FALSE
 <? endif ?>
  );
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SalesHistoryByShipTo
 QUERY: head
 SELECT cust_name,
        shipto_name,
        <? if exists("warehous_id") ?>
            (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-           text('All Warehouses')
+           text('All Sites')
        <? endif ?>
          AS warehouse,
        <? if exists("prodcat_id") ?>
            (select (prodcat_code||'-'||prodcat_descrip) from prodcat where prodcat_id=<? value("prodcat_id") ?>)
        <? elseif exists("prodcat_pattern") ?>
            text(<? value("prodcat_pattern") ?>)
        <? else ?>
            text('All Categories')
        <? endif ?>
          AS prodcat,
        formatDate(date(<? value("startDate") ?>)) AS startDate,
        formatDate(date(<? value("endDate") ?>)) AS endDate,
        <? if exists("showPrices") ?>
        text('Unit Price') AS lbl_unitprice,
        text('Total') AS lbl_total
        <? else ?>
        text('') AS lbl_unitprice,
        text('') AS lbl_total
        <? endif ?>
   FROM shipto, cust
  WHERE ((shipto_cust_id=cust_id)
    AND (shipto_id=<? value("shipto_id") ?>) );
     
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohist_ordernumber AS sonumber,
        cohist_invcnumber AS invnumber,
        formatDate(cohist_orderdate) AS orddate,
        formatDate(cohist_invcdate, 'Return') AS invcdate,
        item_number, item_descrip1, item_descrip2,
        formatQty(cohist_qtyshipped) AS shipped,
        <? if exists("showPrices") ?>
-       formatPrice(cohist_unitprice) AS unitprice,
-       formatMoney(round(cohist_qtyshipped * cohist_unitprice,2)) AS f_total,
+       formatPrice(currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate)) AS unitprice,
+       formatMoney(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)) AS f_total,
        <? else ?>
        '' AS unitprice,
        '' AS f_total,
        <? endif ?>
-       round(cohist_qtyshipped * cohist_unitprice,2) AS total
+       round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2) AS total
   FROM cohist, itemsite, item, prodcat 
  WHERE ((cohist_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (item_prodcat_id=prodcat_id)
    AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("prodcat_id") ?>
    AND (prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (prodcat_code ~ <? value("prodcat_pattern") ?>)
 <? endif?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
    AND (cohist_shipto_id=<? value("shipto_id") ?>)
  )
 ORDER BY cohist_invcdate, item_number;
       
 --------------------------------------------------------------------
   
 QUERY: showPrices
 SELECT TRUE
  WHERE (TRUE =
 <? if exists("showPrices") ?>
     TRUE
 <? else ?>
     FALSE
 <? endif ?>
  );
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SalesJournal
 QUERY: detail
 SELECT cust_number, cust_name, aropen_docnumber, aropen_doctype, formatDate(aropen_docdate) AS docdate,
-       aropen_applyto, formatExtPrice(aropen_amount) AS openamount, aropen_ponumber,
+       aropen_applyto, formatExtPrice(currtobase(aropen_curr_id,aropen_amount,aropen_docdate)) AS openamount, aropen_ponumber,
        (formatGLAccount(accnt_id)|| ' - ' || accnt_descrip) AS accntnumber,
        CASE WHEN (gltrans_amount < 0) THEN formatExtPrice(ABS(gltrans_amount))
             ELSE ''
        END AS debit,
        CASE WHEN (gltrans_amount > 0) THEN formatExtPrice(gltrans_amount)
             ELSE ''
        END AS credit
 FROM aropen, gltrans, cust, accnt
 WHERE ( (aropen_cust_id=cust_id)
  AND (aropen_docnumber=gltrans_docnumber)
  AND (aropen_doctype='I')
  AND (gltrans_doctype='IN')
  AND (gltrans_accnt_id=accnt_id)
  AND (gltrans_journalnumber=<? value("journalNumber") ?>)
  AND (aropen_journalnumber=<? value("journalNumber") ?>) )
 ORDER BY aropen_docnumber, gltrans_amount, accnt_number;
     
 --------------------------------------------------------------------
   
 QUERY: distributions
 SELECT (formatGLAccount(accnt_id) || ' - ' || accnt_descrip) AS accntnumber,
        formatExtPrice(SUM(ABS(gltrans_amount))) AS debit,
        '' AS credit
 FROM gltrans, accnt
 WHERE ( (gltrans_accnt_id=accnt_id)
  AND (gltrans_amount < 0)
  AND (gltrans_journalnumber=<? value("journalNumber") ?>) )
 GROUP BY accntnumber
 
 UNION
 SELECT (formatGLAccount(accnt_id) || ' - ' || accnt_descrip) AS accntnumber,
        '' AS debit,
        formatExtPrice(SUM(gltrans_amount)) AS credit
 FROM gltrans, accnt
 WHERE ( (gltrans_accnt_id=accnt_id)
  AND (gltrans_amount > 0)
  AND (gltrans_journalnumber=<? value("journalNumber") ?>) )
 GROUP BY accntnumber; 
 --------------------------------------------------------------------
   
 QUERY: totaldocsales
-SELECT formatExtPrice(SUM(COALESCE(aropen_amount, 0))) AS amount
+SELECT formatExtPrice(SUM(COALESCE(currtobase(aropen_curr_id,aropen_amount,aropen_docdate), 0))) AS amount
 FROM aropen
 WHERE ( (aropen_doctype='I')
  AND (aropen_journalnumber=<? value("journalNumber") ?>) );
     
 --------------------------------------------------------------------
   
 QUERY: totaldebit
 SELECT formatExtPrice(SUM(ABS(gltrans_amount))) AS total
 FROM gltrans
 WHERE ( (gltrans_amount < 0)
  AND (gltrans_journalnumber=<? value("journalNumber") ?>) );
     
 --------------------------------------------------------------------
   
 QUERY: totalcredit
 SELECT formatExtPrice(SUM(gltrans_amount)) AS total
 FROM gltrans
 WHERE ( (gltrans_amount > 0)
  AND (gltrans_journalnumber=<? value("journalNumber") ?>) );
     
 --------------------------------------------------------------------
   
 QUERY: head
 SELECT (jrnluse_use || TEXT(jrnluse_number)) AS f_number,
        formatDate(jrnluse_date) AS f_date
 FROM jrnluse
 WHERE ((jrnluse_use='AR-IN')
   AND (jrnluse_number=<? value("journalNumber") ?>));
 
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SalesJournalByDate
 QUERY: detail
 SELECT cust_number, cust_name, aropen_docnumber, aropen_doctype, formatDate(aropen_docdate) AS docdate,
-               aropen_applyto, formatExtPrice(aropen_amount) AS openamount, aropen_ponumber,
+               aropen_applyto, formatExtPrice(currtobase(aropen_curr_id,aropen_amount,aropen_docdate)) AS openamount, aropen_ponumber,
                accnt_number, accnt_descrip,
                CASE WHEN (gltrans_amount < 0) THEN formatExtPrice(ABS(gltrans_amount))
                          ELSE ''
                END AS debit,
                CASE WHEN (gltrans_amount > 0) THEN formatExtPrice(gltrans_amount)
                          ELSE ''
                END AS credit,
                CASE WHEN (aropen_doctype IN ('C', 'R')) THEN 'CR'
                          WHEN (aropen_doctype='I') THEN '  '
                END AS docsence
 FROM aropen, gltrans, cust, accnt
 WHERE ((aropen_cust_id=cust_id)
  AND (aropen_docnumber=gltrans_docnumber)
  AND ( ( (aropen_doctype='I') AND (gltrans_doctype='IN') ) OR ( (aropen_doctype IN ('C', 'R')) AND (gltrans_doctype='CM') ) )
  AND (gltrans_accnt_id=accnt_id)
  AND (gltrans_date BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
  AND (gltrans_source='S/O')
  AND (aropen_docdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>) )
 ORDER BY aropen_docnumber, gltrans_amount, accnt_number;
     
 --------------------------------------------------------------------
   
 QUERY: distributions
 SELECT 1 as gid, accnt_number, accnt_descrip,
          formatExtPrice(SUM(ABS(gltrans_amount))) AS debit,
          '' AS credit
 FROM gltrans, accnt
 WHERE ((gltrans_accnt_id=accnt_id)
  AND (gltrans_amount < 0)
  AND (gltrans_date BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
  AND (gltrans_source='S/O'))
 GROUP BY accnt_number, accnt_descrip
 UNION SELECT 1 as gid, accnt_number, accnt_descrip,
                            '' AS debit,
                            formatExtPrice(SUM(gltrans_amount)) AS credit
 FROM gltrans, accnt
 WHERE ((gltrans_accnt_id=accnt_id)
  AND (gltrans_amount >= 0)
  AND (gltrans_date BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
  AND (gltrans_source='S/O'))
 GROUP BY accnt_number, accnt_descrip; 
 --------------------------------------------------------------------
   
 QUERY: totaldocsales
-SELECT formatExtPrice(SUM(COALESCE(aropen_amount, 0))) AS amount
+SELECT formatExtPrice(SUM(COALESCE(currtobase(aropen_curr_id,aropen_amount,aropen_docdate), 0))) AS amount
 FROM aropen
 WHERE ((aropen_doctype='I')
  AND (aropen_docdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>));
     
 --------------------------------------------------------------------
   
 QUERY: totaldoccredit
-SELECT formatExtPrice(SUM(COALESCE(aropen_amount, 0))) AS amount
+SELECT formatExtPrice(SUM(COALESCE(currtobase(aropen_curr_id,aropen_amount,aropen_docdate), 0))) AS amount
 FROM aropen
 WHERE ((aropen_doctype IN ('C', 'R'))
  AND (aropen_docdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>));
     
 --------------------------------------------------------------------
   
 QUERY: foot
-SELECT formatExtPrice(SUM( CASE WHEN (aropen_doctype IN ('C', 'R')) THEN (aropen_amount * -1)
-                                                           WHEN (aropen_doctype='I') THEN (aropen_amount)
+SELECT formatExtPrice(SUM( CASE WHEN (aropen_doctype IN ('C', 'R')) THEN (currtobase(aropen_curr_id,aropen_amount,aropen_docdate) * -1)
+                                                           WHEN (aropen_doctype='I') THEN (currtobase(aropen_curr_id,aropen_amount,aropen_docdate))
                                                  END )) AS totalamount
 FROM aropen
 WHERE (aropen_docdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>);
     
 --------------------------------------------------------------------
   
 QUERY: totaldebit
 SELECT formatExtPrice(SUM(ABS(gltrans_amount))) AS total
 FROM gltrans
 WHERE ((gltrans_amount < 0)
  AND (gltrans_source='S/O')
  AND (gltrans_date BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>));
     
 --------------------------------------------------------------------
   
 QUERY: totalcredit
 SELECT formatExtPrice(SUM(gltrans_amount)) AS total
 FROM gltrans
 WHERE ((gltrans_amount > 0)
  AND (gltrans_source='S/O')
  AND (gltrans_date BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>));
     
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SequencedBOM
 QUERY: head
 SELECT item_number,
-       item_invuom,
+       uom_name AS item_invuom,
        item_descrip1,
        item_descrip2
-  FROM item
- WHERE (item_id=<? value("item_id") ?>);
+  FROM item, uom
+ WHERE ((item_id=<? value("item_id") ?>)
+ AND (item_inv_uom_id=uom_id));
     
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT text(booitem_seqnumber) AS booseqnumber, bomitem_seqnumber,
-       item_number, item_invuom, item_descrip1, item_descrip2,
+       item_number, uom_name AS item_invuom, item_descrip1, item_descrip2,
        formatQtyPer(bomitem_qtyper) AS qtyper,
        formatScrap(bomitem_scrap) AS scrap,
        formatQtyPer(bomitem_qtyper + (1 * bomitem_scrap)) AS qtyreq,
        formatDate(bomitem_effective, 'Always') AS effective,
        formatDate(bomitem_expires, 'Never') AS expires,
        formatBoolYN(bomitem_createwo) AS createchild,
        CASE WHEN (bomitem_issuemethod='S') THEN 'Push'
             WHEN (bomitem_issuemethod='L') THEN 'Pull'
             WHEN (bomitem_issuemethod='M') THEN 'Mixed'
             ELSE 'Special'
        END AS issuemethod
-  FROM booitem(<? value("item_id") ?>), bomitem(<? value("item_id") ?>,<? value("revision_id") ?>), item
+  FROM booitem(<? value("item_id") ?>), bomitem(<? value("item_id") ?>,<? value("revision_id") ?>), item, uom
  WHERE ((bomitem_item_id=item_id)
    AND (bomitem_booitem_seq_id=booitem_seq_id)
+   AND (item_inv_uom_id=uom_id)
 <? if not exists("showExpired") ?>
    AND (bomitem_expires > CURRENT_DATE)
 <? endif ?>
 <? if not exists("showFuture") ?>
    AND (bomitem_effective <= CURRENT_DATE)
 <? endif ?>
 )
 UNION
 SELECT text('') AS booseqnumber, bomitem_seqnumber,
-       item_number, item_invuom, item_descrip1, item_descrip2,
+       item_number, uom_name AS item_invuom, item_descrip1, item_descrip2,
        formatQtyPer(bomitem_qtyper) AS qtyper,
        formatScrap(bomitem_scrap) AS scrap,
        formatQtyPer(bomitem_qtyper + (1 * bomitem_scrap)) AS qtyreq,
        formatDate(bomitem_effective, 'Always') AS effective,
        formatDate(bomitem_expires, 'Never') AS expires,
        formatBoolYN(bomitem_createwo) AS createchild,
        CASE WHEN (bomitem_issuemethod='S') THEN 'Push'
             WHEN (bomitem_issuemethod='L') THEN 'Pull'
             WHEN (bomitem_issuemethod='M') THEN 'Mixed'
             ELSE 'Special'
        END AS issuemethod
-  FROM bomitem(<? value("item_id") ?>,<? value("revision_id") ?>), item
+  FROM bomitem(<? value("item_id") ?>,<? value("revision_id") ?>), item, uom
  WHERE ((bomitem_item_id=item_id)
    AND (bomitem_booitem_seq_id=-1)
+   AND (item_inv_uom_id=uom_id)
 <? if not exists("showExpired") ?>
    AND (bomitem_expires > CURRENT_DATE)
 <? endif ?>
 <? if not exists("showFuture") ?>
    AND (bomitem_effective <= CURRENT_DATE)
 <? endif ?>
 )
 ORDER BY booseqnumber, bomitem_seqnumber;
 
 --------------------------------------------------------------------
   
 QUERY: bomhead
 SELECT bomhead_docnum, bomhead_revision,
 formatDate(bomhead_revisiondate) AS f_revisiondate
 FROM bomhead
 WHERE ((bomhead_item_id=<? value("item_id") ?>)
 AND (bomhead_rev_id=<? value("revision_id") ?>));
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SingleLevelBOM
 QUERY: head
-SELECT item_number, item_invuom, item_descrip1, item_descrip2
-FROM item
-WHERE (item_id=<? value("item_id") ?>);
+SELECT item_number, uom_name AS item_invuom, item_descrip1, item_descrip2
+FROM item, uom
+WHERE ((item_id=<? value("item_id") ?>)
+AND (item_inv_uom_id=uom_id));
     
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT bomitem_seqnumber, item_number,
-       item_invuom, item_descrip1, item_descrip2,
+       uom_name AS item_invuom, item_descrip1, item_descrip2,
        formatBoolYN(bomitem_createwo) AS createchild,
        CASE WHEN (bomitem_issuemethod='S') THEN 'Push'
             WHEN (bomitem_issuemethod='L') THEN 'Pull'
             WHEN (bomitem_issuemethod='M') THEN 'Mixed'
             ELSE 'Special'
        END AS issuemethod,
-       formatQtyPer(bomitem_qtyper) AS qtyper,
+       formatQtyPer(itemuomtouom(bomitem_item_id, bomitem_uom_id, NULL, bomitem_qtyper)) AS qtyper,
        formatScrap(bomitem_scrap) AS scrap,
-       formatQtyPer(bomitem_qtyper + (1 * bomitem_scrap)) AS qtyreq,
-       formatDate(bomitem_effective, 'Always') AS effective,
-       formatDate(bomitem_expires, 'Never') AS expires,
+       formatQtyPer(itemuomtouom(bomitem_item_id, bomitem_uom_id, NULL, bomitem_qtyper) * (1 + bomitem_scrap)) AS qtyreq,
+       formatDate(bomitem_effective, <? value("always") ?>) AS effective,
+       formatDate(bomitem_expires, <? value("never") ?>) AS expires,
        bomitem_ecn
 <? if exists("revision_id") ?>
   FROM bomitem(<? value("item_id") ?>,<? value("revision_id") ?>)
 <? else ?>
   FROM bomitem(<? value("item_id") ?>)
 <? endif ?>
-, item
+, item, uom
 WHERE ((bomitem_item_id=item_id)
-
+AND (item_inv_uom_id=uom_id)
 <? if exists("expiredDays") ?>
  AND (bomitem_expires > (CURRENT_DATE - <? value("expiredDays") ?>))
 <? else ?>
  AND (bomitem_expires > CURRENT_DATE)
 <? endif ?>
 
 <? if exists("effectiveDays") ?>
  AND (bomitem_effective <= (CURRENT_DATE + <? value("effectiveDays") ?>))
 <? else ?>
  AND (bomitem_effective <= CURRENT_DATE)
 <? endif ?>
 
 )
 ORDER BY bomitem_seqnumber, bomitem_effective;
 
 --------------------------------------------------------------------
   
 QUERY: bomhead
 SELECT bomhead_docnum, bomhead_revision,
        formatDate(bomhead_revisiondate) AS f_revisiondate
 FROM bomhead
 WHERE ((bomhead_item_id=<? value("item_id") ?>)
 <? if exists("revision_id") ?>
 AND (bomhead_rev_id=<? value("revision_id") ?>)
 <? else ?>
 AND (bomhead_rev_id=getActiveRevId('BOM',<? value("item_id") ?>))
 <? endif ?>
 );
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SlowMovingInventoryByClassCode
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          (SELECT warehous_code
             FROM warehous
            WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("classcode_id") ?>
          (SELECT (classcode_code || '-' || classcode_descrip)
             FROM classcode
            WHERE (classcode_id=<? value("classcode_id") ?>) )
        <? elseif exists("classcode_pattern") ?>
          text(<? value("classcode_pattern") ?>)
        <? else ?>
          text('All Class Codes')
        <? endif ?>
        AS classcode,
        <? if exists("showValue") ?>
            <? if exists("useActualCosts") ?>
              text('Show Inventory Value with Actual Costs')
            <? else ?>
              text('Show Inventory Value with Standard Costs')
            <? endif ?>
            AS showvalues,
            text('Unit Cost') AS f_unitcost,
            text('Value') AS f_value,
        <? else ?>
            text('') AS showvalues,
            text('') AS f_unitcost,
            text('') AS f_value,
        <? endif ?>
        formatDate(<? value("cutoffDate") ?>) AS f_cutoff;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT warehous_code,
        item_number,
        item_descrip1,
        item_descrip2,
        uom_name,
        formatQty(itemsite_qtyonhand) AS f_qoh,
        formatDate(itemsite_datelastused) AS f_datelastused,
        <? if exists("showValue") ?>
          formatCost(cost)
        <? else ?>
          text('')
        <? endif ?>
        AS f_unitcost,
        noNeg(cost * itemsite_qtyonhand) AS value,
        <? if exists("showValue") ?>
          formatExtPrice(noNeg(cost * itemsite_qtyonhand))
        <? else ?>
          text('')
        <? endif ?>
        AS f_value
   FROM ( SELECT itemsite_id,
                 warehous_code,
                 item_number,
                 item_descrip1,
                 item_descrip2, uom_name,
                 itemsite_qtyonhand,
                 itemsite_datelastused,
                 <? if exists("useActualCosts") ?>
                   actcost(itemsite_item_id)
                 <? else ?>
                   stdcost(itemsite_item_id)
                 <? endif ?>
                 AS cost
            FROM itemsite, item, warehous, uom
           WHERE ((itemsite_item_id=item_id)
             AND (item_inv_uom_id=uom_id)
             AND (itemsite_warehous_id=warehous_id)
             AND (itemsite_active)
             AND (itemsite_datelastused < <? value("cutoffDate") ?>)
 <? if exists("warehous_id") ?>
             AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("classcode_id") ?>
             AND (item_classcode_id=<? value("classcode_id") ?>)
 <? elseif exists("classcode_pattern") ?>
             AND (item_classcode_id IN (SELECT classcode_id
                                          FROM classcode
                                         WHERE classcode_code ~ <? value("classcode_pattern") ?>) )
 <? endif ?>
                 )
        ) AS data
 ORDER BY warehous_code,
 <? if exists("orderByInventoryValue") ?>
   value DESC
 <? elseif exists("orderByDateLastUsed") ?>
   itemsite_datelastused
 <? else ?>
   item_number
 <? endif ?>
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: 
 QUERY: head
 SELECT cosmisc_shipvia, formatDate(cosmisc_shipdate) AS shipdate,
                 cust_name, cust_number, cohead_number, cohead_fob, cohead_custponumber,
                 warehous_descrip, warehous_addr1, warehous_addr2, warehous_addr3, warehous_addr4, warehous_fob,
                 cohead_shiptoname, cohead_shiptoaddress1, cohead_shiptoaddress2, cohead_shiptoaddress3,
                 (cohead_shiptocity || ' ' || cohead_shiptostate || ' ' || cohead_shiptozipcode) AS shiptocitystatezip,
                 cohead_shiptophone
          FROM cosmisc, cohead, warehous, cust
          WHERE ((cosmisc_cohead_id=cohead_id)
           AND (cohead_cust_id=cust_id)
           AND (cohead_warehous_id=warehous_id)
           AND (cosmisc_id=%1));
 --------------------------------------------------------------------
   
 QUERY: detail
-SELECT coitem_linenumber, formatQty(SUM(coship_qty)) AS invqty, uom_name, roundUp(SUM(coship_qty) / item_shipinvrat)::integer AS shipqty,
-                item_shipuom, item_number, item_descrip1, item_descrip2,
+SELECT coitem_linenumber, formatQty(SUM(coship_qty)) AS invqty, uom_name, roundUp(SUM(coship_qty) / itemuomratiobytype(item_id, 'Selling'))::integer AS shipqty,
+                itemsellinguom(item_id) AS shipuom, item_number, item_descrip1, item_descrip2,
                 formatQty(SUM(coship_qty) * item_prodweight) AS netweight,
                 formatQty(SUM(coship_qty) * (item_prodweight + item_packweight)) AS grossweight
          FROM coship, coitem, itemsite, item, uom
          WHERE ((coship_coitem_id=coitem_id)
           AND (coitem_itemsite_id=itemsite_id)
           AND (itemsite_item_id=item_id)
           AND (item_inv_uom_id=uom_id)
           AND (coship_cosmisc_id=%1))
-         GROUP BY coitem_linenumber, item_number, uom_name, item_shipinvrat, item_shipuom,
+         GROUP BY coitem_linenumber, item_number, uom_name, shipuom,
                   item_descrip1, item_descrip2, item_prodweight, item_packweight
          ORDER BY coitem_linenumber;
     
 --------------------------------------------------------------------
   
 QUERY: foot
 SELECT formatQty(SUM(coship_qty * item_prodweight)) AS netweight,
                 formatQty(SUM(coship_qty * (item_prodweight + item_packweight))) AS grossweight,
                 CASE
                  WHEN ('%3' = 'C') THEN 'X'
                  ELSE ' '
                 END AS collectflag,
                 CASE
                  WHEN ('%3' = 'C') THEN 'Therm-O-Rock East, Inc.'
                  ELSE ' '
                 END AS section7,
                 CASE
                  WHEN ('%3' = 'C') THEN 'Therm-O-Rock, East, Inc.'
                  ELSE ' '
                 END AS collect_name,
                 CASE
                  WHEN ('%3' = 'C') THEN 'Pine Street'
                  ELSE ' '
                 END AS collect_address1,
                 CASE
                  WHEN ('%3' = 'C') THEN ''
                  ELSE ' '
                 END AS collect_address2,
                 CASE
                  WHEN ('%3' = 'C') THEN 'New Eagle  PA  15067'
                  ELSE ' '
                 END AS collect_address3
          FROM coship, coitem, itemsite, item
          WHERE ((coship_coitem_id=coitem_id)
           AND (coitem_itemsite_id=itemsite_id)
           AND (itemsite_item_id=item_id)
           AND (coship_cosmisc_id=%1));
 --------------------------------------------------------------------
   
 QUERY: notes
 SELECT cosmisc_notes
          FROM cosmisc
          WHERE (cosmisc_id=%1);
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: Statement
 QUERY: detail
 SELECT CASE WHEN (aropen_doctype='I') THEN 'Invc.'
             WHEN (aropen_doctype='D') THEN 'D/M'
             WHEN (aropen_doctype='C') THEN 'C/M'
             WHEN (aropen_doctype='R') THEN 'C/D'
             ELSE 'Misc.'
        END AS doctype,
        aropen_docnumber, formatDate(aropen_docdate) AS f_docdate,
        CASE WHEN (aropen_doctype='I') THEN formatDate(aropen_duedate)
             ELSE ''
        END AS f_duedate,
-       CASE WHEN (aropen_doctype IN ('I', 'D')) THEN formatMoney(aropen_amount)
-            WHEN (aropen_doctype IN ('C', 'R')) THEN formatMoney(aropen_amount * -1)
-            ELSE formatMoney(aropen_amount)
+       CASE WHEN (aropen_doctype IN ('I', 'D')) THEN formatMoney(currtocurr(aropen_curr_id,cust_curr_id,aropen_amount,aropen_docdate))
+            WHEN (aropen_doctype IN ('C', 'R')) THEN formatMoney(currtocurr(aropen_curr_id,cust_curr_id,(aropen_amount * -1),aropen_docdate))
+            ELSE formatMoney(currtocurr(aropen_curr_id,cust_curr_id,aropen_amount,aropen_docdate))
        END AS f_amount,
-       CASE WHEN (aropen_doctype IN ('I', 'D')) THEN formatMoney(aropen_paid)
-            WHEN (aropen_doctype IN ('C', 'R')) THEN formatMoney(aropen_paid * -1)
-            ELSE formatMoney(aropen_paid)
+       CASE WHEN (aropen_doctype IN ('I', 'D')) THEN formatMoney(currtocurr(aropen_curr_id,cust_curr_id,aropen_paid,aropen_docdate))
+            WHEN (aropen_doctype IN ('C', 'R')) THEN formatMoney(currtocurr(aropen_curr_id,cust_curr_id,(aropen_paid * -1),aropen_docdate))
+            ELSE formatMoney(currtocurr(aropen_curr_id,cust_curr_id,aropen_paid,aropen_docdate))
        END AS f_applied,
-       CASE WHEN (aropen_doctype IN ('I', 'D')) THEN formatMoney(aropen_amount - aropen_paid)
-            WHEN (aropen_doctype IN ('C', 'R')) THEN formatMoney((aropen_amount - aropen_paid) * -1)
-            ELSE formatMoney(aropen_amount - aropen_paid)
+       CASE WHEN (aropen_doctype IN ('I', 'D')) THEN formatMoney(currtocurr(aropen_curr_id,cust_curr_id,(aropen_amount - aropen_paid),aropen_docdate))
+            WHEN (aropen_doctype IN ('C', 'R')) THEN formatMoney(currtocurr(aropen_curr_id,cust_curr_id,(aropen_amount - aropen_paid) * -1,aropen_docdate))
+            ELSE formatMoney(currtocurr(aropen_curr_id,cust_curr_id,(aropen_amount - aropen_paid),aropen_docdate))
        END AS f_balance,
-       CASE WHEN (aropen_doctype IN ('I', 'D')) THEN (aropen_amount - aropen_paid)
-            WHEN (aropen_doctype IN ('C', 'R')) THEN ((aropen_amount - aropen_paid) * -1)
-            ELSE (aropen_amount - aropen_paid)
+       CASE WHEN (aropen_doctype IN ('I', 'D')) THEN currtocurr(aropen_curr_id,cust_curr_id,(aropen_amount - aropen_paid),aropen_docdate)
+            WHEN (aropen_doctype IN ('C', 'R')) THEN currtocurr(aropen_curr_id,cust_curr_id,((aropen_amount - aropen_paid) * -1),aropen_docdate)
+            ELSE currtocurr(aropen_curr_id,cust_curr_id,(aropen_amount - aropen_paid),aropen_docdate)
        END AS balance
-FROM aropen
-WHERE ( (aropen_cust_id=<? value("cust_id") ?>)
+FROM aropen, cust
+WHERE ( (aropen_cust_id=cust_id)
+ AND (aropen_cust_id=<? value("cust_id") ?>)
  AND (aropen_open)
  AND ((aropen_amount - aropen_paid) > 0) )
 ORDER BY aropen_docdate;
 
 
 --------------------------------------------------------------------
   
 QUERY: head
 SELECT cust_name, cust_address1, cust_address2, cust_address3,
        (cust_city || '  ' || cust_state || '  ' || cust_zipcode) AS citystatezip
 FROM cust
 WHERE (cust_id=<? value("cust_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: Current
-SELECT formatMoney(COALESCE(SUM((aropen_amount - aropen_paid) * CASE WHEN (aropen_doctype IN ('C', 'R')) THEN -1 ELSE 1 END), 0)) AS f_amount
-  FROM aropen
- WHERE ((aropen_cust_id=<? value("cust_id") ?>)
+SELECT formatMoney(COALESCE(SUM(currtocurr(aropen_curr_id,cust_curr_id,(aropen_amount - aropen_paid),aropen_docdate) * CASE WHEN (aropen_doctype IN ('C', 'R')) THEN -1 ELSE 1 END), 0)) AS f_amount
+  FROM aropen, cust
+ WHERE ((aropen_cust_id=cust_id)
+   AND (aropen_cust_id=<? value("cust_id") ?>)
    AND (aropen_open)
    AND ((aropen_amount - aropen_paid) > 0)
    AND (aropen_duedate >= CURRENT_DATE) )
 --------------------------------------------------------------------
   
 QUERY: Past91Plus
-SELECT formatMoney(COALESCE(SUM((aropen_amount - aropen_paid) * CASE WHEN (aropen_doctype IN ('C', 'R')) THEN -1 ELSE 1 END), 0)) AS f_amount
-  FROM aropen
- WHERE ((aropen_cust_id=<? value("cust_id") ?>)
+SELECT formatMoney(COALESCE(SUM(currtocurr(aropen_curr_id,cust_curr_id,(aropen_amount - aropen_paid),aropen_docdate) * CASE WHEN (aropen_doctype IN ('C', 'R')) THEN -1 ELSE 1 END), 0)) AS f_amount
+  FROM aropen, cust
+ WHERE ((aropen_cust_id=cust_id)
+   AND (aropen_cust_id=<? value("cust_id") ?>)
    AND (aropen_open)
    AND ((aropen_amount - aropen_paid) > 0)
    AND (aropen_duedate <= (CURRENT_DATE - 91)) )
 --------------------------------------------------------------------
   
 QUERY: Past1to30
-SELECT formatMoney(COALESCE(SUM((aropen_amount - aropen_paid) * CASE WHEN (aropen_doctype IN ('C', 'R')) THEN -1 ELSE 1 END), 0)) AS f_amount
-  FROM aropen
- WHERE ((aropen_cust_id=<? value("cust_id") ?>)
+SELECT formatMoney(COALESCE(SUM(currtocurr(aropen_curr_id,cust_curr_id,(aropen_amount - aropen_paid),aropen_docdate) * CASE WHEN (aropen_doctype IN ('C', 'R')) THEN -1 ELSE 1 END), 0)) AS f_amount
+  FROM aropen, cust
+ WHERE ((aropen_cust_id=cust_id)
+   AND (aropen_cust_id=<? value("cust_id") ?>)
    AND (aropen_open)
    AND ((aropen_amount - aropen_paid) > 0)
    AND (aropen_duedate between (CURRENT_DATE - 30) AND (CURRENT_DATE - 1)) )
 --------------------------------------------------------------------
   
 QUERY: Past31to60
-SELECT formatMoney(COALESCE(SUM((aropen_amount - aropen_paid) * CASE WHEN (aropen_doctype IN ('C', 'R')) THEN -1 ELSE 1 END), 0)) AS f_amount
-  FROM aropen
- WHERE ((aropen_cust_id=<? value("cust_id") ?>)
+SELECT formatMoney(COALESCE(SUM(currtocurr(aropen_curr_id,cust_curr_id,(aropen_amount - aropen_paid),aropen_docdate) * CASE WHEN (aropen_doctype IN ('C', 'R')) THEN -1 ELSE 1 END), 0)) AS f_amount
+  FROM aropen, cust
+ WHERE ((aropen_cust_id=cust_id)
+   ANd (aropen_cust_id=<? value("cust_id") ?>)
    AND (aropen_open)
    AND ((aropen_amount - aropen_paid) > 0)
    AND (aropen_duedate between (CURRENT_DATE - 60) AND (CURRENT_DATE - 31)) )
 --------------------------------------------------------------------
   
 QUERY: Past61to90
-SELECT formatMoney(COALESCE(SUM((aropen_amount - aropen_paid) * CASE WHEN (aropen_doctype IN ('C', 'R')) THEN -1 ELSE 1 END), 0)) AS f_amount
-  FROM aropen
- WHERE ((aropen_cust_id=<? value("cust_id") ?>)
+SELECT formatMoney(COALESCE(SUM(currtocurr(aropen_curr_id,cust_curr_id,(aropen_amount - aropen_paid),aropen_docdate) * CASE WHEN (aropen_doctype IN ('C', 'R')) THEN -1 ELSE 1 END), 0)) AS f_amount
+  FROM aropen, cust
+ WHERE ((aropen_cust_id=cust_id)
+   ANd (aropen_cust_id=<? value("cust_id") ?>)
    AND (aropen_open)
    AND ((aropen_amount - aropen_paid) > 0)
    AND (aropen_duedate between (CURRENT_DATE - 90) AND (CURRENT_DATE - 61)) )
 --------------------------------------------------------------------
   
\ No newline at end of file
+QUERY: Currency
+SELECT currconcat(cust_curr_id) AS currAbbr
+  FROM cust
+ WHERE (cust_id=<? value("cust_id") ?>)
+
+--------------------------------------------------------------------
+  
\ No newline at end of file
 
 ====================================================================
 REPORT: SubstituteAvailabilityByRootItem
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse
   FROM item
  WHERE (item_id=<? value("item_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT warehous_code,
        item_number,
        item_descrip1,
        item_descrip2,
        formatQty(sub.itemsite_qtyonhand) AS f_qtyonhand,
        formatQty(CASE WHEN(sub.itemsite_useparams) THEN sub.itemsite_reorderlevel ELSE 0.0 END) AS f_reorderlevel,
        sub.itemsite_leadtime as leadtime,
 <? if exists("byDays") ?>
        formatQty(qtyAllocated(sub.itemsite_id, <? value("byDays") ?>)) AS f_allocated,
        formatQty(qtyOrdered(sub.itemsite_id, <? value("byDays") ?>)) AS f_ordered,
        formatQty(sub.itemsite_qtyonhand + qtyOrdered(sub.itemsite_id, <? value("byDays") ?>) - qtyAllocated(sub.itemsite_id, <? value("byDays") ?>)) as f_avail
 <? elseif exists("byDate") ?>
        formatQty(qtyAllocated(sub.itemsite_id, (<? value("byDate") ?> - CURRENT_DATE))) AS f_allocated,
        formatQty(qtyOrdered(sub.itemsite_id, (<? value("byDate") ?> - CURRENT_DATE))) AS f_ordered,
        formatQty(sub.itemsite_qtyonhand + qtyOrdered(sub.itemsite_id, (<? value("byDate") ?> - CURRENT_DATE)) - qtyAllocated(sub.itemsite_id, (<? value("byDate") ?> - CURRENT_DATE))) as f_avail
 <? else ?>
        formatQty(qtyAllocated(sub.itemsite_id, sub.itemsite_leadtime)) AS f_allocated,
        formatQty(qtyOrdered(sub.itemsite_id, sub.itemsite_leadtime)) AS f_ordered,
        formatQty(sub.itemsite_qtyonhand + qtyOrdered(sub.itemsite_id, sub.itemsite_leadtime) - qtyAllocated(sub.itemsite_id, sub.itemsite_leadtime)) as f_avail
 <? endif ?>
   FROM item, itemsite AS sub, itemsite AS root, warehous, itemsub
  WHERE ((sub.itemsite_item_id=item_id)
    AND (root.itemsite_item_id=itemsub_parent_item_id)
    AND (sub.itemsite_item_id=itemsub_sub_item_id)
    AND (root.itemsite_warehous_id=sub.itemsite_warehous_id)
    AND (sub.itemsite_warehous_id=warehous_id)
    AND (root.itemsite_item_id=<? value("item_id") ?>)
 <? if exists("warehous_id") ?>
    AND (root.itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY itemsub_rank;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SummarizedBOM
 QUERY: head
 SELECT item_number,
-       item_invuom,
+       uom_name AS item_invuom,
        item_descrip1,
        item_descrip2
-  FROM item
- WHERE (item_id=<? value("item_id") ?>);
+  FROM item, uom
+ WHERE ((item_id=<? value("item_id") ?>)
+ AND (item_inv_uom_id=uom_id));
     
 --------------------------------------------------------------------
   
 QUERY: detail
 select bomdata_item_number AS item_number,
        bomdata_uom_name AS item_invuom,
        bomdata_item_descrip1 AS item_descrip1,
        bomdata_item_descrip2 AS item_descrip2,
-       bomdata_qtyper AS qtyper
+       formatQtyPer(bomdata_qtyper) AS qtyper
   FROM summarizedBOM(<? value("item_id") ?>,<? value("revision_id") ?>,<? value("expiredDays") ?>,<? value("futureDays") ?>)
 
 
 --------------------------------------------------------------------
   
 QUERY: bomhead
 SELECT bomhead_docnum, bomhead_revision,
 formatDate(bomhead_revisiondate) AS f_revisiondate
 FROM bomhead
 WHERE ((bomhead_item_id=<? value("item_id") ?>)
 AND (bomhead_rev_id=<? value("revision_id") ?>));
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SummarizedBacklogByWarehouse
 QUERY: head
 SELECT <? if exists("custtype_id") ?>
          ( SELECT (custtype_code||'-'||custtype_descrip)
              FROM custtype
             WHERE (custtype_id=<? value("custtype_id") ?>) )
        <? elseif exists("custtype_pattern") ?>
          text(<? value("custtype_pattern") ?>)
        <? else ?>
          text('All Customer Types')
        <? endif ?>
        AS custtype,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("showPrices") ?>
          text('Sales') AS lbl_sales,
          text('Cost') AS lbl_cost,
          text('Margin') AS lbl_margin,
          text('Totals:') AS lbl_totals,
        <? else ?>
          text('') AS lbl_sales,
          text('') AS lbl_cost,
          text('') AS lbl_margin,
          text('') AS lbl_totals,
        <? endif ?>
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT CASE WHEN (cohead_holdtype='P') THEN -1
             ELSE cohead_id
        END AS _coheadid, cohead_id,
        cohead_holdtype, cohead_number, cust_name,
        CASE WHEN (cohead_holdtype='N') THEN <? value("none") ?>
             WHEN (cohead_holdtype='C') THEN <? value("credit") ?>
             WHEN (cohead_holdtype='S') THEN <? value("ship") ?>
             WHEN (cohead_holdtype='P') THEN <? value("pack") ?>
             WHEN (cohead_holdtype='R') THEN <? value("return") ?>
             ELSE <? value("Other") ?>
        END AS f_holdtype,
        formatDate(cohead_orderdate) AS f_orderdate,
        formatDate(MIN(coitem_scheddate)) AS f_scheddate,
        formatDate(cohead_packdate) AS f_packdate,
        <? if exists("showPrices") ?>
          formatMoney( SUM( round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) *
                          (coitem_price / coitem_price_invuomratio),2) ) )
        <? else ?>
          text('')
        <? endif ?>
        AS f_sales,
        <? if exists("showPrices") ?>
          formatCost(SUM((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * stdcost(item_id) ) )
        <? else ?>
          text('')
        <? endif ?>
        AS f_cost,
        <? if exists("showPrices") ?>
          formatMoney( SUM( (noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) *
                          ((coitem_price / coitem_price_invuomratio) - stdcost(item_id)) ) )
        <? else ?>
          text('')
        <? endif ?>
        AS f_margin,
        SUM( round( (noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) *
             (coitem_price / coitem_price_invuomratio),2) ) AS sales,
        SUM((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * stdcost(item_id) ) AS cost,
        SUM((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) *
             ((coitem_price / coitem_price_invuomratio) - stdcost(item_id)) ) AS margin,
        MIN(coitem_scheddate) AS scheddate,
        formatShipmentNumber(cosmisc_id) AS cosmisc_number,
        CASE WHEN (cosmisc_shipped IS NULL) THEN text('')
             WHEN (cosmisc_shipped) THEN text('Yes')
             WHEN (NOT cosmisc_shipped) THEN text('No')
        END AS shipstatus,
        COALESCE(cosmisc_shipvia, '') AS shipvia,
        CASE WHEN (cosmisc_shipdate IS NULL) THEN text('')
             ELSE formatDate(cosmisc_shipdate)
        END AS shipdate
   FROM coitem, itemsite, item, cust, 
        cohead LEFT OUTER JOIN cosmisc ON (cosmisc_cohead_id=cohead_id) 
  WHERE ( (coitem_cohead_id=cohead_id)
    AND (cohead_cust_id=cust_id)
    AND (coitem_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (coitem_status NOT IN ('C','X'))
    AND (coitem_scheddate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("custtype_id") ?>
    AND (cust_custtype_id=<? value("custtype_id") ?>)
 <? elseif exists("custtype_pattern") ?>
    AND (cust_custtype_id IN (SELECT custtype_id
                                FROM custtype
                               WHERE (custtype_code ~ <? value("custtype_pattern") ?>)))
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 GROUP BY cohead_id, cohead_number, cust_name, cohead_holdtype,
          cohead_orderdate, cohead_packdate, cosmisc_shipped,
          cosmisc_shipvia, cosmisc_shipdate, cosmisc_id
 ORDER BY 
 <? if exists("orderByShipDate") ?>
   scheddate,
 <? elseif exists("orderByPackDate") ?>
   cohead_packdate
 <? endif ?>
 cohead_number, cosmisc_shipped;
 --------------------------------------------------------------------
   
 QUERY: totals
 SELECT
 <? if exists("showPrices") ?>
        formatMoney( SUM( sales ) ) AS f_sales,
        formatCost( SUM( cost ) ) AS f_cost,
        formatMoney( SUM( margin ) ) AS f_margin
   FROM (
 SELECT SUM( round((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) *
                          (coitem_price / coitem_price_invuomratio),2) ) AS sales,
        SUM((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) * stdcost(item_id) ) AS cost,
        SUM((noNeg(coitem_qtyord - coitem_qtyshipped + coitem_qtyreturned) * coitem_qty_invuomratio) *
                          ((coitem_price / coitem_price_invuomratio) - stdcost(item_id)) ) AS margin
   FROM coitem, itemsite, item, cust, 
        cohead
  WHERE ( (coitem_cohead_id=cohead_id)
    AND (cohead_cust_id=cust_id)
    AND (coitem_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (coitem_status NOT IN ('C','X'))
    AND (coitem_scheddate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("custtype_id") ?>
    AND (cust_custtype_id=<? value("custtype_id") ?>)
 <? elseif exists("custtype_pattern") ?>
    AND (cust_custtype_id IN (SELECT custtype_id
                                FROM custtype
                               WHERE (custtype_code ~ <? value("custtype_pattern") ?>)))
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 GROUP BY cohead_id, cohead_number, cust_name, cohead_holdtype,
          cohead_orderdate, cohead_packdate
 ) AS data
 <? else ?>
        text('') AS f_sales,
        text('') AS f_cost,
        text('') AS f_margin
 <? endif ?>
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SummarizedSalesByCustomerType
 QUERY: detail
 SELECT custtype_id, custtype_code, warehous_code,
        formatPrice(minprice) AS f_minprice,
        formatPrice(maxprice) AS f_maxprice,
        formatPrice(avgprice) AS f_avgprice,
        formatQty(totalunits) AS f_totalunits,
        totalsales, formatMoney(totalsales) AS f_totalsales 
 FROM ( SELECT custtype_id, custtype_code, warehous_code,
               MIN(currToBase(COALESCE(cohist_curr_id, baseCurrId()), cohist_unitprice, cohist_invcdate)) AS minprice,
               MAX(currToBase(COALESCE(cohist_curr_id, baseCurrId()), cohist_unitprice, cohist_invcdate)) AS maxprice,
               AVG(currToBase(COALESCE(cohist_curr_id, baseCurrId()), cohist_unitprice, cohist_invcdate)) AS avgprice,
               SUM(currToBase(COALESCE(cohist_curr_id, baseCurrId()), cohist_qtyshipped, cohist_invcdate)) AS totalunits,
               SUM(currToBase(COALESCE(cohist_curr_id, baseCurrId()), round(cohist_qtyshipped * cohist_unitprice,2), cohist_invcdate)) AS totalsales 
        FROM cohist, cust, custtype, itemsite, item, warehous 
        WHERE ( (cohist_cust_id=cust_id)
         AND (cust_custtype_id=custtype_id)
         AND (cohist_itemsite_id=itemsite_id)
         AND (itemsite_item_id=item_id)
         AND (itemsite_warehous_id=warehous_id)
         AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
         AND (warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("custtype_id") ?>
         AND (custtype_id=<? value("custtype_id") ?>)
 <? elseif exists("custtype_pattern") ?>
         AND (custtype_code ~ <? value("custtype_pattern") ?>)
 <? endif ?>
      )
 GROUP BY custtype_id, custtype_code, warehous_code ) AS data
 ORDER BY custtype_code, warehous_code;
 --------------------------------------------------------------------
   
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          (select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("custtype_id") ?>
         (SELECT (custtype_code || '-' || custtype_descrip)
            FROM custtype
           WHERE custtype_id=<? value("custtype_id") ?>)
        <? elseif exists("custtype_pattern") ?>
          text(<? value("custtype_pattern") ?>
        <? else  ?>
          text('All Customer Types')
        <? endif ?>
        AS custtype,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SummarizedSalesHistoryByCustomer
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("prodcat_id") ?>
          ( SELECT (prodcat_code||'-'||prodcat_descrip)
              FROM prodcat
             WHERE prodcat_id=<? value("prodcat_id") ?>)
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('All Categories')
        <? endif ?>
        AS prodcat,
        formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cust_number, cust_name,
        formatDate(MIN(cohist_invcdate)) AS firstsale,
        formatDate(MAX(cohist_invcdate)) AS lastsale,
        formatQty(SUM(cohist_qtyshipped)) AS qty,
-       formatMoney(SUM(round(cohist_qtyshipped * cohist_unitprice,2))) AS sales 
+       formatMoney(SUM(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2))) AS sales 
 FROM cohist, itemsite, cust, item 
 WHERE ((cohist_itemsite_id=itemsite_id)
  AND (cohist_cust_id=cust_id)
  AND (itemsite_item_id=item_id)
  AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("prodcat_id") ?>
  AND (item_prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
  AND (item_prodcat_id IN (SELECT prodcat_id
                             FROM prodcat
                            WHERE (prodcat_code ~ <? value("prodcat_pattern") ?>)))
 <? endif ?>
 )
 GROUP BY cust_number, cust_id, cust_name;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SummarizedSalesHistoryByCustomerByItem
 QUERY: head
 SELECT cust_number,
        cust_name,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate
   FROM cust
  WHERE (cust_id=<? value("cust_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT item_number, item_descrip1, item_descrip2, warehous_code,
        formatPrice(minprice) AS f_minprice,
        formatPrice(maxprice) AS f_maxprice,
        formatPrice(avgprice) AS f_avgprice,
        formatQty(totalunits) AS f_totalunits,
        formatMoney(totalsales) AS f_totalsales,
        totalsales 
 FROM ( SELECT itemsite_id, item_number, item_descrip1, item_descrip2,
               warehous_code,
-              MIN(cohist_unitprice) AS minprice,
-              MAX(cohist_unitprice) AS maxprice,
-              AVG(cohist_unitprice) AS avgprice,
+              MIN(currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate)) AS minprice,
+              MAX(currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate)) AS maxprice,
+              AVG(currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate)) AS avgprice,
               SUM(cohist_qtyshipped) AS totalunits,
-              SUM(round(cohist_qtyshipped * cohist_unitprice,2)) AS totalsales 
+              SUM(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)) AS totalsales 
          FROM cohist, itemsite, item, warehous 
         WHERE ((cohist_itemsite_id=itemsite_id)
           AND (itemsite_item_id=item_id)
           AND (itemsite_warehous_id=warehous_id)
           AND (cohist_cust_id=<? value("cust_id") ?>)
           AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
           AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
               )
 GROUP BY itemsite_id, item_number, item_descrip1, item_descrip2, warehous_code ) AS data 
 <? if exists("orderByItemNumber") ?>
 ORDER BY item_number, warehous_code
 <? elseif exists("orderByQtyVolume") ?>
 ORDER BY totalunits DESC
 <? elseif exists("orderBySalesVolume") ?>
 ORDER BY totalsales DESC
 <? endif ?>
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SummarizedSalesHistoryByCustomerTypeByItem
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("custtype_id") ?>
          ( SELECT (custtype_code||'-'||custtype_descrip)
              FROM custtype
             WHERE custtype_id=<? value("custtype_id") ?>)
        <? elseif exists("custtype_pattern") ?>
          text(<? value("custtype_pattern") ?>)
        <? else ?>
          text('All Customer Types')
        <? endif ?>
        AS custtype,
        formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate;
        
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT item_number, item_descrip1, item_descrip2, warehous_code,
        formatSalesPrice(minprice) AS f_minprice,
        formatSalesPrice(maxprice) AS f_maxprice,
        formatSalesPrice(avgprice) AS f_avgprice,
        formatQty(totalunits) AS f_totalunits,
        formatMoney(totalsales) AS f_totalsales,
        totalsales 
 FROM ( SELECT itemsite_id, item_number, item_descrip1, item_descrip2,
               warehous_code,
-              MIN(cohist_unitprice) AS minprice,
-              MAX(cohist_unitprice) AS maxprice,
-              AVG(cohist_unitprice) AS avgprice,
+              MIN(currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate)) AS minprice,
+              MAX(currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate)) AS maxprice,
+              AVG(currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate)) AS avgprice,
               SUM(cohist_qtyshipped) AS totalunits,
-              SUM(round(cohist_qtyshipped * cohist_unitprice,2)) AS totalsales
+              SUM(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)) AS totalsales
          FROM cohist, cust, custtype, itemsite, item, warehous 
         WHERE ((cohist_cust_id=cust_id)
           AND (cust_custtype_id=custtype_id)
           AND (cohist_itemsite_id=itemsite_id)
           AND (itemsite_item_id=item_id)
           AND (itemsite_warehous_id=warehous_id)
           AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
           AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("custtype_id") ?>
           AND (custtype_id=<? value("custtype_id") ?>)
 <? elseif exists("custtype_pattern") ?>
           AND (custtype_code ~ <? value("custtype_pattern") ?>)
 <? endif ?>
               )
 GROUP BY itemsite_id, item_number, item_descrip1,
          item_descrip2, warehous_code ) AS data
 ORDER BY item_number, warehous_code;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SummarizedSalesHistoryByItem
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code FROM warehous WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("prodcat_id") ?>
          ( SELECT (prodcat_code || '-' || prodcat_descrip)
              FROM prodcat
             WHERE (prodcat_id=<? value("prodcat_id") ?>) )
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('All Categories')
        <? endif ?>
        AS prodcat,
        <? if exists("custtype_id") ?>
          ( SELECT (custtype_code || '-' || custtype_descrip)
              FROM custtype
             WHERE (custtype_id=<? value("custtype_id") ?>) )
        <? elseif exists("custtype_pattern") ?>
          text(<? value("custtype_pattern") ?>)
        <? else ?>
          text('All Customer Types')
        <? endif ?>
        AS custtype,
        formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT item_id, item_number, item_descrip1, item_descrip2,
        formatDate(MIN(cohist_invcdate)) AS f_firstsale,
        formatDate(MAX(cohist_invcdate)) AS f_lastsale,
        formatQty(SUM(cohist_qtyshipped)) AS f_qty,
-       SUM(round(cohist_qtyshipped * cohist_unitprice,2)) AS sales,
-       formatMoney(SUM(round(cohist_qtyshipped * cohist_unitprice,2))) AS f_sales
+       SUM(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2)) AS sales,
+       formatMoney(SUM(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2))) AS f_sales
   FROM cohist, cust, itemsite, item
  WHERE ( (cohist_cust_id=cust_id)
    AND (cohist_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("prodcat_id") ?>
    AND (item_prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (item_prodcat_id IN (SELECT prodcat_id FROM prodcat WHERE (prodcat_code ~ <? value("prodcat_pattern") ?>)))
 <? endif ?>
 <? if exists("custtype_id") ?>
    AND (cust_custtype_id=<? value("custtype_id") ?>)
 <? elseif exists("custtype_pattern") ?>
    AND (cust_custtype_id IN (SELECT custtype_id FROM custtype WHERE (custtype_code ~ <? value("custtype_pattern") ?>)))
 <? endif ?>
  )
 GROUP BY item_id, item_number, item_descrip1, item_descrip2
 <? if exists("orderByItemNumber") ?>
 ORDER BY item_number
 <? elseif exists("orderByQtyVolume") ?>
 ORDER BY SUM(cohist_qtyshipped) DESC
 <? elseif exists("orderBySalesVolume") ?>
 ORDER BY SUM(cohist_qtyshipped * cohist_unitprice) DESC
 <? endif ?>
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SummarizedSalesHistoryBySalesRep
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code FROM warehous WHERE warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("prodcat_id") ?>
          ( SELECT (prodcat_code||'-'||prodcat_descrip)
              FROM prodcat
             WHERE prodcat_id=<? value("prodcat_id") ?>)
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('All Categories')
        <? endif ?>
        AS prodcat,
        formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT salesrep_number, salesrep_name,
        formatDate(MIN(cohist_invcdate)) AS firstsale,
        formatDate(MAX(cohist_invcdate)) AS lastsale,
        formatQty(SUM(cohist_qtyshipped)) AS qty,
-       formatMoney(SUM(round(cohist_qtyshipped * cohist_unitprice,2))) AS sales 
+       formatMoney(SUM(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2))) AS sales 
 FROM cohist, itemsite, salesrep, item 
 WHERE ((cohist_itemsite_id=itemsite_id)
  AND (cohist_salesrep_id=salesrep_id)
  AND (itemsite_item_id=item_id)
  AND (cohist_invcdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("prodcat_id") ?>
  AND (item_prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
  AND (item_prodcat_id IN (SELECT prodcat_id FROM prodcat WHERE (prodcat_code ~ <? value("prodcat_pattern") ?>)))
 <? endif ?>
  )
 GROUP BY salesrep_number, salesrep_id, salesrep_name;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SummarizedSalesHistoryByShippingZone
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( select warehous_code from warehous where warehous_id=<? value("warehous_id") ?>)
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("prodcat_id") ?>
          ( SELECT (prodcat_code||'-'||prodcat_descrip)
              FROM prodcat
             WHERE prodcat_id=<? value("prodcat_id") ?>)
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('All Categories')
        <? endif ?>
        AS prodcat,
        <? if exists("shipzone_id") ?>
          ( SELECT shipzone_name
              FROM shipzone
             WHERE shipzone_id=<? value("shipzone_id") ?>)
        <? else ?>
          text('All Shipping Zones')
        <? endif ?>
        AS shipzone,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT shipzone_name, cust_number, cust_name,
        item_number, item_descrip1, item_descrip2,
        formatQty(SUM(cohist_qtyshipped)) AS shipped,
-       formatMoney(SUM(round(cohist_qtyshipped * cohist_unitprice,2))) AS extprice 
+       formatMoney(SUM(round(cohist_qtyshipped * currtobase(cohist_curr_id,cohist_unitprice,cohist_invcdate),2))) AS extprice 
 FROM cohist, cust, shipto, itemsite, item, shipzone 
 WHERE ((cohist_cust_id=cust_id)
  AND (cohist_shipto_id=shipto_id)
  AND (cohist_itemsite_id=itemsite_id)
  AND (itemsite_item_id=item_id)
  AND (shipto_shipzone_id=shipzone_id)
  AND (cohist_invcdate BETWEEN <? value("startDate") ?> and <? value("endDate") ?>)
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("prodcat_id") ?>
  AND (item_prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
  AND (item_prodcat_id IN (SELECT prodcat_id FROM prodcat WHERE (prodcat_code ~ <? value("prodcat_pattern") ?>)))
 <? endif ?>
 <? if exists("shipzone_id") ?>
  AND (shipzone_id=<? value("shipzone_id") ?>)
 <? endif ?>
  )
 GROUP BY shipzone_id, cust_id, shipzone_name, cust_number, cust_name, item_number, item_descrip1, item_descrip2;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: SummarizedTaxableSales
 QUERY: head
 SELECT <? if exists("tax_id") ?>
          ( SELECT (tax_code||' - '||tax_descrip)
              FROM tax
             WHERE (tax_id=<? value("tax_id") ?>) )
        <? else ?>
          text('All Tax Codes')
        <? endif ?>
        AS taxcode,
        formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT (tax_code||'-'||tax_descrip) AS taxcode,
        formatMoney((
 	  SELECT COALESCE(SUM(ROUND(cohist_qtyshipped *
 				    currToCurr(cohist_curr_id, baseCurrId(),
 					       cohist_unitprice,
 					       cohist_invcdate),2)), 0)
 	  FROM cohist
 	  WHERE ((cohist_tax_id=tax_id)
-	    AND  (cohist_itemsite_id<>-1)
+                 AND  (COALESCE(cohist_misc_type,'M') = 'M')
 	    AND  (cohist_invcdate BETWEEN <? value("startDate") ?>
 				      AND <? value("endDate") ?>))
        )) AS f_sales,
        formatMoney((
 	  SELECT COALESCE(SUM(ROUND(currToCurr(cohist_curr_id, baseCurrId(),
 					       cohist_unitprice,
 					       cohist_invcdate), 2)), 0)
 	  FROM cohist
 	  WHERE ((cohist_tax_id=tax_id)
 	    AND  (cohist_misc_type='F')
 	    AND  (cohist_invcdate BETWEEN <? value("startDate") ?>
 				      AND <? value("endDate") ?>))
        )) AS f_freight,
        formatBoolYN(EXISTS(SELECT *
 			   FROM taxsel
 			   WHERE ((taxsel_tax_id=tax_id)
 			     AND  (taxsel_taxtype_id=getFreightTaxTypeId()))
        )) AS f_taxfreight,
        formatMoney((
 	 SELECT COALESCE(SUM(ROUND(currToCurr(cohist_curr_id, baseCurrId(),
 					      COALESCE(cohist_tax_ratea,0) +
 					      COALESCE(cohist_tax_rateb,0) +
 					      COALESCE(cohist_tax_ratec, 0),
 					      cohist_invcdate), 2)), 0)
 	 FROM cohist
 	 WHERE ((cohist_tax_id=tax_id)
 --          AND (cohist_misc_type='T')
 	    AND (cohist_invcdate BETWEEN <? value("startDate") ?>
 				      AND <? value("endDate") ?>))
        )) AS f_taxbase,
        formatMoney((
 	 SELECT COALESCE(SUM(ROUND(currToCurr(cohist_curr_id,
 					      COALESCE(taxauth_curr_id,
 						       baseCurrId()),
 					      COALESCE(cohist_tax_ratea,0) +
 					      COALESCE(cohist_tax_rateb,0) +
 					      COALESCE(cohist_tax_ratec, 0),
 					      cohist_invcdate), 2)), 0)
 	 FROM cohist
 	 WHERE ((cohist_tax_id=tax_id)
 --          AND (cohist_misc_type='T')
 	    AND (cohist_invcdate BETWEEN <? value("startDate") ?>
 				      AND <? value("endDate") ?>))
        )) AS f_tax,
        currConcat(COALESCE(taxauth_curr_id, baseCurrId())) AS taxauthcurr
 FROM tax LEFT OUTER JOIN
      (taxsel JOIN taxauth ON (taxsel_taxauth_id=taxauth_id))
 	ON (taxsel_tax_id=tax_id)
 <? if exists("tax_id") ?>
 WHERE (tax_id=<? value("tax_id") ?>) 
 <? endif ?>
 GROUP BY tax_id, tax_code, tax_descrip, tax_freight, taxauth_curr_id;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: TimePhasedAvailability
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("plancode_id") ?>
          ( SELECT (plancode_code || '-' || plancode_name)
              FROM plancode
             WHERE (plancode_id=<? value("plancode_id") ?>) )
        <? elseif exists("plancode_pattern") ?>
          text(<? value("plancode_pattern") ?>)
        <? else ?>
          text('All Planner Codes')
        <? endif ?>
        AS plncode;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT findPeriodStart(rcalitem_id) AS pstart,
        findPeriodEnd(rcalitem_id) AS pend,
        (formatDate(findPeriodStart(rcalitem_id)) || '-' || formatDate(findPeriodEnd(rcalitem_id))) AS period,
        item_number,
        uom_name AS f_uom,
        warehous_code,
        formatQty(qtyAvailable(itemsite_id, findPeriodStart(rcalitem_id))) AS f_unit
   FROM rcalitem, itemsite, item, uom, warehous
  WHERE ((rcalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                         ))
    AND (itemsite_warehous_id=warehous_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("plancode_id") ?>
    AND (itemsite_plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
    AND (itemsite_plancode_id IN ( SELECT plancode_id
                                     FROM plancode
                                    WHERE (plancode_code ~ <? value("plancode_pattern") ?>)))
 <? endif ?>
   )
  UNION
 SELECT findPeriodStart(acalitem_id) AS pstart,
        findPeriodEnd(acalitem_id) AS pend,
        (formatDate(findPeriodStart(acalitem_id)) || '-' || formatDate(findPeriodEnd(acalitem_id))) AS period,
        item_number,
        uom_name AS f_uom,
        warehous_code,
        formatQty(qtyAvailable(itemsite_id, findPeriodStart(acalitem_id))) AS f_unit
   FROM acalitem, itemsite, item, uom, warehous
  WHERE ((acalitem_id IN (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                         ))
    AND (itemsite_warehous_id=warehous_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("plancode_id") ?>
    AND (itemsite_plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
    AND (itemsite_plancode_id IN ( SELECT plancode_id
                                     FROM plancode
                                    WHERE (plancode_code ~ <? value("plancode_pattern") ?>)))
 <? endif ?>
   )
 ORDER BY pstart, item_number, warehous_code;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: TimePhasedBookingsByItem
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("prodcat_id") ?>
          (select (prodcat_code||'-'||prodcat_descrip) from prodcat where prodcat_id=<? value("prodcat_id") ?>)
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('All Product Categories')
        <? endif ?>
        AS prodcat,
        <? if exists("inventoryUnits") ?>
          text('UOM') AS lbl_uom,
          text('Qty.') AS lbl_unittype
        <? else ?>
          text('') AS lbl_uom,
          <? if exists("salesDollars") ?>
            text('Sales')
          <? else ?>
            text('Error')
          <? endif ?>
          AS lbl_unittype
        <? endif ?>
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT calitem_start AS pstart,
        calitem_end AS pend,
        (formatDate(calitem_start) || '-' || formatDate(calitem_end)) AS period,
        item_number,
        <? if exists("inventoryUnits") ?>
          uom_name AS f_uom,
          formatQty(bookingsByItemQty(itemsite_id, calitem_id)) AS f_unit,
          bookingsByItemQty(itemsite_id, calitem_id) AS unit,
        <? else ?>
          text('') AS f_uom,
          formatExtPrice(bookingsByItemValue(itemsite_id, calitem_id)) AS f_unit,
          bookingsByItemValue(itemsite_id, calitem_id) AS unit,
        <? endif ?>
        warehous_code
   FROM itemsite, item, uom, warehous,
        ( SELECT rcalitem_id AS calitem_id,
                 findPeriodStart(rcalitem_id) AS calitem_start,
                 findPeriodEnd(rcalitem_id) AS calitem_end
            FROM rcalitem
           WHERE (rcalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                                 )
                 )
           UNION
          SELECT acalitem_id AS calitem_id,
                 findPeriodStart(acalitem_id) AS calitem_start,
                 findPeriodEnd(acalitem_id) AS calitem_end
            FROM acalitem
           WHERE (acalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                                 )
                 )
        ) AS calitem
  WHERE ((itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (itemsite_warehous_id=warehous_id)
    AND (item_sold)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("prodcat_id") ?>
    AND (item_prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (item_prodcat_id IN ( SELECT prodcat_id
                                FROM prodcat
                               WHERE (prodcat_code ~ <? value("prodcat_pattern") ?>)))
 <? endif ?>
   )
 ORDER BY pstart, item_number, warehous_code;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: TimePhasedBookingsByProductCategory
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("prodcat_id") ?>
          (select (prodcat_code||'-'||prodcat_descrip) from prodcat where prodcat_id=<? value("prodcat_id") ?>)
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('All Product Categories')
        <? endif ?>
        AS prodcat,
        <? if exists("salesDollars") ?>
          text('')
        <? else ?>
          text('UOM')
        <? endif ?>
        AS lbl_uom,
        <? if exists("inventoryUnits") ?>
          text('Qty.')
        <? elseif exists("capacityUnits") ?>
          text('Capacity')
        <? elseif exists("altCapacityUnits") ?>
          text('Alt. Capacity')
        <? elseif exists("salesDollars") ?>
          text('Sales')
        <? else ?>
          text('ERROR')
        <? endif ?>
        AS lbl_unittype ;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT calitem_start AS pstart,
        calitem_end AS pend,
        (formatDate(calitem_start) || '-' || formatDate(calitem_end)) AS period,
        prodcat_code,
        <? if exists("inventoryUnits") ?>
          uom_name
        <? elseif exists("capacityUnits") ?>
          itemcapuom(item_id)
        <? elseif exists("altCapacityUnits") ?>
          itemaltcapuom(item_id)
        <? else ?>
          text('')
        <? endif ?>
        AS f_uom,
        warehous_code,
        <? if exists("inventoryUnits") ?>
          formatQty(SUM(bookingsByItemQty(itemsite_id, calitem_id)))
        <? elseif exists("capacityUnits") ?>
          formatQty(SUM(bookingsByItemQty(itemsite_id, calitem_id) * itemcapinvrat(item_id)))
        <? elseif exists("altCapacityUnits") ?>
          formatQty(SUM(bookingsByItemQty(itemsite_id, calitem_id) * itemaltcapinvrat(item_id)))
        <? else ?>
          formatExtPrice(SUM(bookingsByItemValue(itemsite_id, calitem_id)))
        <? endif ?>
        AS f_unit,
        <? if exists("inventoryUnits") ?>
          SUM(bookingsByItemQty(itemsite_id, calitem_id))
        <? elseif exists("capacityUnits") ?>
          SUM(bookingsByItemQty(itemsite_id, calitem_id) * itemcapinvrat(item_id))
        <? elseif exists("altCapacityUnits") ?>
          SUM(bookingsByItemQty(itemsite_id, calitem_id) * itemaltcapinvrat(item_id))
        <? else ?>
          SUM(bookingsByItemValue(itemsite_id, calitem_id))
        <? endif ?>
        AS unit
   FROM itemsite, item, uom, warehous, prodcat,
        ( SELECT rcalitem_id AS calitem_id,
                 findPeriodStart(rcalitem_id) AS calitem_start,
                 findPeriodEnd(rcalitem_id) AS calitem_end
            FROM rcalitem
           WHERE (rcalitem_id IN (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                                 )
                 )
           UNION
          SELECT acalitem_id AS calitem_id,
                 findPeriodStart(acalitem_id) AS calitem_start,
                 findPeriodEnd(acalitem_id) AS calitem_end
            FROM acalitem
           WHERE (acalitem_id IN (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                                 )
                 )
        ) AS calitem
  WHERE ((itemsite_warehous_id=warehous_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (item_prodcat_id=prodcat_id)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("prodcat_id") ?>
    AND (prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (prodcat_code ~ <? value("prodcat_pattern") ?>)
 <? endif ?>
   )
 GROUP BY pstart, pend, period, prodcat_code, warehous_code, f_uom
 ORDER BY pstart, prodcat_code, warehous_code, f_uom;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: TimePhasedDemandByPlannerCode
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("plancode_id") ?>
          ( SELECT (plancode_code||'-'||plancode_name)
              FROM plancode
             WHERE plancode_id=<? value("plancode_id") ?>)
        <? elseif exists("plancode_pattern") ?>
          text(<? value("plancode_pattern") ?>)
        <? else ?>
          text('All Planner Codes')
        <? endif ?>
        AS plancode,
        <? if exists("inventoryUnits") ?>
          text('Qty.')
        <? elseif exists("capacityUnits") ?>
          text('Capacity')
        <? elseif exists("altCapacityUnits") ?>
          text('Alt. Capacity')
        <? else ?>
          text('ERROR')
        <? endif ?>
        AS lbl_unittype ;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT findPeriodStart(calitem_id) AS pstart,
        findPeriodEnd(calitem_id) AS pend,
        (formatDate(findPeriodStart(calitem_id)) || '-' || formatDate(findPeriodEnd(calitem_id))) AS period,
        plancode_code,
        <? if exists("inventoryUnits") ?>
          uom_name
        <? elseif exists("capacityUnits") ?>
          itemcapuom(item_id)
        <? elseif exists("altCapacityUnits") ?>
          itemaltcapuom(item_id)
        <? else ?>
          text('')
        <? endif ?>
        AS f_uom,
        warehous_code,
        <? if exists("inventoryUnits") ?>
          formatQty(SUM(summDemand(itemsite_id, calitem_id)))
        <? elseif exists("capacityUnits") ?>
          formatQty(SUM(summDemand(itemsite_id, calitem_id) * itemcapinvrat(item_id)))
        <? elseif exists("altCapacityUnits") ?>
          formatQty(SUM(summDemand(itemsite_id, calitem_id) * itemaltcapinvrat(item_id)))
        <? else ?>
          formatQty(SUM(summDemand(itemsite_id, calitem_id)))
        <? endif ?>
        AS f_unit
   FROM itemsite, item, uom, warehous, plancode,
        (SELECT rcalitem_id AS calitem_id
           FROM rcalitem
          WHERE (rcalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                                ))
          UNION
         SELECT acalitem_id as calitem_id
           FROM acalitem
          WHERE (acalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                                ))
         ) AS calitem
  WHERE ((itemsite_warehous_id=warehous_id)
    AND (itemsite_active)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (itemsite_plancode_id=plancode_id)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("plancode_id") ?>
    AND (plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
    AND (plancode_code ~ <? value("plancode_pattern") ?>)
 <? endif ?>
   )
 GROUP BY pstart, pend, period, plancode_code, warehous_code, f_uom
 ORDER BY pstart, plancode_code, warehous_code, f_uom;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: TimePhasedPlannedRevenueExpensesByPlannerCode
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("plancode_id") ?>
          ( SELECT (plancode_code || '-' || plancode_name)
              FROM plancode
             WHERE (plancode_id=<? value("plancode_id") ?>) )
        <? elseif exists("plancode_pattern") ?>
          text(<? value("plancode_pattern") ?>)
        <? else ?>
          text('All Planner Codes')
        <? endif ?>
        AS plncode;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT (formatDate(calitem_startdate) || '-' || formatDate(calitem_enddate)) AS period,
        formatMoney(COALESCE(cost,0.0)) AS f_cost,
        formatMoney(COALESCE(revenue,0.0)) AS f_revenue,
        formatMoney(COALESCE(revenue,0.0) - COALESCE(cost,0.0)) AS f_profit
   FROM ( SELECT calitem_startdate,
                 calitem_enddate,
                 SUM(plannedCost(plancode_id, warehous_id,
                     <? if exists("actualCost") ?>'A'<? else ?>'S'<? endif ?>
                     , calitem_id))
                  AS cost,
                 <? if exists("averagePrice") ?>
                   SUM(plannedRevenue(plancode_id, warehous_id, 'A', calitem_id,
                     <? value("startEvalDate") ?>, <? value("endEvalDate") ?>))
                 <? else ?>
                   SUM(plannedRevenue(plancode_id, warehous_id, 'L', calitem_id))
                 <? endif ?>
                 AS revenue
            FROM plancode, warehous,
                 ( SELECT rcalitem_id AS calitem_id,
                          findPeriodStart(rcalitem_id) AS calitem_startdate,
                          findPeriodEnd(rcalitem_id) AS calitem_enddate
                     FROM rcalitem
                    WHERE (rcalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                                          ))
                    UNION
                   SELECT acalitem_id AS calitem_id,
                          findPeriodStart(acalitem_id) AS calitem_startdate,
                          findPeriodEnd(acalitem_id) AS calitem_enddate
                     FROM acalitem
                    WHERE (acalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                                          ))
                  ) AS calitem
           WHERE ((TRUE)
 <? if exists("warehous_id") ?>
             AND  (warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("plancode_id") ?>
             AND  (plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
             AND  (plancode_code ~ <? value("plancode_pattern") ?>)
 <? endif ?>
                 )
        GROUP BY calitem_startdate, calitem_enddate
        ) AS data
 ORDER BY calitem_startdate
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: TimePhasedProductionByItem
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("plancode_id") ?>
          ( SELECT (plancode_code||'-'||plancode_name)
              FROM plancode
             WHERE plancode_id=<? value("plancode_id") ?>)
        <? elseif exists("plancode_pattern") ?>
          text(<? value("plancode_pattern") ?>)
        <? else ?>
          text('All Planner Codes')
        <? endif ?>
        AS plancode ;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT findPeriodStart(calitem_id) AS pstart,
        findPeriodEnd(calitem_id) AS pend,
        (formatDate(findPeriodStart(calitem_id)) || '-' || formatDate(findPeriodEnd(calitem_id))) AS period,
        item_number,
        uom_name,
        warehous_code,
        formatQty(SUM(summProd(itemsite_id, calitem_id))) AS f_unit
   FROM itemsite, item, uom, warehous,
        (SELECT rcalitem_id AS calitem_id
           FROM rcalitem
          WHERE (rcalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                                ))
          UNION
         SELECT acalitem_id as calitem_id
           FROM acalitem
          WHERE (acalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                                ))
         ) AS calitem
  WHERE ((itemsite_warehous_id=warehous_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("plancode_id") ?>
    AND (itemsite_plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
    AND (itemsite_plancode_id IN (SELECT plancode_id FROM plancode WHERE (plancode_code ~ <? value("plancode_pattern") ?>)))
 <? endif ?>
   )
 GROUP BY pstart, pend, period, item_number, warehous_code, uom_name
 ORDER BY pstart, item_number, warehous_code;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: TimePhasedProductionByPlannerCode
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("plancode_id") ?>
          ( SELECT (plancode_code||'-'||plancode_name)
              FROM plancode
             WHERE plancode_id=<? value("plancode_id") ?>)
        <? elseif exists("plancode_pattern") ?>
          text(<? value("plancode_pattern") ?>)
        <? else ?>
          text('All Planner Codes')
        <? endif ?>
        AS plancode,
        <? if exists("inventoryUnits") ?>
          text('Qty.')
        <? elseif exists("capacityUnits") ?>
          text('Capacity')
        <? elseif exists("altCapacityUnits") ?>
          text('Alt. Capacity')
        <? else ?>
          text('ERROR')
        <? endif ?>
        AS lbl_unittype,
        <? if exists("showInactive") ?>
          text('Showing Active and Inactive Item Sites')
        <? else ?>
          text('Showing Active Item Sites Only')
        <? endif ?>
        AS lbl_showing ;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT findPeriodStart(calitem_id) AS pstart,
        findPeriodEnd(calitem_id) AS pend,
        (formatDate(findPeriodStart(calitem_id)) || '-' || formatDate(findPeriodEnd(calitem_id))) AS period,
        plancode_code,
        <? if exists("inventoryUnits") ?>
          uom_name
        <? elseif exists("capacityUnits") ?>
          itemcapuom(item_id)
        <? elseif exists("altCapacityUnits") ?>
          itemaltcapuom(item_id)
        <? else ?>
          text('')
        <? endif ?>
        AS f_uom,
        warehous_code,
        <? if exists("inventoryUnits") ?>
          formatQty(SUM(summProd(itemsite_id, calitem_id)))
        <? elseif exists("capacityUnits") ?>
          formatQty(SUM(summProd(itemsite_id, calitem_id) * itemcapinvrat(item_id)))
        <? elseif exists("altCapacityUnits") ?>
          formatQty(SUM(summProd(itemsite_id, calitem_id) * itemaltcapinvrat(item_id)))
        <? else ?>
          formatQty(SUM(summProd(itemsite_id, calitem_id)))
        <? endif ?>
        AS f_unit
   FROM itemsite, item, uom, warehous, plancode,
        (SELECT rcalitem_id AS calitem_id
           FROM rcalitem
          WHERE (rcalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                                ))
          UNION
         SELECT acalitem_id as calitem_id
           FROM acalitem
          WHERE (acalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                                ))
         ) AS calitem
  WHERE ((itemsite_warehous_id=warehous_id)
 <? if not exists("showInactive") ?>
    AND (itemsite_active)
 <? endif ?>
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (itemsite_plancode_id=plancode_id)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("plancode_id") ?>
    AND (plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
    AND (plancode_code ~ <? value("plancode_pattern") ?>)
 <? endif ?>
   )
 GROUP BY pstart, pend, period, plancode_code, warehous_code, f_uom
 ORDER BY pstart, plancode_code, warehous_code, f_uom;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: TimePhasedSalesHistoryByItem
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("prodcat_id") ?>
          (select (prodcat_code||'-'||prodcat_descrip) from prodcat where prodcat_id=<? value("prodcat_id") ?>)
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('All Product Categories')
        <? endif ?>
        AS prodcat,
        <? if exists("inventoryUnits") ?>
          text('UOM')
        <? else ?>
          text('')
        <? endif ?>
        AS lbl_uom,
        <? if exists("inventoryUnits") ?>
          text('Qty.')
        <? elseif exists("salesDollars") ?>
          text('Sales')
        <? else ?>
          text('ERROR')
        <? endif ?>
        AS lbl_unittype
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT findPeriodStart(rcalitem_id) AS pstart,
        findPeriodEnd(rcalitem_id) AS pend,
        (formatDate(findPeriodStart(rcalitem_id)) || '-' || formatDate(findPeriodEnd(rcalitem_id))) AS period,
        item_number,
        <? if exists("inventoryUnits") ?>
          uom_name
        <? else ?>
          text('')
        <? endif ?>
        AS f_uom,
        warehous_code,
        <? if exists("inventoryUnits") ?>
          formatExtPrice(shipmentsByItemQty(itemsite_id, rcalitem_id))
        <? else ?>
          formatExtPrice(shipmentsByItemValue(itemsite_id, rcalitem_id))
        <? endif ?>
        AS f_unit,
        <? if exists("inventoryUnits") ?>
          shipmentsByItemQty(itemsite_id, rcalitem_id)
        <? else ?>
          shipmentsByItemValue(itemsite_id, rcalitem_id)
        <? endif ?>
        AS unit
   FROM rcalitem, itemsite, item, uom, warehous
  WHERE ((rcalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                         ))
    AND (itemsite_warehous_id=warehous_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("prodcat_id") ?>
    AND (item_prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (item_prodcat_id IN ( SELECT prodcat_id
                                FROM prodcat
                               WHERE (prodcat_code ~ <? value("prodcat_pattern") ?>)))
 <? endif ?>
   )
  UNION
 SELECT findPeriodStart(acalitem_id) AS pstart,
        findPeriodEnd(acalitem_id) AS pend,
        (formatDate(findPeriodStart(acalitem_id)) || '-' || formatDate(findPeriodEnd(acalitem_id))) AS period,
        item_number,
        <? if exists("inventoryUnits") ?>
          uom_name
        <? else ?>
          text('')
        <? endif ?>
        AS f_uom,
        warehous_code,
        <? if exists("inventoryUnits") ?>
          formatExtPrice(shipmentsByItemQty(itemsite_id, acalitem_id))
        <? else ?>
          formatExtPrice(shipmentsByItemValue(itemsite_id, acalitem_id))
        <? endif ?>
        AS f_unit,
        <? if exists("inventoryUnits") ?>
          shipmentsByItemQty(itemsite_id, acalitem_id)
        <? else ?>
          shipmentsByItemValue(itemsite_id, acalitem_id)
        <? endif ?>
        AS unit
   FROM acalitem, itemsite, item, uom, warehous
  WHERE ((acalitem_id IN (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                         ))
    AND (itemsite_warehous_id=warehous_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("prodcat_id") ?>
    AND (item_prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (item_prodcat_id IN ( SELECT prodcat_id
                                FROM prodcat
                               WHERE (prodcat_code ~ <? value("prodcat_pattern") ?>)))
 <? endif ?>
   )
 ORDER BY pstart, item_number, warehous_code;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: TimePhasedSalesHistoryByProductCategory
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("prodcat_id") ?>
          (select (prodcat_code||'-'||prodcat_descrip) from prodcat where prodcat_id=<? value("prodcat_id") ?>)
        <? elseif exists("prodcat_pattern") ?>
          text(<? value("prodcat_pattern") ?>)
        <? else ?>
          text('All Product Categories')
        <? endif ?>
        AS prodcat,
        <? if exists("salesDollars") ?>
          text('')
        <? else ?>
          text('UOM')
        <? endif ?>
        AS lbl_uom,
        <? if exists("inventoryUnits") ?>
          text('Qty.')
        <? elseif exists("capacityUnits") ?>
          text('Capacity')
        <? elseif exists("altCapacityUnits") ?>
          text('Alt. Capacity')
        <? elseif exists("salesDollars") ?>
          text('Sales')
        <? else ?>
          text('ERROR')
        <? endif ?>
        AS lbl_unittype ;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT findPeriodStart(rcalitem_id) AS pstart,
        findPeriodEnd(rcalitem_id) AS pend,
        (formatDate(findPeriodStart(rcalitem_id)) || '-' || formatDate(findPeriodEnd(rcalitem_id))) AS period,
        prodcat_code,
        <? if exists("inventoryUnits") ?>
          uom_name
        <? elseif exists("capacityUnits") ?>
          itemcapuom(item_id)
        <? elseif exists("altCapacityUnits") ?>
          itemaltcapuom(item_id)
        <? else ?>
          text('')
        <? endif ?>
        AS f_uom,
        warehous_code,
        <? if exists("inventoryUnits") ?>
          formatExtPrice(SUM(shipmentsByItemQty(itemsite_id, rcalitem_id)))
        <? elseif exists("capacityUnits") ?>
          formatExtPrice(SUM(shipmentsByItemQty(itemsite_id, rcalitem_id) * itemcapinvrat(item_id)))
        <? elseif exists("altCapacityUnits") ?>
          formatExtPrice(SUM(shipmentsByItemQty(itemsite_id, rcalitem_id) * itemaltcapinvrat(item_id)))
        <? else ?>
          formatExtPrice(SUM(shipmentsByItemValue(itemsite_id, rcalitem_id)))
        <? endif ?>
        AS f_unit,
        <? if exists("inventoryUnits") ?>
          SUM(shipmentsByItemQty(itemsite_id, rcalitem_id))
        <? elseif exists("capacityUnits") ?>
          SUM(shipmentsByItemQty(itemsite_id, rcalitem_id) * itemcapinvrat(item_id))
        <? elseif exists("altCapacityUnits") ?>
          SUM(shipmentsByItemQty(itemsite_id, rcalitem_id) * itemaltcapinvrat(item_id))
        <? else ?>
          SUM(shipmentsByItemValue(itemsite_id, rcalitem_id))
        <? endif ?>
        AS unit
   FROM rcalitem, itemsite, item, uom, warehous, prodcat
  WHERE ((rcalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                         ))
    AND (itemsite_warehous_id=warehous_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (item_prodcat_id=prodcat_id)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("prodcat_id") ?>
    AND (prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (prodcat_code ~ <? value("prodcat_pattern") ?>)
 <? endif ?>
   )
 GROUP BY pstart, pend, period, prodcat_code, warehous_code, f_uom
  UNION
 SELECT findPeriodStart(acalitem_id) AS pstart,
        findPeriodEnd(acalitem_id) AS pend,
        (formatDate(findPeriodStart(acalitem_id)) || '-' || formatDate(findPeriodEnd(acalitem_id))) AS period,
        prodcat_code,
        <? if exists("inventoryUnits") ?>
          uom_name
        <? elseif exists("capacityUnits") ?>
          itemcapuom(item_id)
        <? elseif exists("altCapacityUnits") ?>
          itemaltcapuom(item_id)
        <? else ?>
          text('')
        <? endif ?>
        AS f_uom,
        warehous_code,
        <? if exists("inventoryUnits") ?>
          formatExtPrice(SUM(shipmentsByItemQty(itemsite_id, acalitem_id)))
        <? elseif exists("capacityUnits") ?>
          formatExtPrice(SUM(shipmentsByItemQty(itemsite_id, acalitem_id) * itemcapinvrat(item_id)))
        <? elseif exists("altCapacityUnits") ?>
          formatExtPrice(SUM(shipmentsByItemQty(itemsite_id, acalitem_id) * itemaltcapinvrat(item_id)))
        <? else ?>
          formatExtPrice(SUM(shipmentsByItemValue(itemsite_id, acalitem_id)))
        <? endif ?>
        AS f_unit,
        <? if exists("inventoryUnits") ?>
          SUM(shipmentsByItemQty(itemsite_id, acalitem_id))
        <? elseif exists("capacityUnits") ?>
          SUM(shipmentsByItemQty(itemsite_id, acalitem_id) * itemcapinvrat(item_id))
        <? elseif exists("altCapacityUnits") ?>
          SUM(shipmentsByItemQty(itemsite_id, acalitem_id) * itemaltcapinvrat(item_id))
        <? else ?>
          SUM(shipmentsByItemValue(itemsite_id, acalitem_id))
        <? endif ?>
        AS unit
   FROM acalitem, itemsite, item, uom, warehous, prodcat
  WHERE ((acalitem_id IN (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                         ))
    AND (itemsite_warehous_id=warehous_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (item_prodcat_id=prodcat_id)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("prodcat_id") ?>
    AND (prodcat_id=<? value("prodcat_id") ?>)
 <? elseif exists("prodcat_pattern") ?>
    AND (prodcat_code ~ <? value("prodcat_pattern") ?>)
 <? endif ?>
   )
 GROUP BY pstart, pend, period, prodcat_code, warehous_code, f_uom
 ORDER BY pstart, prodcat_code, warehous_code, f_uom;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: TimePhasedStatisticsByItem
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse
   FROM item
  WHERE (item_id=<? value("item_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT calitem_pstart AS pstart,
        calitem_pend AS pend,
        (formatDate(calitem_pstart) || '-' || formatDate(calitem_pend)) AS period,
        warehous_code,
        formatQty(summTransR(itemsite_id, calitem_id)) AS received,
        formatQty(summTransI(itemsite_id, calitem_id)) AS issued,
        formatQty(summTransS(itemsite_id, calitem_id)) AS sold,
        formatQty(summTransC(itemsite_id, calitem_id)) AS scrap,
        formatQty(summTransA(itemsite_id, calitem_id)) AS adjustments
   FROM itemsite, warehous,
 
        ( SELECT rcalitem_id as calitem_id,
                 findPeriodStart(rcalitem_id) as calitem_pstart,
                 findPeriodEnd(rcalitem_id) as calitem_pend
            FROM rcalitem
           WHERE (rcalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                  ))
           UNION
          SELECT acalitem_id as calitem_id,
                 findPeriodStart(acalitem_id) as calitem_pstart,
                 findPeriodEnd(acalitem_id) as calitem_pend
            FROM acalitem
           WHERE (acalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                  ))
        ORDER BY calitem_pstart, calitem_pend
        ) as calitem
 
  WHERE ((itemsite_warehous_id=warehous_id)
    AND (itemsite_item_id=<? value("item_id") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY calitem_pstart, warehous_code;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: TimePhasedStatisticsByItem
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse
   FROM item
  WHERE (item_id=<? value("item_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT calitem_pstart AS pstart,
        calitem_pend AS pend,
        (formatDate(calitem_pstart) || '-' || formatDate(calitem_pend)) AS period,
        warehous_code,
        formatQty(summTransR(itemsite_id, calitem_id)) AS received,
        formatQty(summTransI(itemsite_id, calitem_id)) AS issued,
        formatQty(summTransS(itemsite_id, calitem_id)) AS sold,
        formatQty(summTransC(itemsite_id, calitem_id)) AS scrap,
        formatQty(summTransA(itemsite_id, calitem_id)) AS adjustments
   FROM itemsite, warehous,
 
        ( SELECT rcalitem_id as calitem_id,
                 findPeriodStart(rcalitem_id) as calitem_pstart,
                 findPeriodEnd(rcalitem_id) as calitem_pend
            FROM rcalitem
           WHERE (rcalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                  ))
           UNION
          SELECT acalitem_id as calitem_id,
                 findPeriodStart(acalitem_id) as calitem_pstart,
                 findPeriodEnd(acalitem_id) as calitem_pend
            FROM acalitem
           WHERE (acalitem_id in (
 <? foreach("period_id_list") ?>
   <? if not isfirst("period_id_list") ?>
     ,
   <? endif ?>
   <? value("period_id_list") ?>
 <? endforeach ?>
                  ))
        ORDER BY calitem_pstart, calitem_pend
        ) as calitem
 
  WHERE ((itemsite_warehous_id=warehous_id)
    AND (itemsite_item_id=<? value("item_id") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY calitem_pstart, warehous_code;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: UniformBOL
 QUERY: head
 SELECT cosmisc_shipvia, formatDate(cosmisc_shipdate) AS shipdate,
                 cust_name, cust_number, cohead_number, cohead_fob, cohead_custponumber,
                 warehous_descrip, warehous_addr1, warehous_addr2, warehous_addr3, warehous_addr4, warehous_fob,
                 cohead_shiptoname, cohead_shiptoaddress1, cohead_shiptoaddress2, cohead_shiptoaddress3,
                 (cohead_shiptocity || ' ' || cohead_shiptostate || ' ' || cohead_shiptozipcode) AS shiptocitystatezip,
                 cohead_shiptophone
          FROM cosmisc, cohead, warehous, cust
          WHERE ((cosmisc_cohead_id=cohead_id)
           AND (cohead_cust_id=cust_id)
           AND (cohead_warehous_id=warehous_id)
           AND (cosmisc_id=%1));
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT 1 as one,
        coitem_linenumber,
        formatQty(SUM(coship_qty)) AS invqty,
        uom_name,
-       roundUp(SUM(coship_qty) / item_shipinvrat)::integer AS shipqty,
-       item_shipuom, item_number, item_descrip1, item_descrip2,
+       itemsellinguom(item_id) AS shipuom,
+       roundUp(SUM(coship_qty) / iteminvpricerat(item_id))::integer AS shipqty,
+       item_number, item_descrip1, item_descrip2,
        formatQty(SUM(coship_qty) * item_prodweight) AS netweight,
        formatQty(SUM(coship_qty) * (item_prodweight + item_packweight)) AS grossweight
   FROM coship, coitem, itemsite, item, uom
  WHERE ((coship_coitem_id=coitem_id)
    AND (coitem_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (coship_cosmisc_id=%1))
 GROUP BY coitem_linenumber, item_number,
-         uom_name, item_shipinvrat,
-         item_shipuom, item_descrip1,
+         uom_name, shipuom,
+         item_descrip1,
          item_descrip2, item_prodweight,
          item_packweight
 ORDER BY coitem_linenumber;
     
 --------------------------------------------------------------------
   
 QUERY: foot
 SELECT formatQty(SUM(coship_qty * item_prodweight)) AS netweight,
        formatQty(SUM(coship_qty * (item_prodweight + item_packweight))) AS grossweight             
   FROM coship, coitem, itemsite, item
  WHERE ((coship_coitem_id=coitem_id)
    AND (coitem_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (coship_cosmisc_id=%1));
 --------------------------------------------------------------------
   
 QUERY: notes
 SELECT cosmisc_notes
   FROM cosmisc
  WHERE (cosmisc_id=%1);
 --------------------------------------------------------------------
   
 QUERY: legal1
 SELECT 
        text('*If the shipment moves between two ports by carrier by water, the law requires that the Bill Of Lading shall state whether it is ''carrier''s or shipper''s weight''.\n\nNOTE: Where the rate is dependent on value, shippers are required to state specifically in writing the agreed or declared value of the property. The agreed or declared value of the property is hereby specifically stated by the shipper to be not exceeding:\n\n_________________________\n\nper ______________________') AS legal3
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: UninvoicedReceipts
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("agentUsername") ?>
        TEXT(<? value("agentUsername" ?>)
        <? else ?>
        TEXT('All Agents')
        <? endif ?>
        AS agentUsername;
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT porecv_id,
        formatDate(porecv_date) as f_date,
        getUsername(porecv_trans_usr_id) as f_user,
        porecv_ponumber AS f_ponumber, poitem_linenumber,
        vend_name, 
        COALESCE(item_number, ('Misc. - ' || porecv_vend_item_number)) AS item_number,
        formatQty(porecv_qty) as f_qty,
        'Receipt' AS f_type,
        porecv_value AS value,
        formatMoney(porecv_value) AS f_value
   FROM porecv
     LEFT OUTER JOIN itemsite ON (porecv_itemsite_id=itemsite_id)
     LEFT OUTER JOIN item ON (itemsite_item_id=item_id),
     poitem, vend
  WHERE ((porecv_poitem_id=poitem_id)
    AND  (porecv_vend_id=vend_id)
    AND  (porecv_posted)
    AND  (NOT porecv_invoiced)
 <? if exists("warehous_id") ?>
    AND  (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("agentUsername") ?>
    AND  (porecv_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
 )
 UNION
 SELECT poreject_id,
        formatDate(poreject_date) as f_date,
        getUsername(poreject_trans_usr_id) as f_user,
        poreject_ponumber AS f_ponumber, poitem_linenumber,
        vend_name, 
        COALESCE(item_number, ('Misc. - ' || poreject_vend_item_number)) AS item_number,
        formatQty(poreject_qty) as f_qty,
        'Return' AS f_type,
        poreject_value *-1 AS value,
        formatMoney(poreject_value*-1) AS f_value
   FROM poreject
     LEFT OUTER JOIN itemsite ON (poreject_itemsite_id=itemsite_id)
     LEFT OUTER JOIN item ON (itemsite_item_id=item_id),
     poitem, vend
  WHERE ((poreject_poitem_id=poitem_id)
 --   AND  (poreject_itemsite_id=itemsite_id)
 --   AND  (itemsite_item_id=item_id)
    AND  (poreject_vend_id=vend_id)
    AND  (poreject_posted)
    AND  (NOT poreject_invoiced)
 <? if exists("warehous_id") ?>
    AND  (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("agentUsername") ?>
    AND  (poreject_agent_username=<? value("agentUsername") ?>)
 <? endif ?>
 )
 ORDER BY f_ponumber, poitem_linenumber;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: UninvoicedShipments
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse;
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT cohead_id, coship_id, cohead_number, coitem_linenumber,
        item_number, item_descrip1, item_descrip2,
        uom_name,
        formatQty(SUM(coship_qty)) AS f_shipped,
        formatQty(COALESCE(SUM(cobill_qty), 0)) AS f_selected
 FROM cohead, itemsite, item, uom,
      warehous, coship, cosmisc,
      coitem LEFT OUTER JOIN
       ( cobill JOIN cobmisc
         ON ( (cobill_cobmisc_id=cobmisc_id) AND (NOT cobmisc_posted) ) )
      ON (cobill_coitem_id=coitem_id)
 WHERE ( (coship_coitem_id=coitem_id)
  AND (coship_cosmisc_id=cosmisc_id)
  AND (coitem_cohead_id=cohead_id)
  AND (coitem_itemsite_id=itemsite_id)
  AND (coitem_qty_uom_id=uom_id)
  AND (itemsite_item_id=item_id)
  AND (itemsite_warehous_id=warehous_id)
  AND (cosmisc_shipped)
  AND (NOT coship_invoiced)
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
  )
 GROUP BY cohead_number, coitem_id, coitem_linenumber, item_number,
          item_descrip1, item_descrip2, cohead_id, coship_id, uom_name;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: UnpostedPoReceipts
 QUERY: detail
-SELECT porecv_id, porecv_poitem_id, porecv_ponumber,
-       (vend_number || '-' || vend_name) AS vend_number,
-       poitem_linenumber,
-       formatDate(porecv_duedate) AS porecv_duedate,
-       COALESCE(item_number, 'Non-Inventory') AS item_number,
-       COALESCE(uom_name, 'N/A') AS uom_name,
-       porecv_vend_item_number,
-       porecv_vend_uom,
-       formatQty(poitem_qty_ordered) AS poitem_qty_ordered,
-       formatQty(poitem_qty_received) AS poitem_qty_received,
-       formatQty(porecv_qty) AS porecv_qty,
-       formatDate(porecv_date) AS porecv_date,
-       formatDate(COALESCE(porecv_gldistdate, porecv_date)) AS porecv_gldistdate,
-      poitem_pohead_id 
-FROM vend, pohead, poitem, porecv LEFT OUTER JOIN 
-     (itemsite JOIN item ON (itemsite_item_id=item_id) JOIN uom ON (item_inv_uom_id=uom_id))
-      ON (porecv_itemsite_id=itemsite_id)
-WHERE ( (porecv_poitem_id=poitem_id)
-  AND   (NOT porecv_posted)
-  AND   (poitem_pohead_id=pohead_id)
-  AND   (pohead_vend_id=vend_id))
-ORDER BY porecv_ponumber, poitem_linenumber;
+SELECT recv_id, recv_orderitem_id, recv_order_number, recv_order_type,
+       orderhead_from,
+       orderitem_linenumber,
+       formatDate(recv_duedate) AS recv_duedate,
+       warehous_code,
+       COALESCE(item_number, <? value("nonInventory") ?>) AS item_number,
+       COALESCE(uom_name, <? value("na") ?>) AS uom_name,
+       recv_vend_item_number,
+       recv_vend_uom,
+       formatQty(orderitem_qty_ordered)  AS qty_ordered,
+       formatQty(orderitem_qty_received) AS qty_received,
+       formatQty(recv_qty)     AS recv_qty,
+       formatDate(recv_date)   AS recv_date,
+       formatDate(COALESCE(recv_gldistdate, recv_date)) AS recv_gldistdate
+FROM orderhead JOIN
+     orderitem ON ((orderitem_orderhead_id=orderhead_id)
+	       AND (orderitem_orderhead_type=orderhead_type)) JOIN 
+     recv  ON ((recv_orderitem_id=orderitem_id)
+	   AND (recv_order_type=orderitem_orderhead_type)) LEFT OUTER JOIN
+     (itemsite JOIN item ON (itemsite_item_id=item_id)
+	       JOIN uom ON (item_inv_uom_id=uom_id)
+               JOIN site() ON (itemsite_warehous_id=warehous_id)
+       )
+      ON (recv_itemsite_id=itemsite_id) LEFT OUTER JOIN
+     vend ON (orderhead_type='PO' AND orderhead_from_id=vend_id)
+WHERE (NOT recv_posted)
+ORDER BY orderhead_from, recv_order_number, orderitem_linenumber;
+
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: UsageStatisticsByClassCode
 QUERY: head
 SELECT <? if exists("classcode_id") ?>
          ( SELECT (classcode_code || '-' || classcode_descrip)
              FROM classcode
             WHERE (classcode_id=<? value("classcode_id") ?>) )
        <? elseif exists("classcode_pattern") ?>
          text(<? value("classcode_pattern") ?>)
        <? else ?>
          text('All Class Codes')
        <? endif ?>
        AS classcode,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT warehous_code,
        item_number,
        item_descrip1,
        item_descrip2,
        formatQty(summTransR(itemsite_id, <? value("startDate") ?>, <? value("endDate")?>)) AS f_received,
        formatQty(summTransI(itemsite_id, <? value("startDate") ?>, <? value("endDate")?>)) AS f_issued,
        formatQty(summTransS(itemsite_id, <? value("startDate") ?>, <? value("endDate")?>)) AS f_sold,
        formatQty(summTransC(itemsite_id, <? value("startDate") ?>, <? value("endDate")?>)) AS f_scrap,
        formatQty(summTransA(itemsite_id, <? value("startDate") ?>, <? value("endDate")?>)) AS f_adjustments
   FROM item, itemsite, warehous
  WHERE ((itemsite_item_id=item_id)
    AND (itemsite_warehous_id=warehous_id)
 <? if exists("classcode_id") ?>
    AND (item_classcode_id=<? value("classcode_id") ?>)
 <? elseif exists("classcode_pattern") ?>
    AND (item_classcode_id IN (SELECT classcode_id
                                 FROM classcode
                                WHERE (classcode_code ~ <? value("classcode_pattern") ?>)))
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY warehous_code, item_number;
 
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: UsageStatisticsByItem
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse
   FROM item
  WHERE (item_id=<? value("item_id") ?>);
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT itemsite_id,
        warehous_code,
        formatQty(summTransR(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>)) AS f_received,
        formatQty(summTransI(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>)) AS f_issued,
        formatQty(summTransS(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>)) AS f_sold,
        formatQty(summTransC(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>)) AS f_scrap,
        formatQty(summTransA(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>)) AS f_adjustments
   FROM itemsite, warehous
  WHERE ((itemsite_warehous_id=warehous_id)
    AND (itemsite_item_id=<? value("item_id") ?>)
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY warehous_code;
 
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: UsageStatisticsByItemGroup
 QUERY: head
 SELECT formatDate(<? value("startDate") ?>) AS startdate,
        formatDate(<? value("endDate") ?>) AS enddate,
        <? if exists("itemgrp_id") ?>
          ( SELECT (itemgrp_name || '-' || itemgrp_descrip)
              FROM itemgrp
             WHERE (itemgrp_id=<? value("itemgrp_id") ?>) )
        <? elseif exists("itemgrp_pattern") ?>
          text(<? value("itemgrp_pattern") ?>)
        <? else ?>
          text('All Item Groups')
        <? endif ?>
        AS itemgroup,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse;
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT warehous_code,
        item_number,
        item_descrip1,
        item_descrip2,
        formatQty(summTransR(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>)) AS f_received,
        formatQty(summTransI(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>)) AS f_issued,
        formatQty(summTransS(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>)) AS f_sold,
        formatQty(summTransC(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>)) AS f_scrap,
        formatQty(summTransA(itemsite_id, <? value("startDate") ?>, <? value("endDate") ?>)) AS f_adjustments
   FROM item, itemsite, warehous, itemgrp, itemgrpitem
  WHERE ((itemsite_item_id=item_id)
    AND (itemsite_warehous_id=warehous_id)
    AND (itemgrpitem_itemgrp_id=itemgrp_id)
    AND (itemgrpitem_item_id=item_id)
 <? if exists("itemgrp_id") ?>
    AND (itemgrp_id=<? value("itemgrp_id") ?>)
 <? elseif exists("itemgrp_pattern") ?>
    AND (itemgrp_name ~ <? value("itemgrp_pattern") ?>)
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY warehous_code, item_number;
 
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ValidLocationsByItem
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
                    FROM warehous
                    WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse
   FROM item
  WHERE (item_id=<? value("item_id") ?>);
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT warehous_code,
        formatLocationName(location_id) AS locationname,
        firstLine(location_descrip) as f_descrip,
        text('No') AS restricted,
        CASE WHEN (location_netable) THEN text('Yes')
             ELSE text('No')
        END AS netable
   FROM itemsite, location, warehous
  WHERE ((itemsite_warehous_id=location_warehous_id)
    AND (itemsite_item_id=<? value("item_id") ?>)
    AND (location_warehous_id=warehous_id)
    AND (NOT location_restrict)
 <? if exists("warehous_id") ?>
    AND (warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 UNION
 SELECT warehous_code,
        formatLocationName(location_id) AS locationname,
        firstLine(location_descrip) as f_descrip,
        text('Yes') AS restricted,
        CASE WHEN (location_netable) THEN text('Yes')
             ELSE text('No')
        END AS netable
   FROM location, warehous, locitem
  WHERE ((locitem_location_id=location_id)
    AND (location_warehous_id=warehous_id)
    AND (location_restrict)
    AND (locitem_item_id=<? value("item_id") ?>)
 <? if exists("warehous_id") ?>
    AND (warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 )
 ORDER BY warehous_code, locationname;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: ViewAPCheckRunEditList
 QUERY: detail
 SELECT checkhead_amount AS amt_check,
+       currtobase(checkhead_curr_id,checkhead_amount,checkhead_checkdate) AS base_amt_check,
        checkhead_id AS primaryid,
        -1 AS secondaryid,
        formatBoolYN(checkhead_void) AS f_void,
        formatBoolYN(checkhead_printed) AS f_printed,
        TEXT(checkhead_number) AS number,
        (checkrecip_number || '-' || checkrecip_name) AS description,
        formatDate(checkhead_checkdate) AS f_checkdate,
        formatMoney(checkhead_amount) AS f_amount,
+       formatMoney(currtobase(checkhead_curr_id,checkhead_amount,checkhead_checkdate)) AS f_baseamount,
+       currconcat(checkhead_curr_id) AS currAbbr,
        checkhead_number,
        1 AS orderby
   FROM checkhead LEFT OUTER JOIN
        checkrecip ON ((checkrecip_id=checkhead_recip_id)
 		 AND  (checkrecip_type=checkhead_recip_type))
  WHERE ((checkhead_bankaccnt_id=<? value("bankaccnt_id") ?>)
    AND  (NOT checkhead_posted)
    AND  (NOT checkhead_replaced)
    AND  (NOT checkhead_deleted) )
 
 UNION SELECT 0 AS amt_check,
+             0 AS base_amt_check,
              checkitem_checkhead_id AS primaryid,
              checkitem_id AS secondaryid,
              '' AS f_void,
              '' AS f_printed,
              CASE WHEN (checkitem_ranumber IS NOT NULL) THEN checkitem_ranumber::TEXT
 	          ELSE checkitem_vouchernumber
 	     END AS number,
              CASE WHEN (checkitem_cmnumber IS NOT NULL) THEN checkitem_cmnumber::TEXT
 	          ELSE checkitem_invcnumber
 	     END AS description,
              '' AS f_checkdate,
              formatMoney(checkitem_amount) AS f_amount,
+             formatMoney(currtobase(checkitem_curr_id,checkitem_amount,checkhead_checkdate)) AS f_baseamount,
+             currconcat(checkitem_curr_id) AS currAbbr,
 	     checkhead_number,
              2 AS orderby
         FROM checkitem, checkhead
        WHERE ( (checkitem_checkhead_id=checkhead_id)
          AND (checkhead_bankaccnt_id=<? value("bankaccnt_id") ?>)
          AND (NOT checkhead_posted)
          AND (NOT checkhead_replaced)
          AND (NOT checkhead_deleted) )
 
 ORDER BY checkhead_number, primaryid, orderby;
 --------------------------------------------------------------------
   
 QUERY: head
 SELECT (bankaccnt_name || '-' || bankaccnt_descrip) AS bankaccnt
   FROM bankaccnt
  WHERE (bankaccnt_id=<? value("bankaccnt_id") ?>);
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: WOHistoryByClassCode
 QUERY: Detail
 SELECT formatWoNumber(wo_id) AS wonumber,
        wo_status, warehous_code,
        item_number, item_descrip1, item_descrip2, uom_name,
        formatQty(wo_qtyord) AS ordered,
        formatQty(wo_qtyrcv) AS received,
        formatDate(wo_startdate) AS startdate,
        formatDate(wo_duedate) AS duedate,
        <? if exists("showCosts") ?>
          formatCost(wo_postedvalue)
        <? else ?>
          text('')
        <? endif ?>
        AS value
   FROM wo, itemsite, warehous, item, uom
  WHERE ((wo_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (itemsite_warehous_id=warehous_id)
 <? if exists("classcode_id") ?>
    AND (item_classcode_id=<? value("classcode_id") ?>)
 <? elseif exists("classcode_pattern") ?>
    AND (item_classcode_id IN (SELECT classcode_id FROM classcode WHERE (classcode_code ~ <? value("classcode_pattern") ?>)))
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 <? if exists("showOnlyTopLevel") ?>
    AND ((wo_ordtype<>'W') OR (wo_ordtype IS NULL))
 <? endif ?>
  )
 ORDER BY item_number;
     
 --------------------------------------------------------------------
   
 QUERY: head
 SELECT <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("classcode_id") ?>
          ( SELECT (classcode_code||'-'||classcode_descrip)
              FROM classcode
             WHERE (classcode_id=<? value("classcode_id") ?>) )
        <? elseif exists("classcode_pattern") ?>
          text(<? value("classcode_pattern") ?>)
        <? else ?>
          text('All Class Codes')
        <? endif ?>
        AS classcode,
        <? if exists("showOnlyTopLevel") ?>
          text('Only Show Top level Work Orders')
        <? else ?>
          text('')
        <? endif ?>
        AS lbl_toplevel;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: WOHistoryByItem
 QUERY: Detail
 SELECT formatWONumber(wo_id) AS wonumber,
        wo_status, warehous_code,
        formatQty(wo_qtyord) AS ordered,
        formatQty(wo_qtyrcv) AS received,
        formatDate(wo_startdate) AS startdate,
        formatDate(wo_duedate) AS duedate,
        <? if exists("showCosts") ?>
          formatCost(wo_postedvalue)
        <? else ?>
          text('')
        <? endif ?>
        AS value
   FROM wo, itemsite, warehous
  WHERE ((wo_itemsite_id=itemsite_id)
    AND (itemsite_warehous_id=warehous_id)
    AND (itemsite_item_id=<? value("item_id") ?>)
 <? if exists("showOnlyTopLevel") ?>
    AND ((wo_ordtype<>'W') OR (wo_ordtype IS NULL))
 <? endif ?>
 <? if exists("warehous_id") ?>
    AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
    AND (wo_duedate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>) )
 ORDER BY wo_startdate DESC, wo_number, wo_subnumber;
     
 --------------------------------------------------------------------
   
 QUERY: head
 SELECT item_number,
        item_descrip1,
        item_descrip2,
        <? if exists("warehous_id") ?>
          (SELECT warehous_code
             FROM warehous
            WHERE (warehous_id=<? value("warehous_id") ?>))
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse,
        <? if exists("showOnlyTopLevel") ?>
          text('Only Show Top Level Work Orders')
        <? else ?>
          text('')
        <? endif ?>
        AS lbl_toplevel,
        <? if exists("showCosts") ?>
          text('Cost')
        <? else ?>
          text('')
        <? endif ?>
        AS lbl_cost,
        formatDate(<? value("startDate") ?>, 'Earliest') AS startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS enddate
   FROM item
  WHERE (item_id=<? value("item_id") ?>);
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: WOHistoryByNumber
 QUERY: Detail
-SELECT wo_subnumber AS subnumber,
+SELECT formatWoNumber(wo_id) AS number,
+       wo_subnumber AS subnumber,
        wo_status, warehous_code,
        item_number, item_descrip1, item_descrip2, uom_name,
        formatQty(wo_qtyord) AS ordered,
        formatQty(wo_qtyrcv) AS received,
        formatDate(wo_startdate) AS startdate,
        formatDate(wo_duedate) AS duedate,
        <? if exists("showCosts") ?>
          formatCost(wo_postedvalue)
        <? else ?>
          text('')
        <? endif ?>
        AS value
   FROM wo, itemsite, warehous, item, uom
  WHERE ((wo_itemsite_id=itemsite_id)
    AND (itemsite_item_id=item_id)
    AND (item_inv_uom_id=uom_id)
    AND (itemsite_warehous_id=warehous_id)
-   AND (wo_number=<? value("woNumber") ?>)
+   AND (CAST(wo_number AS TEXT) ~ <? value("woNumber") ?>)
 <? if exists("showOnlyTopLeve") ?>
    AND ((wo_ordtype<>'W') OR (wo_ordtype IS NULL))
 <? endif ?>
  )
 ORDER BY wo_subnumber;
     
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: WOMaterialRequirementsByComponentItem
 QUERY: head
 SELECT item_number, item_descrip1, item_descrip2,
        <? if exists("warehous_id") ?>
          ( SELECT warehous_code
              FROM warehous
             WHERE (warehous_id=<? value("warehous_id") ?>) )
        <? else ?>
-         text('All Warehouses')
+         text('All Sites')
        <? endif ?>
        AS warehouse
   FROM item
  WHERE (item_id=<? value("item_id") ?>);
 
 --------------------------------------------------------------------
   
 QUERY: detail
 SELECT formatWONumber(wo_id) AS wonumber,
                item_number, item_descrip1, item_descrip2,
                CASE WHEN (womatl_issuemethod='S') THEN 'Push'
                          WHEN (womatl_issuemethod='L') THEN 'Pull'
                          WHEN (womatl_issuemethod='M') THEN 'Mixed'
                          ELSE 'Error'
                 END AS issuemethod,
                 uom_name,
                 formatQty(womatl_qtyper) AS qtyper,
                 formatScrap(womatl_scrap) AS scrappercent,
                 formatQty(womatl_qtyreq) AS required,
                 formatQty(womatl_qtyiss) AS issued,
                 formatQty(noNeg(womatl_qtyreq - womatl_qtyiss)) AS balance,
                 formatDate(womatl_duedate) AS duedate
     FROM wo, womatl, itemsite AS parentsite, itemsite AS componentsite, item, uom
 WHERE ((womatl_wo_id=wo_id)
        AND (womatl_uom_id=uom_id)
        AND (wo_status <> 'C')
        AND (wo_itemsite_id=parentsite.itemsite_id)
        AND (womatl_itemsite_id=componentsite.itemsite_id)
        AND (parentsite.itemsite_item_id=item_id)
        AND (componentsite.itemsite_item_id=<? value("item_id") ?>)
 <? if exists("warehous_id") ?>
        AND (componentsite.itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
  )
 ORDER BY wo_startdate;
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: WOScheduleByParameterList
 QUERY: Detail
 SELECT formatWONumber(wo_id) AS wonumber,
        wo_status, warehous_code, item_number, item_descrip1, item_descrip2, uom_name,
        formatQty(wo_qtyord) AS ordered,
        formatQty(wo_qtyrcv) AS received,
        formatDate(wo_startdate) AS startdate,
        formatDate(wo_duedate) AS duedate
 FROM wo, itemsite, warehous, item, uom
 WHERE ( (wo_itemsite_id=itemsite_id)
  AND (itemsite_item_id=item_id)
  AND (item_inv_uom_id=uom_id)
  AND (itemsite_warehous_id=warehous_id)
 
 <? if exists("showOnlyRI") ?>
  AND (wo_status IN ('R', 'I'))
 <? else ?>
  AND (wo_status <> 'C')
 <? endif ?>
 
 <? if exists("showOnlyTopLevel") ?>
  AND (wo_ordtype<>'W')
 <? endif ?>
 
 <? if exists("warehous_id") ?>
  AND (itemsite_warehous_id=<? value("warehous_id") ?>)
 <? endif ?>
 
 <? if exists("item_id") ?>
  AND (itemsite_item_id=<? value("item_id") ?>)
 <? elseif exists("wo_id") ?>
  AND (wo_number IN (SELECT wo_number
                     FROM wo
                     WHERE (wo_id=<? value("wo_id") ?>)))
 <? endif ?>
 
 <? if exists("plancode_id") ?>
  AND (itemsite_plancode_id=<? value("plancode_id") ?>)
 <? elseif exists("plancode_pattern") ?>
  AND (itemsite_plancode_id IN (SELECT plancode_id FROM plancode WHERE (plancode_code ~ <? value("plancode_pattern") ?>)))
 <? endif ?>
 
 <? if exists("classcode_id") ?>
  AND (item_classcode_id=<? value("classcode_id") ?>)
 <? elseif exists("classcode_pattern") ?>
  AND (item_classcode_id IN (SELECT classcode_id FROM classcode WHERE (classcode_code ~ <? value("classcode_pattern") ?>)))
 <? endif ?>
 
 <? if exists("itemgrp_id") ?>
  AND (item_id IN (SELECT itemgrpitem_item_id FROM itemgrpitem WHERE (itemgrpitem_itemgrp_id=<? value("itemgrp_id") ?>)))
 <? elseif exists("itemgrp_pattern") ?>
  AND (item_id IN (SELECT itemgrpitem_item_id FROM itemgrpitem, itemgrp WHERE ( (itemgrpitem_itemgrp_id=itemgrp_id) AND (itemgrp_name ~ <? value("itemgrp_pattern") ?>) )))
 <? endif ?>
 
 <? if exists("wrkcnt_id") ?>
  AND (wo_id IN (SELECT wooper_wo_id FROM wooper WHERE (wooper_wrkcnt_id=<? value("wrkcnt_id") ?>)))
 <? elseif exists("wrkcnt_pattern") ?>
  AND (wo_id IN (SELECT wooper_wo_id FROM wooper, wrkcnt WHERE ( (wooper_wrkcnt_id=wrkcnt_id) AND (wrkcnt_code ~ <? value("wrkcnt_pattern") ?>) )))
 <? endif ?>
 
  AND (wo_duedate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>) )
 ORDER BY
 
 <? if exists("sortByStartDate") ?>
   wo_startdate,
 <? elseif exists("sortByDueDate") ?>
   wo_duedate,
 <? elseif exists("sortByItemNumber") ?>
   item_number,
 <? endif ?>
 
   wo_number, wo_subnumber;
     
 --------------------------------------------------------------------
   
 QUERY: Head
 SELECT formatDate(<? value("startDate") ?>, 'Earliest') AS f_startdate,
        formatDate(<? value("endDate") ?>, 'Latest') AS f_enddate,
 <? if exists("warehous_id") ?>
        warehous_code
 FROM warehous
 WHERE (warehous_id=<? value("warehous_id") ?>);
 <? else ?>
-       TEXT('All Warehouses') AS warehous_code;
+       TEXT('All Sites') AS warehous_code;
 <? endif ?>
 
 --------------------------------------------------------------------
   
 QUERY: TypeCodeParam
 SELECT
 <? if exists("classcode_id") ?>
   TEXT('Class Code:')
 <? elseif exists("classcode_pattern") ?>
   TEXT('Class Code Pattern:')
 <? elseif exists("plancode_id") ?>
   TEXT('Planner Code:')
 <? elseif exists("plancode_pattern") ?>
   TEXT('Planner Code Pattern:')
 <? elseif exists("itemgrp_id') ?>
   TEXT('Item Group:')
 <? elseif exists("itemgrp_pattern") ?>
   TEXT('Item Group Pattern:')
 <? elseif exists("wrkcnt_id") ?>
   TEXT('Work Center:')
 <? elseif exists("wrkcnt_pattern") ?>
   TEXT('Work Center Pattern:')
 <? else ?>
   TEXT('')
 <? endif ?> AS type,
 <? if exists("classcode_id") ?>
   (SELECT (classcode_code||'-'||classcode_descrip) FROM classcode WHERE (classcode_id=<? value("classcode_id") ?>))
 <? elseif exists("classcode_pattern") ?>
   TEXT(<? value("classcode_pattern") ?>)
 <? elseif exists("plancode_id") ?>
   (SELECT (plancode_code||'-'||plancode_name) FROM plancode WHERE (plancode_id=<? value("plancode_id") ?>))
 <? elseif exists("plancode_pattern") ?>
   TEXT(<? value("plancode_pattern") ?>)
 <? elseif exists("itemgrp_id') ?>
   (SELECT (itemgrp_name||'-'||itemgrp_descrip) FROM itemgrp WHERE (itemgrp_id=<? value("itemgrp_id") ?>))
 <? elseif exists("itemgrp_pattern") ?>
   TEXT(<? value("itemgrp_pattern") ?>)
 <? elseif exists("wrkcnt_id") ?>
   (SELECT (wrkcnt_code||'-'||wrkcnt_descrip) FROM wrkcnt WHERE (wrkcnt_id=<? value("wrkcnt_id") ?>))
 <? elseif exists("wrkcnt_pattern") ?>
   TEXT(<? value("wrkcnt_pattern") ?>)
 <? else ?>
   TEXT('')
 <? endif ?> AS code;
 --------------------------------------------------------------------
   
 QUERY: ItemParameter
 SELECT
 <? if exits("item_id") ?>
   item_number
 FROM item
 WHERE (item_id=<? value("item_id") ?>);
 <? else ?>
   TEXT('All') AS item_number;
 <? endif ?>
 --------------------------------------------------------------------
   
\ No newline at end of file
 
 ====================================================================
 REPORT: WarehouseMasterList
 QUERY: detail
 SELECT warehous_code,
        formatBoolYN(warehous_active) AS f_active,
        warehous_descrip,
-       warehous_addr1,
-       warehous_addr2,
-       warehous_addr3,
-       warehous_addr4,
+       addr_line1 AS warehous_addr1,
+       addr_line2 AS warehous_addr2,
+       addr_line3 AS warehous_addr3,
+       (addr_city || ',' || addr_state || ' ' || addr_postalcode) AS warehous_addr4,
        warehous_fob,
        warehous_bol_prefix,
        warehous_bol_number,
        formatBoolYN(warehous_shipping) AS f_shipping,
        warehous_counttag_prefix,
        warehous_counttag_number,
        formatBoolYN(warehous_useslips) as f_useslips
-  FROM warehous
+  FROM site() JOIN addr ON (addr_id=warehous_addr_id)
+LEFT OUTER JOIN sitetype ON (sitetype_id=warehous_sitetype_id) 
+WHERE ((TRUE)
 <? if NOT exists("showInactive") ?>
- WHERE (warehous_active)
+  AND (warehous_active) 
 <? endif ?>
-ORDER BY warehous_code;
+) ORDER BY warehous_code;
 --------------------------------------------------------------------
   
 QUERY: head
 SELECT <? if exists("showInactive") ?>
          text('Showing Active and Inactive Warehouses')
        <? else ?>
          text('Showing Active Warehouses')
        <? endif ?>
        AS f_show;
 --------------------------------------------------------------------
   
\ No newline at end of file
